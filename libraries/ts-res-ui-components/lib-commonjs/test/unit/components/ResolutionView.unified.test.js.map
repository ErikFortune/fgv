{"version":3,"file":"ResolutionView.unified.test.js","sourceRoot":"","sources":["../../../../src/test/unit/components/ResolutionView.unified.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { ResolutionView } from '../../../components/views/ResolutionView';\nimport { Runtime } from '@fgv/ts-res';\nimport { createTsResSystemFromConfig } from '../../../utils/tsResIntegration';\n\nfunction buildProcessedResources() {\n  const system = createTsResSystemFromConfig().orThrow();\n  const compiledCollection = system.resourceManager\n    .getCompiledResourceCollection({ includeMetadata: true })\n    .orThrow();\n  const resolver = Runtime.ResourceResolver.create({\n    resourceManager: system.resourceManager,\n    qualifierTypes: system.qualifierTypes,\n    contextQualifierProvider: system.contextQualifierProvider\n  }).orThrow();\n  const resourceIds = Array.from(system.resourceManager.resources.keys());\n  return {\n    system,\n    compiledCollection,\n    resolver,\n    resourceCount: resourceIds.length,\n    summary: { totalResources: resourceIds.length, resourceIds, errorCount: 0, warnings: [] }\n  } as any;\n}\n\nfunction makeStateActions(overrides: Partial<any> = {}) {\n  const state = {\n    contextValues: {},\n    pendingContextValues: {},\n    selectedResourceId: null,\n    currentResolver: {} as any,\n    resolutionResult: null,\n    viewMode: 'composed',\n    hasPendingChanges: false,\n    editedResources: new Map(),\n    hasUnsavedEdits: false,\n    isApplyingEdits: false,\n    pendingResources: new Map(),\n    pendingResourceDeletions: new Set<string>(),\n    availableResourceTypes: [],\n    hasPendingResourceChanges: false,\n    ...overrides.state\n  };\n  const actions = {\n    setViewMode: jest.fn(),\n    updateContextValue: jest.fn(),\n    applyContext: jest.fn(),\n    resetCache: jest.fn(),\n    selectResource: jest.fn(),\n    saveNewResourceAsPending: jest.fn(),\n    startNewResource: jest.fn(),\n    cancelNewResource: jest.fn(),\n    applyPendingResources: jest.fn(),\n    discardPendingResources: jest.fn(),\n    discardEdits: jest.fn(),\n    ...overrides.actions\n  };\n  return { state, actions };\n}\n\ndescribe('ResolutionView unified changes', () => {\n  it('shows Pending Changes when there are edits/additions and calls unified apply', () => {\n    const { state, actions } = makeStateActions({\n      state: {\n        hasUnsavedEdits: true,\n        editedResources: new Map([['r1', {} as any]]),\n        hasPendingResourceChanges: true,\n        pendingResources: new Map([['new.res', { id: 'new.res', candidates: [{}] } as any]])\n      }\n    });\n\n    const processed = buildProcessedResources();\n    render(\n      <ResolutionView\n        resources={processed}\n        resolutionState={state}\n        resolutionActions={actions}\n        availableQualifiers={['language']}\n        contextOptions={{ showContextControls: false }}\n      />\n    );\n\n    // Pending Changes bar present\n    expect(screen.getByText(/Pending Changes/i)).toBeInTheDocument();\n\n    // Apply Changes triggers unified applyPendingResources\n    fireEvent.click(screen.getByRole('button', { name: /Apply Changes/i }));\n    expect(actions.applyPendingResources).toHaveBeenCalled();\n  });\n\n  it('respects lockedViewMode and custom sectionTitles', () => {\n    const { state, actions } = makeStateActions();\n    const processed = buildProcessedResources();\n    render(\n      <ResolutionView\n        resources={processed}\n        resolutionState={state}\n        resolutionActions={actions}\n        availableQualifiers={['language']}\n        lockedViewMode=\"best\"\n        sectionTitles={{ resources: 'Items', results: 'Output' }}\n        contextOptions={{ showContextControls: false }}\n      />\n    );\n\n    expect(screen.getByText('Items')).toBeInTheDocument();\n    expect(screen.getByText('Output')).toBeInTheDocument();\n    expect(screen.getByText(/Best View/)).toBeInTheDocument();\n  });\n});\n"]}