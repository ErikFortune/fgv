{"version":3,"file":"resolutionUtils.js","sourceRoot":"","sources":["../../src/utils/resolutionUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Result, succeed, fail } from '@fgv/ts-utils';\nimport { Runtime } from '@fgv/ts-res';\nimport { ProcessedResources, ResolutionResult, CandidateInfo, ConditionEvaluationResult } from '../types';\n\nexport interface ResolutionOptions {\n  enableCaching?: boolean;\n  enableDebugLogging?: boolean;\n}\n\n// Helper function for conditional debug logging\nconst debugLog = (enableDebug: boolean, ...args: any[]) => {\n  if (enableDebug) {\n    console.log(...args);\n  }\n};\n\n/**\n * Create a resolver with context for resource resolution\n */\nexport function createResolverWithContext(\n  processedResources: ProcessedResources,\n  contextValues: Record<string, string | undefined>,\n  options: ResolutionOptions = {}\n): Result<Runtime.ResourceResolver> {\n  const enableDebug = options.enableDebugLogging === true;\n\n  debugLog(enableDebug, '=== CREATING RESOLVER WITH CONTEXT ===');\n  debugLog(enableDebug, 'Context values:', contextValues);\n\n  try {\n    // Create context provider with filtered values (remove undefined)\n    const filteredContext = Object.fromEntries(\n      Object.entries(contextValues).filter(([, value]) => value !== undefined)\n    ) as Record<string, string>;\n\n    const contextProviderResult = Runtime.ValidatingSimpleContextQualifierProvider.create({\n      qualifiers: processedResources.system.qualifiers\n    });\n\n    if (contextProviderResult.isFailure()) {\n      return fail(`Failed to create context provider: ${contextProviderResult.message}`);\n    }\n\n    const contextProvider = contextProviderResult.value;\n\n    // Set context values\n    for (const [qualifierName, value] of Object.entries(filteredContext)) {\n      try {\n        contextProvider.set(qualifierName as any, value as any);\n      } catch (error) {\n        return fail(\n          `Failed to set context value ${qualifierName}=${value}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n      }\n    }\n\n    // Create resolver\n    const resolverParams: any = {\n      resourceManager: processedResources.system.resourceManager,\n      qualifierTypes: processedResources.system.qualifierTypes,\n      contextQualifierProvider: contextProvider\n    };\n\n    // Add cache metrics listener if caching is enabled\n    if (options.enableCaching) {\n      const metricsListener = new Runtime.ResourceResolverCacheMetricsListener(\n        () => new Runtime.AggregateCacheMetrics()\n      );\n      resolverParams.listener = metricsListener;\n    }\n\n    const resolverResult = Runtime.ResourceResolver.create(resolverParams);\n\n    if (resolverResult.isFailure()) {\n      return fail(`Failed to create resolver: ${resolverResult.message}`);\n    }\n\n    debugLog(enableDebug, 'Resolver created successfully');\n    return succeed(resolverResult.value);\n  } catch (error) {\n    return fail(`Failed to create resolver: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\n/**\n * Evaluate conditions for a specific candidate\n */\nexport function evaluateConditionsForCandidate(\n  resolver: Runtime.ResourceResolver,\n  candidateIndex: number,\n  compiledResource: any,\n  compiledCollection: any\n): ConditionEvaluationResult[] {\n  try {\n    const decision = compiledCollection.decisions[compiledResource.decision];\n    if (!decision || !decision.conditionSets || candidateIndex >= decision.conditionSets.length) {\n      return [];\n    }\n\n    const conditionSetIndex = decision.conditionSets[candidateIndex];\n    const conditionSet = compiledCollection.conditionSets[conditionSetIndex];\n    if (!conditionSet || !conditionSet.conditions) {\n      return [];\n    }\n\n    const evaluations: ConditionEvaluationResult[] = [];\n\n    for (const conditionIndex of conditionSet.conditions) {\n      const condition = compiledCollection.conditions[conditionIndex];\n      if (!condition) continue;\n\n      const qualifier = compiledCollection.qualifiers[condition.qualifierIndex];\n      if (!qualifier) continue;\n\n      // Get the qualifier value from context\n      const qualifierValueResult = resolver.contextQualifierProvider.get(qualifier);\n      const qualifierValue = qualifierValueResult.isSuccess() ? qualifierValueResult.value : null;\n\n      // Get the cached condition result from resolver (if available)\n      const cachedResult = resolver.conditionCache?.[conditionIndex] as any;\n      const score = cachedResult?.score || 0;\n      const matchType = cachedResult?.matchType || 'noMatch';\n      const matched = matchType !== 'noMatch';\n\n      evaluations.push({\n        qualifierName: qualifier.name,\n        qualifierValue,\n        conditionValue: condition.value,\n        operator: condition.operator || 'eq',\n        score,\n        matched,\n        matchType,\n        scoreAsDefault: condition.scoreAsDefault,\n        conditionIndex\n      });\n    }\n\n    return evaluations;\n  } catch (error) {\n    console.warn('Error evaluating conditions for candidate:', error);\n    return [];\n  }\n}\n\n/**\n * Resolve a resource and create detailed resolution result\n */\nexport function resolveResourceDetailed(\n  resolver: Runtime.ResourceResolver,\n  resourceId: string,\n  processedResources: ProcessedResources,\n  options: ResolutionOptions = {}\n): Result<ResolutionResult> {\n  const enableDebug = options.enableDebugLogging === true;\n\n  debugLog(enableDebug, '=== RESOLVING RESOURCE ===');\n  debugLog(enableDebug, 'Resource ID:', resourceId);\n\n  try {\n    // Get the resource\n    const resourceResult = processedResources.system.resourceManager.getBuiltResource(resourceId);\n    if (resourceResult.isFailure()) {\n      return succeed({\n        success: false,\n        resourceId,\n        error: `Failed to get resource: ${resourceResult.message}`\n      });\n    }\n\n    const resource = resourceResult.value;\n    const compiledCollection = processedResources.compiledCollection;\n\n    // Find the compiled resource for condition analysis\n    const compiledResource = compiledCollection.resources.find((r) => r.id === resourceId);\n    if (!compiledResource) {\n      return succeed({\n        success: false,\n        resourceId,\n        error: 'Failed to find compiled resource'\n      });\n    }\n\n    // Resolve best candidate\n    const bestResult = resolver.resolveResource(resource);\n\n    // Resolve all candidates\n    const allResult = resolver.resolveAllResourceCandidates(resource);\n\n    // Resolve composed value\n    const composedResult = resolver.resolveComposedResourceValue(resource);\n\n    // Get decision resolution result\n    const decisionResult = resolver.resolveDecision(resource.decision.baseDecision);\n    const decision = decisionResult.isSuccess() ? decisionResult.value : null;\n\n    // Build detailed candidate information\n    const candidateDetails: CandidateInfo[] = [];\n    const matchedCandidates = allResult.isSuccess() ? allResult.value : [];\n\n    // Create lookup sets for regular and default matches\n    const regularMatchIndices = new Set(decision?.success ? decision.instanceIndices : []);\n    const defaultMatchIndices = new Set(decision?.success ? decision.defaultInstanceIndices : []);\n\n    // Add matched candidates first\n    matchedCandidates.forEach((matchedCandidate) => {\n      const index = resource.candidates.findIndex((candidate) => candidate === matchedCandidate);\n      if (index !== -1) {\n        const conditionSetKey = `cs-${index}`;\n        const conditionEvaluations = evaluateConditionsForCandidate(\n          resolver,\n          index,\n          compiledResource,\n          compiledCollection\n        );\n\n        const isDefaultMatch = defaultMatchIndices.has(index);\n        const isRegularMatch = regularMatchIndices.has(index);\n\n        const candidateMatchType = isRegularMatch\n          ? 'match'\n          : isDefaultMatch\n          ? 'matchAsDefault'\n          : 'noMatch';\n\n        candidateDetails.push({\n          candidate: resource.candidates[index],\n          conditionSetKey,\n          candidateIndex: index,\n          matched: true,\n          matchType: candidateMatchType,\n          isDefaultMatch,\n          conditionEvaluations\n        });\n      }\n    });\n\n    // Add non-matching candidates\n    resource.candidates.forEach((candidate, index) => {\n      const isMatched = matchedCandidates.some((mc) => mc === candidate);\n      if (!isMatched) {\n        const conditionSetKey = candidate.conditions.toHash();\n        const conditionEvaluations = evaluateConditionsForCandidate(\n          resolver,\n          index,\n          compiledResource,\n          compiledCollection\n        );\n\n        candidateDetails.push({\n          candidate,\n          conditionSetKey,\n          candidateIndex: index,\n          matched: false,\n          matchType: 'noMatch',\n          isDefaultMatch: false,\n          conditionEvaluations\n        });\n      }\n    });\n\n    const result: ResolutionResult = {\n      success: true,\n      resourceId,\n      resource,\n      bestCandidate: bestResult.isSuccess() ? bestResult.value : undefined,\n      allCandidates: allResult.isSuccess() ? allResult.value : undefined,\n      candidateDetails,\n      composedValue: composedResult.isSuccess() ? composedResult.value : undefined,\n      error: bestResult.isFailure() ? bestResult.message : undefined\n    };\n\n    debugLog(enableDebug, 'Resolution completed successfully');\n    return succeed(result);\n  } catch (error) {\n    return succeed({\n      success: false,\n      resourceId,\n      error: `Resolution error: ${error instanceof Error ? error.message : String(error)}`\n    });\n  }\n}\n\n/**\n * Get available qualifiers from processed resources\n */\nexport function getAvailableQualifiers(processedResources: ProcessedResources): string[] {\n  if (processedResources.compiledCollection.qualifiers) {\n    return processedResources.compiledCollection.qualifiers.map((q) => q.name);\n  }\n  return [];\n}\n\n/**\n * Check if context has any pending changes\n */\nexport function hasPendingContextChanges(\n  contextValues: Record<string, string | undefined>,\n  pendingContextValues: Record<string, string | undefined>\n): boolean {\n  return JSON.stringify(contextValues) !== JSON.stringify(pendingContextValues);\n}"]}