{"version":3,"file":"configurationUtils.js","sourceRoot":"","sources":["../../src/utils/configurationUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Result, succeed, fail } from '@fgv/ts-utils';\nimport { Config, QualifierTypes, Qualifiers, ResourceTypes } from '@fgv/ts-res';\n\n/**\n * Configuration change tracking\n */\nexport interface ConfigurationChanges {\n  hasChanges: boolean;\n  changedSections: string[];\n  timestamp: Date;\n}\n\n/**\n * Configuration validation result\n */\nexport interface ConfigurationValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\n/**\n * Configuration export options\n */\nexport interface ConfigurationExportOptions {\n  format: 'json' | 'yaml';\n  pretty: boolean;\n  includeComments?: boolean;\n  filename?: string;\n}\n\n/**\n * Predefined configuration templates\n */\nexport interface ConfigurationTemplate {\n  id: string;\n  name: string;\n  description: string;\n  configuration: Config.Model.ISystemConfiguration;\n  category: 'basic' | 'intermediate' | 'advanced' | 'enterprise';\n}\n\n/**\n * Default system configuration\n */\nexport function getDefaultConfiguration(): Config.Model.ISystemConfiguration {\n  return {\n    qualifierTypes: [\n      {\n        name: 'language',\n        systemType: 'language'\n      },\n      {\n        name: 'territory',\n        systemType: 'territory'\n      }\n    ],\n    qualifiers: [\n      {\n        name: 'language',\n        typeName: 'language',\n        defaultPriority: 100,\n        token: 'lang'\n      },\n      {\n        name: 'territory', \n        typeName: 'territory',\n        defaultPriority: 90,\n        token: 'territory'\n      }\n    ],\n    resourceTypes: [\n      {\n        name: 'string',\n        typeName: 'string'\n      },\n      {\n        name: 'object',\n        typeName: 'object'\n      }\n    ]\n  };\n}\n\n/**\n * Validate a system configuration\n */\nexport function validateConfiguration(\n  config: Config.Model.ISystemConfiguration\n): ConfigurationValidationResult {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n\n  // Validate qualifierTypes\n  if (!config.qualifierTypes || config.qualifierTypes.length === 0) {\n    errors.push('Configuration must have at least one qualifier type');\n  } else {\n    const typeNames = new Set<string>();\n    (config.qualifierTypes as QualifierTypes.Config.ISystemQualifierTypeConfig[]).forEach((type, index) => {\n      const typeName = type.name || `<type-${index}>`;\n      \n      if (!type.name) {\n        errors.push(`Qualifier type at index ${index} is missing a name`);\n      } else if (typeNames.has(type.name)) {\n        errors.push(`Duplicate qualifier type name: ${type.name}`);\n      } else {\n        typeNames.add(type.name);\n      }\n\n      if (!type.systemType) {\n        errors.push(`Qualifier type '${typeName}' is missing systemType`);\n      }\n    });\n  }\n\n  // Validate qualifiers\n  if (!config.qualifiers || config.qualifiers.length === 0) {\n    warnings.push('Configuration has no qualifiers defined');\n  } else {\n    const qualifierNames = new Set<string>();\n    const qualifierTypeNames = new Set(config.qualifierTypes?.map(t => t.name) || []);\n    \n    (config.qualifiers as Qualifiers.IQualifierDecl[]).forEach((qualifier, index) => {\n      if (!qualifier.name) {\n        errors.push(`Qualifier at index ${index} is missing a name`);\n      } else if (qualifierNames.has(qualifier.name)) {\n        errors.push(`Duplicate qualifier name: ${qualifier.name}`);\n      } else {\n        qualifierNames.add(qualifier.name);\n      }\n\n      if (!qualifier.typeName) {\n        errors.push(`Qualifier '${qualifier.name}' is missing typeName`);\n      } else if (!qualifierTypeNames.has(qualifier.typeName)) {\n        errors.push(`Qualifier '${qualifier.name}' references unknown qualifier type: ${qualifier.typeName}`);\n      }\n\n      if (qualifier.defaultPriority === undefined || qualifier.defaultPriority < 0) {\n        errors.push(`Qualifier '${qualifier.name}' has invalid defaultPriority`);\n      }\n    });\n  }\n\n  // Validate resourceTypes\n  if (!config.resourceTypes || config.resourceTypes.length === 0) {\n    errors.push('Configuration must have at least one resource type');\n  } else {\n    const resourceTypeNames = new Set<string>();\n    (config.resourceTypes as ResourceTypes.Config.IResourceTypeConfig[]).forEach((type, index) => {\n      if (!type.name) {\n        errors.push(`Resource type at index ${index} is missing a name`);\n      } else if (resourceTypeNames.has(type.name)) {\n        errors.push(`Duplicate resource type name: ${type.name}`);\n      } else {\n        resourceTypeNames.add(type.name);\n      }\n\n      if (!type.typeName) {\n        errors.push(`Resource type '${type.name}' is missing typeName`);\n      }\n    });\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings\n  };\n}\n\n/**\n * Create a deep copy of a configuration\n */\nexport function cloneConfiguration(\n  config: Config.Model.ISystemConfiguration\n): Config.Model.ISystemConfiguration {\n  return JSON.parse(JSON.stringify(config));\n}\n\n/**\n * Compare two configurations for equality\n */\nexport function compareConfigurations(\n  config1: Config.Model.ISystemConfiguration,\n  config2: Config.Model.ISystemConfiguration\n): boolean {\n  return JSON.stringify(config1) === JSON.stringify(config2);\n}\n\n/**\n * Track changes between configurations\n */\nexport function trackConfigurationChanges(\n  original: Config.Model.ISystemConfiguration,\n  current: Config.Model.ISystemConfiguration\n): ConfigurationChanges {\n  const changedSections: string[] = [];\n  \n  // Check qualifierTypes\n  if (JSON.stringify(original.qualifierTypes) !== JSON.stringify(current.qualifierTypes)) {\n    changedSections.push('qualifierTypes');\n  }\n  \n  // Check qualifiers\n  if (JSON.stringify(original.qualifiers) !== JSON.stringify(current.qualifiers)) {\n    changedSections.push('qualifiers');\n  }\n  \n  // Check resourceTypes\n  if (JSON.stringify(original.resourceTypes) !== JSON.stringify(current.resourceTypes)) {\n    changedSections.push('resourceTypes');\n  }\n\n  return {\n    hasChanges: changedSections.length > 0,\n    changedSections,\n    timestamp: new Date()\n  };\n}\n\n/**\n * Export configuration to JSON string\n */\nexport function exportConfiguration(\n  config: Config.Model.ISystemConfiguration,\n  options: ConfigurationExportOptions = { format: 'json', pretty: true }\n): Result<string> {\n  try {\n    if (options.format === 'json') {\n      return succeed(JSON.stringify(config, null, options.pretty ? 2 : 0));\n    } else {\n      return fail('YAML export not implemented yet');\n    }\n  } catch (error) {\n    return fail(`Failed to export configuration: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\n/**\n * Import configuration from JSON string\n */\nexport function importConfiguration(data: string): Result<Config.Model.ISystemConfiguration> {\n  try {\n    const parsed = JSON.parse(data);\n    \n    // Basic structure validation\n    if (!parsed || typeof parsed !== 'object') {\n      return fail('Invalid configuration: not an object');\n    }\n\n    const validation = validateConfiguration(parsed);\n    if (!validation.isValid) {\n      return fail(`Invalid configuration: ${validation.errors.join(', ')}`);\n    }\n\n    return succeed(parsed as Config.Model.ISystemConfiguration);\n  } catch (error) {\n    return fail(`Failed to parse configuration: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\n/**\n * Get predefined configuration templates\n */\nexport function getConfigurationTemplates(): ConfigurationTemplate[] {\n  return [\n    {\n      id: 'basic',\n      name: 'Basic Configuration',\n      description: 'Simple language and territory-based configuration',\n      category: 'basic',\n      configuration: getDefaultConfiguration()\n    },\n    {\n      id: 'multilingual',\n      name: 'Multilingual Application',\n      description: 'Configuration for applications with multiple languages and regions',\n      category: 'intermediate',\n      configuration: {\n        qualifierTypes: [\n          {\n            name: 'language',\n            systemType: 'language'\n          },\n          {\n            name: 'territory',\n            systemType: 'territory'\n          },\n          {\n            name: 'platform',\n            systemType: 'literal'\n          }\n        ],\n        qualifiers: [\n          {\n            name: 'language',\n            typeName: 'language',\n            defaultPriority: 100,\n            token: 'lang'\n          },\n          {\n            name: 'territory',\n            typeName: 'territory', \n            defaultPriority: 90,\n            token: 'territory'\n          },\n          {\n            name: 'platform',\n            typeName: 'platform',\n            defaultPriority: 80,\n            token: 'platform'\n          }\n        ],\n        resourceTypes: [\n          {\n            name: 'string',\n            typeName: 'string'\n          },\n          {\n            name: 'object',\n            typeName: 'object'\n          },\n          {\n            name: 'array',\n            typeName: 'array'\n          }\n        ]\n      }\n    },\n    {\n      id: 'enterprise',\n      name: 'Enterprise Configuration',\n      description: 'Complex configuration for enterprise applications with roles and departments',\n      category: 'enterprise',\n      configuration: {\n        qualifierTypes: [\n          {\n            name: 'language',\n            systemType: 'language'\n          },\n          {\n            name: 'territory',\n            systemType: 'territory'\n          },\n          {\n            name: 'role',\n            systemType: 'literal'\n          },\n          {\n            name: 'department',\n            systemType: 'literal'\n          },\n          {\n            name: 'securityLevel',\n            systemType: 'literal'\n          }\n        ],\n        qualifiers: [\n          {\n            name: 'language',\n            typeName: 'language',\n            defaultPriority: 100,\n            token: 'lang'\n          },\n          {\n            name: 'territory',\n            typeName: 'territory',\n            defaultPriority: 95,\n            token: 'territory'\n          },\n          {\n            name: 'role',\n            typeName: 'role',\n            defaultPriority: 90,\n            token: 'role'\n          },\n          {\n            name: 'department',\n            typeName: 'department',\n            defaultPriority: 85,\n            token: 'dept'\n          },\n          {\n            name: 'securityLevel',\n            typeName: 'securityLevel',\n            defaultPriority: 80,\n            token: 'security'\n          }\n        ],\n        resourceTypes: [\n          {\n            name: 'string',\n            typeName: 'string'\n          },\n          {\n            name: 'localizedString',\n            typeName: 'string'\n          },\n          {\n            name: 'config',\n            typeName: 'object'\n          },\n          {\n            name: 'permissions',\n            typeName: 'array'\n          },\n          {\n            name: 'settings',\n            typeName: 'object'\n          }\n        ]\n      }\n    }\n  ];\n}\n\n/**\n * Generate a filename for configuration export\n */\nexport function generateConfigurationFilename(\n  configName?: string,\n  format: 'json' | 'yaml' = 'json'\n): string {\n  const timestamp = new Date().toISOString().slice(0, 19).replace(/[:.]/g, '-');\n  const baseName = configName ? `${configName}-config` : 'ts-res-config';\n  return `${baseName}-${timestamp}.${format}`;\n}"]}