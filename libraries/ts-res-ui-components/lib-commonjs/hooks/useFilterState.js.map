{"version":3,"file":"useFilterState.js","sourceRoot":"","sources":["../../src/hooks/useFilterState.ts"],"names":[],"mappings":";;AAgBA,wCA2DC;;AA3ED,+BAA8C;AAQ9C,IAAM,kBAAkB,GAAgB;IACtC,OAAO,EAAE,KAAK;IACd,MAAM,EAAE,EAAE;IACV,aAAa,EAAE,EAAE;IACjB,iBAAiB,EAAE,KAAK;IACxB,gBAAgB,EAAE,KAAK;CACxB,CAAC;AAEF,SAAgB,cAAc,CAAC,YAAmC;IAC1D,IAAA,KAAoB,IAAA,gBAAQ,wCAC7B,kBAAkB,GAClB,YAAY,EACf,EAHK,KAAK,QAAA,EAAE,QAAQ,QAGpB,CAAC;IAEH,IAAM,mBAAmB,GAAG,IAAA,mBAAW,EAAC,UAAC,OAAgB;QACvD,QAAQ,CAAC,UAAA,IAAI,IAAI,OAAA,uCACZ,IAAI,KACP,OAAO,SAAA,EACP,iBAAiB,EAAE,OAAO,KAAK,IAAI,CAAC,OAAO,IAC3C,EAJe,CAIf,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,kBAAkB,GAAG,IAAA,mBAAW,EAAC,UAAC,MAA0C;QAChF,QAAQ,CAAC,UAAA,IAAI;YACX,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjF,6CACK,IAAI,KACP,MAAM,QAAA,EACN,iBAAiB,EAAE,UAAU,IAC7B;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,iBAAiB,GAAG,IAAA,mBAAW,EAAC;QACpC,QAAQ,CAAC,UAAA,IAAI,IAAI,OAAA,uCACZ,IAAI,KACP,aAAa,uBAAO,IAAI,CAAC,MAAM,GAC/B,iBAAiB,EAAE,KAAK,IACxB,EAJe,CAIf,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,iBAAiB,GAAG,IAAA,mBAAW,EAAC;QACpC,QAAQ,CAAC,UAAA,IAAI,IAAI,OAAA,uCACZ,IAAI,KACP,MAAM,EAAE,EAAE,EACV,aAAa,EAAE,EAAE,EACjB,iBAAiB,EAAE,KAAK,EACxB,OAAO,EAAE,KAAK,IACd,EANe,CAMf,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,sBAAsB,GAAG,IAAA,mBAAW,EAAC,UAAC,gBAAyB;QACnE,QAAQ,CAAC,UAAA,IAAI,IAAI,OAAA,uCACZ,IAAI,KACP,gBAAgB,kBAAA,IAChB,EAHe,CAGf,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,OAAO,GAAkB;QAC7B,mBAAmB,qBAAA;QACnB,kBAAkB,oBAAA;QAClB,iBAAiB,mBAAA;QACjB,iBAAiB,mBAAA;QACjB,sBAAsB,wBAAA;KACvB,CAAC;IAEF,OAAO,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,CAAC;AAC5B,CAAC","sourcesContent":["import { useState, useCallback } from 'react';\nimport { FilterState, FilterActions } from '../types';\n\nexport interface UseFilterStateReturn {\n  state: FilterState;\n  actions: FilterActions;\n}\n\nconst initialFilterState: FilterState = {\n  enabled: false,\n  values: {},\n  appliedValues: {},\n  hasPendingChanges: false,\n  reduceQualifiers: false\n};\n\nexport function useFilterState(initialState?: Partial<FilterState>): UseFilterStateReturn {\n  const [state, setState] = useState<FilterState>({\n    ...initialFilterState,\n    ...initialState\n  });\n\n  const updateFilterEnabled = useCallback((enabled: boolean) => {\n    setState(prev => ({\n      ...prev,\n      enabled,\n      hasPendingChanges: enabled !== prev.enabled\n    }));\n  }, []);\n\n  const updateFilterValues = useCallback((values: Record<string, string | undefined>) => {\n    setState(prev => {\n      const hasChanges = JSON.stringify(values) !== JSON.stringify(prev.appliedValues);\n      return {\n        ...prev,\n        values,\n        hasPendingChanges: hasChanges\n      };\n    });\n  }, []);\n\n  const applyFilterValues = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      appliedValues: { ...prev.values },\n      hasPendingChanges: false\n    }));\n  }, []);\n\n  const resetFilterValues = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      values: {},\n      appliedValues: {},\n      hasPendingChanges: false,\n      enabled: false\n    }));\n  }, []);\n\n  const updateReduceQualifiers = useCallback((reduceQualifiers: boolean) => {\n    setState(prev => ({\n      ...prev,\n      reduceQualifiers\n    }));\n  }, []);\n\n  const actions: FilterActions = {\n    updateFilterEnabled,\n    updateFilterValues,\n    applyFilterValues,\n    resetFilterValues,\n    updateReduceQualifiers\n  };\n\n  return { state, actions };\n}"]}