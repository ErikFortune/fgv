{"version":3,"file":"ResourceItem.js","sourceRoot":"","sources":["../../../../src/components/pickers/ResourcePicker/ResourceItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DocumentTextIcon, PlusCircleIcon } from '@heroicons/react/24/outline';\nimport { ResourceItemProps, ResourceSelection } from './types';\n\n/**\n * Individual resource item with annotation support\n */\nexport const ResourceItem = <T = unknown,>({\n  resourceId,\n  displayName,\n  isSelected,\n  isPending = false,\n  annotation,\n  onClick,\n  searchTerm = '',\n  className = '',\n  resourceData,\n  pendingType\n}: ResourceItemProps<T>) => {\n  const name = displayName || resourceId;\n\n  // Highlight search term in the name\n  const highlightedName = React.useMemo(() => {\n    if (!searchTerm) {\n      return <span>{name}</span>;\n    }\n\n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    const parts = name.split(regex);\n\n    return (\n      <span>\n        {parts.map((part, index) =>\n          regex.test(part) ? (\n            <mark key={index} className=\"bg-yellow-200\">\n              {part}\n            </mark>\n          ) : (\n            <span key={index}>{part}</span>\n          )\n        )}\n      </span>\n    );\n  }, [name, searchTerm]);\n\n  // Get badge styling based on variant\n  const getBadgeClasses = (variant: string) => {\n    const baseClasses = 'px-1.5 py-0.5 text-xs font-medium rounded';\n    const variantClasses = {\n      info: 'bg-blue-100 text-blue-800',\n      warning: 'bg-yellow-100 text-yellow-800',\n      success: 'bg-green-100 text-green-800',\n      error: 'bg-red-100 text-red-800',\n      edited: 'bg-purple-100 text-purple-800',\n      new: 'bg-emerald-100 text-emerald-800'\n    };\n    return `${baseClasses} ${variantClasses[variant as keyof typeof variantClasses] || variantClasses.info}`;\n  };\n\n  return (\n    <div\n      className={`\n        flex items-center px-3 py-2 cursor-pointer hover:bg-gray-100 \n        border-b border-gray-100 last:border-b-0\n        ${isSelected ? 'bg-purple-50 border-l-2 border-purple-500' : ''}\n        ${isPending ? 'opacity-70 italic' : ''}\n        ${searchTerm && name.toLowerCase().includes(searchTerm.toLowerCase()) ? 'bg-yellow-50' : ''}\n        ${annotation?.className || ''}\n        ${className}\n      `}\n      onClick={() =>\n        onClick({\n          resourceId,\n          resourceData,\n          isPending,\n          pendingType\n        })\n      }\n      title={resourceId}\n    >\n      {/* Icon */}\n      <div className=\"flex-shrink-0 mr-2\">\n        {isPending ? (\n          <PlusCircleIcon className=\"w-4 h-4 text-emerald-500\" />\n        ) : (\n          <DocumentTextIcon className=\"w-4 h-4 text-green-500\" />\n        )}\n      </div>\n\n      {/* Resource name */}\n      <span\n        className={`\n          text-sm truncate flex-1\n          ${isSelected ? 'font-medium text-purple-900' : 'text-gray-700'}\n        `}\n      >\n        {highlightedName}\n      </span>\n\n      {/* Annotations */}\n      {annotation && (\n        <div className=\"flex items-center gap-2 ml-2\">\n          {/* Indicator */}\n          {annotation.indicator && (\n            <span className=\"text-xs\" title={annotation.indicator.tooltip}>\n              {annotation.indicator.type === 'dot' ? (\n                <span className=\"text-orange-500\">‚óè</span>\n              ) : (\n                annotation.indicator.value\n              )}\n            </span>\n          )}\n\n          {/* Badge */}\n          {annotation.badge && (\n            <span className={getBadgeClasses(annotation.badge.variant)}>{annotation.badge.text}</span>\n          )}\n\n          {/* Suffix */}\n          {annotation.suffix && <span className=\"text-xs text-gray-500\">{annotation.suffix}</span>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ResourceItem;\n"]}