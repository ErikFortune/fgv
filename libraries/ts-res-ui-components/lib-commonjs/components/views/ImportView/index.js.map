{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/ImportView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport {\n  DocumentArrowUpIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ArchiveBoxIcon,\n  FolderOpenIcon\n} from '@heroicons/react/24/outline';\nimport { ImportViewProps, ImportedFile, ImportedDirectory, ExtendedProcessedResources } from '../../../types';\nimport { Bundle } from '@fgv/ts-res';\n\ninterface FileInputResult {\n  files: ImportedFile[];\n  directory?: ImportedDirectory;\n  bundleFile?: ImportedFile & { bundle?: Bundle.IBundle };\n}\n\nexport const ImportView: React.FC<ImportViewProps> = ({\n  onImport,\n  onBundleImport,\n  acceptedFileTypes = ['.json'],\n  onMessage,\n  className = ''\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [importStatus, setImportStatus] = useState<{\n    hasImported: boolean;\n    fileCount: number;\n    isDirectory: boolean;\n    isBundle: boolean;\n  }>({\n    hasImported: false,\n    fileCount: 0,\n    isDirectory: false,\n    isBundle: false\n  });\n  const [error, setError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const dirInputRef = useRef<HTMLInputElement>(null);\n\n  // Check for File System Access API support\n  const isFileSystemAccessSupported = 'showDirectoryPicker' in window || 'showOpenFilePicker' in window;\n\n  // Handle file selection\n  const handleFileSelect = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const importedFiles: ImportedFile[] = [];\n      let bundleFile: ImportedFile & { bundle?: Bundle.IBundle } | undefined;\n\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const content = await readFileContent(file);\n        \n        const importedFile: ImportedFile = {\n          name: file.name,\n          path: file.webkitRelativePath || file.name,\n          content,\n          type: file.type\n        };\n\n        // Check if it's a bundle file\n        if (file.name.endsWith('.bundle.json') || file.name.includes('bundle')) {\n          try {\n            const bundleData = JSON.parse(content);\n            if (bundleData.metadata?.type === 'ts-res-bundle' || bundleData.normalizedCollection) {\n              bundleFile = { ...importedFile, bundle: bundleData };\n            }\n          } catch {\n            // Not a valid bundle, treat as regular file\n          }\n        }\n\n        if (!bundleFile) {\n          importedFiles.push(importedFile);\n        }\n      }\n\n      // Process results\n      if (bundleFile) {\n        setImportStatus({\n          hasImported: true,\n          fileCount: 1,\n          isDirectory: false,\n          isBundle: true\n        });\n        onMessage?.('info', `Bundle file detected: ${bundleFile.name}`);\n        if (onBundleImport && bundleFile.bundle) {\n          onBundleImport(bundleFile.bundle);\n        }\n      } else if (importedFiles.length > 0) {\n        setImportStatus({\n          hasImported: true,\n          fileCount: importedFiles.length,\n          isDirectory: false,\n          isBundle: false\n        });\n        onMessage?.('success', `Imported ${importedFiles.length} file(s)`);\n        onImport?.(importedFiles);\n      }\n    } catch (err) {\n      const errorMsg = err instanceof Error ? err.message : String(err);\n      setError(errorMsg);\n      onMessage?.('error', `Import failed: ${errorMsg}`);\n    } finally {\n      setIsLoading(false);\n      // Reset input\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  }, [onImport, onBundleImport, onMessage]);\n\n  // Handle directory selection (for browsers with webkitdirectory support)\n  const handleDirectorySelect = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const filesByPath = new Map<string, ImportedFile[]>();\n      const dirPaths = new Set<string>();\n\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const content = await readFileContent(file);\n        const path = file.webkitRelativePath;\n        \n        if (path) {\n          const parts = path.split('/');\n          const dirPath = parts.slice(0, -1).join('/');\n          dirPaths.add(dirPath);\n          \n          if (!filesByPath.has(dirPath)) {\n            filesByPath.set(dirPath, []);\n          }\n          \n          filesByPath.get(dirPath)!.push({\n            name: parts[parts.length - 1],\n            path: path,\n            content,\n            type: file.type\n          });\n        }\n      }\n\n      // Build directory structure\n      const rootDir: ImportedDirectory = {\n        name: 'imported',\n        files: filesByPath.get('') || [],\n        subdirectories: []\n      };\n\n      // Create subdirectories\n      const sortedPaths = Array.from(dirPaths).sort();\n      for (const dirPath of sortedPaths) {\n        if (dirPath && dirPath !== '') {\n          const parts = dirPath.split('/');\n          let currentLevel = rootDir;\n          \n          for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const currentPath = parts.slice(0, i + 1).join('/');\n            \n            if (!currentLevel.subdirectories) {\n              currentLevel.subdirectories = [];\n            }\n            \n            let subdir = currentLevel.subdirectories.find(d => d.name === part);\n            if (!subdir) {\n              subdir = {\n                name: part,\n                path: currentPath,\n                files: filesByPath.get(currentPath) || [],\n                subdirectories: []\n              };\n              currentLevel.subdirectories.push(subdir);\n            }\n            \n            currentLevel = subdir;\n          }\n        }\n      }\n\n      setImportStatus({\n        hasImported: true,\n        fileCount: files.length,\n        isDirectory: true,\n        isBundle: false\n      });\n      \n      onMessage?.('success', `Imported directory with ${files.length} file(s)`);\n      onImport?.(rootDir);\n    } catch (err) {\n      const errorMsg = err instanceof Error ? err.message : String(err);\n      setError(errorMsg);\n      onMessage?.('error', `Directory import failed: ${errorMsg}`);\n    } finally {\n      setIsLoading(false);\n      // Reset input\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  }, [onImport, onMessage]);\n\n  // Modern File System Access API handlers\n  const handleModernDirectoryPick = useCallback(async () => {\n    if (!('showDirectoryPicker' in window)) {\n      onMessage?.('error', 'Directory picker not supported in this browser');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const dirHandle = await (window as any).showDirectoryPicker();\n      const rootDir = await processDirectoryHandle(dirHandle);\n      \n      const fileCount = countFiles(rootDir);\n      setImportStatus({\n        hasImported: true,\n        fileCount,\n        isDirectory: true,\n        isBundle: false\n      });\n      \n      onMessage?.('success', `Imported directory \"${rootDir.name}\" with ${fileCount} file(s)`);\n      onImport?.(rootDir);\n    } catch (err: any) {\n      if (err.name !== 'AbortError') {\n        const errorMsg = err instanceof Error ? err.message : String(err);\n        setError(errorMsg);\n        onMessage?.('error', `Directory import failed: ${errorMsg}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [onImport, onMessage]);\n\n  const handleModernFilePick = useCallback(async () => {\n    if (!('showOpenFilePicker' in window)) {\n      onMessage?.('error', 'File picker not supported in this browser');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const fileHandles = await (window as any).showOpenFilePicker({\n        multiple: true,\n        types: [{\n          description: 'JSON files',\n          accept: { 'application/json': acceptedFileTypes }\n        }]\n      });\n\n      const importedFiles: ImportedFile[] = [];\n      let bundleFile: ImportedFile & { bundle?: Bundle.IBundle } | undefined;\n\n      for (const fileHandle of fileHandles) {\n        const file = await fileHandle.getFile();\n        const content = await file.text();\n        \n        const importedFile: ImportedFile = {\n          name: file.name,\n          content,\n          type: file.type\n        };\n\n        // Check for bundle\n        if (file.name.endsWith('.bundle.json') || file.name.includes('bundle')) {\n          try {\n            const bundleData = JSON.parse(content);\n            if (bundleData.metadata?.type === 'ts-res-bundle' || bundleData.normalizedCollection) {\n              bundleFile = { ...importedFile, bundle: bundleData };\n            }\n          } catch {\n            // Not a valid bundle\n          }\n        }\n\n        if (!bundleFile) {\n          importedFiles.push(importedFile);\n        }\n      }\n\n      // Process results\n      if (bundleFile) {\n        setImportStatus({\n          hasImported: true,\n          fileCount: 1,\n          isDirectory: false,\n          isBundle: true\n        });\n        onMessage?.('info', `Bundle file detected: ${bundleFile.name}`);\n        if (onBundleImport && bundleFile.bundle) {\n          onBundleImport(bundleFile.bundle);\n        }\n      } else if (importedFiles.length > 0) {\n        setImportStatus({\n          hasImported: true,\n          fileCount: importedFiles.length,\n          isDirectory: false,\n          isBundle: false\n        });\n        onMessage?.('success', `Imported ${importedFiles.length} file(s)`);\n        onImport?.(importedFiles);\n      }\n    } catch (err: any) {\n      if (err.name !== 'AbortError') {\n        const errorMsg = err instanceof Error ? err.message : String(err);\n        setError(errorMsg);\n        onMessage?.('error', `File import failed: ${errorMsg}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [onImport, onBundleImport, onMessage, acceptedFileTypes]);\n\n  const handleReset = useCallback(() => {\n    setImportStatus({\n      hasImported: false,\n      fileCount: 0,\n      isDirectory: false,\n      isBundle: false\n    });\n    setError(null);\n    onMessage?.('info', 'Import cleared');\n  }, [onMessage]);\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center space-x-3 mb-6\">\n        <DocumentArrowUpIcon className=\"h-8 w-8 text-blue-600\" />\n        <h2 className=\"text-2xl font-bold text-gray-900\">Import Resources</h2>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Left column: Import Controls */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Import Files</h3>\n\n          <div className=\"space-y-4\">\n            {/* API Support Status */}\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n              {isFileSystemAccessSupported ? (\n                <>\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                  <span>Modern File System API available</span>\n                </>\n              ) : (\n                <>\n                  <div className=\"w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                  <span>Using fallback file input</span>\n                </>\n              )}\n            </div>\n\n            {/* Import Buttons */}\n            <div className=\"flex flex-col space-y-3\">\n              {isFileSystemAccessSupported ? (\n                <>\n                  <button\n                    onClick={handleModernDirectoryPick}\n                    disabled={isLoading}\n                    className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    <FolderOpenIcon className=\"w-5 h-5\" />\n                    <span>{isLoading ? 'Importing...' : 'Import Resource Directory'}</span>\n                  </button>\n\n                  <button\n                    onClick={handleModernFilePick}\n                    disabled={isLoading}\n                    className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    <DocumentArrowUpIcon className=\"w-5 h-5\" />\n                    <span>{isLoading ? 'Importing...' : 'Import Resource Files'}</span>\n                  </button>\n                </>\n              ) : (\n                <>\n                  {/* Fallback inputs */}\n                  <input\n                    ref={dirInputRef}\n                    type=\"file\"\n                    // @ts-ignore - webkitdirectory is not in types\n                    webkitdirectory=\"\"\n                    directory=\"\"\n                    multiple\n                    onChange={handleDirectorySelect}\n                    className=\"hidden\"\n                  />\n                  <button\n                    onClick={() => dirInputRef.current?.click()}\n                    disabled={isLoading}\n                    className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    <FolderOpenIcon className=\"w-5 h-5\" />\n                    <span>{isLoading ? 'Importing...' : 'Import Resource Directory'}</span>\n                  </button>\n\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept={acceptedFileTypes.join(',')}\n                    multiple\n                    onChange={handleFileSelect}\n                    className=\"hidden\"\n                  />\n                  <button\n                    onClick={() => fileInputRef.current?.click()}\n                    disabled={isLoading}\n                    className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    <DocumentArrowUpIcon className=\"w-5 h-5\" />\n                    <span>{isLoading ? 'Importing...' : 'Import Resource Files'}</span>\n                  </button>\n                </>\n              )}\n            </div>\n\n            {/* Usage Instructions */}\n            <div className=\"text-sm text-gray-600 space-y-2\">\n              <p className=\"font-medium\">Import Options:</p>\n              <ul className=\"list-disc list-inside space-y-1 ml-2\">\n                <li>\n                  <strong>Directory:</strong> Select a folder with ts-res resources\n                </li>\n                <li>\n                  <strong>Files:</strong> Select individual JSON resource files\n                </li>\n                <li>\n                  <strong>Bundles:</strong> Automatically detected and loaded\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* Right column: Status */}\n        <div className=\"space-y-6\">\n          {/* Import Status */}\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Import Status</h3>\n\n            <div className=\"space-y-3\">\n              {/* Import Status */}\n              <div className=\"flex items-center space-x-3\">\n                {importStatus.hasImported ? (\n                  <>\n                    <CheckCircleIcon className=\"w-5 h-5 text-green-500\" />\n                    <span className=\"text-sm text-gray-900\">\n                      {importStatus.isBundle\n                        ? 'Bundle imported'\n                        : importStatus.isDirectory\n                        ? 'Directory imported'\n                        : `${importStatus.fileCount} file(s) imported`}\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"w-5 h-5 rounded-full border-2 border-gray-300\"></div>\n                    <span className=\"text-sm text-gray-500\">No files imported yet</span>\n                  </>\n                )}\n              </div>\n\n              {/* Bundle Detection */}\n              {importStatus.isBundle && (\n                <div className=\"flex items-center space-x-3\">\n                  <ArchiveBoxIcon className=\"w-5 h-5 text-blue-500\" />\n                  <span className=\"text-sm text-blue-900\">Bundle file detected</span>\n                </div>\n              )}\n            </div>\n\n            {/* Reset Button */}\n            {importStatus.hasImported && (\n              <button\n                onClick={handleReset}\n                className=\"mt-4 px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\"\n              >\n                Clear Import\n              </button>\n            )}\n          </div>\n\n          {/* Error Display */}\n          {error && (\n            <div className=\"bg-white rounded-lg shadow-sm border border-red-200 p-6\">\n              <div className=\"flex items-start space-x-2\">\n                <ExclamationTriangleIcon className=\"w-5 h-5 text-red-600 mt-0.5\" />\n                <div className=\"text-sm text-red-800\">\n                  <p className=\"font-medium\">Error</p>\n                  <p>{error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Success Message */}\n          {importStatus.hasImported && !error && (\n            <div className=\"bg-white rounded-lg shadow-sm border border-green-200 p-6\">\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircleIcon className=\"w-5 h-5 text-green-600 mt-0.5\" />\n                <div className=\"text-sm text-green-800\">\n                  <p className=\"font-medium\">Import Successful!</p>\n                  <p>\n                    {importStatus.isBundle\n                      ? 'Bundle resources are ready to browse.'\n                      : 'Resources are ready for processing.'}\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Helper functions\nasync function readFileContent(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (e) => resolve(e.target?.result as string);\n    reader.onerror = (e) => reject(new Error(`Failed to read file: ${file.name}`));\n    reader.readAsText(file);\n  });\n}\n\nasync function processDirectoryHandle(dirHandle: any, parentPath: string = ''): Promise<ImportedDirectory> {\n  const files: ImportedFile[] = [];\n  const subdirectories: ImportedDirectory[] = [];\n  \n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      const content = await file.text();\n      files.push({\n        name: file.name,\n        path: parentPath ? `${parentPath}/${file.name}` : file.name,\n        content,\n        type: file.type\n      });\n    } else if (entry.kind === 'directory') {\n      const subdir = await processDirectoryHandle(\n        entry,\n        parentPath ? `${parentPath}/${entry.name}` : entry.name\n      );\n      subdirectories.push(subdir);\n    }\n  }\n  \n  return {\n    name: dirHandle.name,\n    path: parentPath,\n    files,\n    subdirectories: subdirectories.length > 0 ? subdirectories : undefined\n  };\n}\n\nfunction countFiles(dir: ImportedDirectory): number {\n  let count = dir.files?.length || 0;\n  if (dir.subdirectories) {\n    for (const subdir of dir.subdirectories) {\n      count += countFiles(subdir);\n    }\n  }\n  return count;\n}\n\nexport default ImportView;"]}