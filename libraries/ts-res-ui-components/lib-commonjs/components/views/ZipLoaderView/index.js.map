{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/ZipLoaderView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport {\n  DocumentArrowDownIcon,\n  FolderOpenIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  InformationCircleIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\nimport { ZipLoaderViewProps } from '../../../types';\nimport {\n  createBrowserZipLoader,\n  ZipLoadOptions,\n  ZipLoadResult,\n  ZipLoadingStage,\n  formatFileSize,\n  isZipFile\n} from '../../../utils/zipLoader';\n\ninterface LoadingState {\n  isLoading: boolean;\n  stage: ZipLoadingStage | null;\n  progress: number;\n  message: string;\n}\n\ninterface LoadedState {\n  result: ZipLoadResult | null;\n  error: string | null;\n  fileName: string | null;\n  fileSize: number | null;\n}\n\nexport const ZipLoaderView: React.FC<ZipLoaderViewProps> = ({\n  zipFileUrl,\n  zipPath,\n  onLoadComplete,\n  onMessage,\n  className = ''\n}) => {\n  const [loadingState, setLoadingState] = useState<LoadingState>({\n    isLoading: false,\n    stage: null,\n    progress: 0,\n    message: ''\n  });\n  \n  const [loadedState, setLoadedState] = useState<LoadedState>({\n    result: null,\n    error: null,\n    fileName: null,\n    fileSize: null\n  });\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n\n  // Load ZIP file with progress tracking\n  const loadZipFileInternal = useCallback(async (file: File) => {\n    setLoadingState({\n      isLoading: true,\n      stage: 'reading-file',\n      progress: 0,\n      message: 'Starting to load ZIP file...'\n    });\n    \n    setLoadedState({\n      result: null,\n      error: null,\n      fileName: file.name,\n      fileSize: file.size\n    });\n\n    const options: ZipLoadOptions = {\n      autoApplyConfig: true,\n      autoProcessResources: true\n    };\n\n    const progressCallback = (stage: ZipLoadingStage, progress: number, message?: string) => {\n      setLoadingState({\n        isLoading: stage !== 'complete',\n        stage,\n        progress,\n        message: message || getStageMessage(stage)\n      });\n    };\n\n    try {\n      const loader = createBrowserZipLoader();\n      const result = await loader.loadFromFile(file, options, progressCallback);\n      \n      if (result.isSuccess()) {\n        const zipResult = result.value;\n        \n        setLoadedState(prev => ({\n          ...prev,\n          result: zipResult,\n          error: null\n        }));\n        \n        setLoadingState({\n          isLoading: false,\n          stage: 'complete',\n          progress: 100,\n          message: 'ZIP file loaded successfully'\n        });\n        \n        onMessage?.('success', `Loaded ZIP file: ${file.name}`);\n        \n        if (zipResult.processedResources) {\n          onLoadComplete?.(zipResult.processedResources);\n        }\n      } else {\n        const errorMessage = result.message;\n        setLoadedState(prev => ({\n          ...prev,\n          error: errorMessage,\n          result: null\n        }));\n        \n        setLoadingState({\n          isLoading: false,\n          stage: null,\n          progress: 0,\n          message: ''\n        });\n        \n        onMessage?.('error', `Failed to load ZIP: ${errorMessage}`);\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      setLoadedState(prev => ({\n        ...prev,\n        error: errorMessage,\n        result: null\n      }));\n      \n      setLoadingState({\n        isLoading: false,\n        stage: null,\n        progress: 0,\n        message: ''\n      });\n      \n      onMessage?.('error', `Unexpected error: ${errorMessage}`);\n    }\n  }, [onMessage, onLoadComplete]);\n\n  // Load ZIP from URL\n  const loadFromUrl = useCallback(async (url: string) => {\n    setLoadingState({\n      isLoading: true,\n      stage: 'reading-file',\n      progress: 0,\n      message: 'Fetching ZIP from URL...'\n    });\n    \n    setLoadedState({\n      result: null,\n      error: null,\n      fileName: url.split('/').pop() || 'remote.zip',\n      fileSize: null\n    });\n\n    const options: ZipLoadOptions = {\n      autoApplyConfig: true,\n      autoProcessResources: true\n    };\n\n    const progressCallback = (stage: ZipLoadingStage, progress: number, message?: string) => {\n      setLoadingState({\n        isLoading: stage !== 'complete',\n        stage,\n        progress,\n        message: message || getStageMessage(stage)\n      });\n    };\n\n    try {\n      const loader = createBrowserZipLoader();\n      const result = await loader.loadFromUrl(url, options, progressCallback);\n      \n      if (result.isSuccess()) {\n        const zipResult = result.value;\n        \n        setLoadedState(prev => ({\n          ...prev,\n          result: zipResult,\n          error: null\n        }));\n        \n        setLoadingState({\n          isLoading: false,\n          stage: 'complete',\n          progress: 100,\n          message: 'ZIP file loaded successfully'\n        });\n        \n        onMessage?.('success', `Loaded ZIP from URL: ${url}`);\n        \n        if (zipResult.processedResources) {\n          onLoadComplete?.(zipResult.processedResources);\n        }\n      } else {\n        const errorMessage = result.message;\n        setLoadedState(prev => ({\n          ...prev,\n          error: errorMessage,\n          result: null\n        }));\n        \n        setLoadingState({\n          isLoading: false,\n          stage: null,\n          progress: 0,\n          message: ''\n        });\n        \n        onMessage?.('error', `Failed to load ZIP from URL: ${errorMessage}`);\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      setLoadedState(prev => ({\n        ...prev,\n        error: errorMessage,\n        result: null\n      }));\n      \n      setLoadingState({\n        isLoading: false,\n        stage: null,\n        progress: 0,\n        message: ''\n      });\n      \n      onMessage?.('error', `Unexpected error loading from URL: ${errorMessage}`);\n    }\n  }, [onMessage, onLoadComplete]);\n\n  // Handle file selection - now defined after loadZipFileInternal\n  const handleFileSelect = useCallback(async (files: FileList | null) => {\n    if (!files || files.length === 0) return;\n    \n    const file = files[0];\n    if (!isZipFile(file.name)) {\n      setLoadedState(prev => ({\n        ...prev,\n        error: `Selected file \"${file.name}\" is not a ZIP file`,\n        result: null\n      }));\n      onMessage?.('error', `File \"${file.name}\" is not a ZIP file`);\n      return;\n    }\n\n    await loadZipFileInternal(file);\n  }, [loadZipFileInternal, onMessage]);\n\n  // Handle drag and drop - now defined after handleFileSelect\n  const handleDrop = useCallback(async (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    const files = e.dataTransfer.files;\n    await handleFileSelect(files);\n  }, [handleFileSelect]);\n\n  // Auto-load from URL parameter\n  React.useEffect(() => {\n    if (zipFileUrl && !loadingState.isLoading && !loadedState.result && !loadedState.error) {\n      loadFromUrl(zipFileUrl);\n    }\n  }, [zipFileUrl, loadFromUrl, loadingState.isLoading, loadedState.result, loadedState.error]);\n\n  const getStageMessage = (stage: ZipLoadingStage): string => {\n    switch (stage) {\n      case 'reading-file': return 'Reading ZIP file...';\n      case 'parsing-zip': return 'Parsing ZIP archive...';\n      case 'loading-manifest': return 'Loading manifest...';\n      case 'loading-config': return 'Loading configuration...';\n      case 'extracting-files': return 'Extracting files...';\n      case 'processing-resources': return 'Processing resources...';\n      case 'complete': return 'Complete!';\n      default: return 'Processing...';\n    }\n  };\n\n  const getStageIcon = (stage: ZipLoadingStage | null) => {\n    switch (stage) {\n      case 'complete': return CheckCircleIcon;\n      case null: return DocumentArrowDownIcon;\n      default: return ArrowPathIcon;\n    }\n  };\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center space-x-3 mb-6\">\n        <DocumentArrowDownIcon className=\"h-8 w-8 text-blue-600\" />\n        <h2 className=\"text-2xl font-bold text-gray-900\">ZIP Loader</h2>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        {/* URL Loading Section */}\n        {zipFileUrl && !loadedState.result && !loadedState.error && (\n          <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-blue-900 mb-2\">Loading from URL</h3>\n            <p className=\"text-sm text-blue-700 break-all\">{zipFileUrl}</p>\n          </div>\n        )}\n\n        {/* File Upload Area */}\n        {!loadingState.isLoading && !loadedState.result && (\n          <div \n            className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors cursor-pointer\"\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n            onClick={() => fileInputRef.current?.click()}\n          >\n            <FolderOpenIcon className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Select or Drop ZIP File\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              Choose a ZIP file containing resources to load and process\n            </p>\n            <button\n              type=\"button\"\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <DocumentArrowDownIcon className=\"w-4 h-4 mr-2\" />\n              Browse Files\n            </button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\".zip\"\n              onChange={(e) => handleFileSelect(e.target.files)}\n              className=\"hidden\"\n            />\n          </div>\n        )}\n\n        {/* Loading Progress */}\n        {loadingState.isLoading && (\n          <div className=\"mb-6\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center space-x-2\">\n                {React.createElement(getStageIcon(loadingState.stage), {\n                  className: `w-5 h-5 ${loadingState.stage === 'complete' ? 'text-green-500' : 'text-blue-500 animate-spin'}`\n                })}\n                <span className=\"text-sm font-medium text-gray-900\">\n                  {loadingState.message}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">\n                {loadingState.progress}%\n              </span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${loadingState.progress}%` }}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Loaded Content Summary */}\n        {loadedState.result && (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2 text-green-600\">\n              <CheckCircleIcon className=\"w-5 h-5\" />\n              <span className=\"font-medium\">ZIP file loaded successfully</span>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">File Information</h4>\n                <div className=\"space-y-1 text-sm\">\n                  <div><strong>Name:</strong> {loadedState.fileName}</div>\n                  {loadedState.fileSize && (\n                    <div><strong>Size:</strong> {formatFileSize(loadedState.fileSize)}</div>\n                  )}\n                  <div><strong>Files:</strong> {loadedState.result.files.length}</div>\n                </div>\n              </div>\n\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Content</h4>\n                <div className=\"space-y-1 text-sm\">\n                  {loadedState.result.manifest && (\n                    <div className=\"flex items-center space-x-1\">\n                      <CheckCircleIcon className=\"w-4 h-4 text-green-500\" />\n                      <span>Manifest found</span>\n                    </div>\n                  )}\n                  {loadedState.result.config && (\n                    <div className=\"flex items-center space-x-1\">\n                      <CheckCircleIcon className=\"w-4 h-4 text-green-500\" />\n                      <span>Configuration found</span>\n                    </div>\n                  )}\n                  {loadedState.result.processedResources && (\n                    <div className=\"flex items-center space-x-1\">\n                      <CheckCircleIcon className=\"w-4 h-4 text-green-500\" />\n                      <span>Resources processed</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {loadedState.result.manifest && (\n              <div className=\"bg-blue-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-blue-900 mb-2\">Archive Information</h4>\n                <div className=\"text-sm text-blue-800\">\n                  <div><strong>Created:</strong> {new Date(loadedState.result.manifest.timestamp).toLocaleString()}</div>\n                  {loadedState.result.manifest.input && (\n                    <div><strong>Source:</strong> {loadedState.result.manifest.input.type} - {loadedState.result.manifest.input.originalPath}</div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Error Display */}\n        {loadedState.error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex items-center space-x-2 text-red-600 mb-2\">\n              <ExclamationTriangleIcon className=\"w-5 h-5\" />\n              <span className=\"font-medium\">Error Loading ZIP</span>\n            </div>\n            <p className=\"text-sm text-red-700\">{loadedState.error}</p>\n            <button\n              onClick={() => setLoadedState(prev => ({ ...prev, error: null }))}\n              className=\"mt-3 inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n            >\n              Try Again\n            </button>\n          </div>\n        )}\n\n        {/* Help Information */}\n        {!loadingState.isLoading && !loadedState.result && !loadedState.error && (\n          <div className=\"mt-6 bg-blue-50 rounded-lg p-4\">\n            <div className=\"flex items-start space-x-2\">\n              <InformationCircleIcon className=\"w-5 h-5 text-blue-500 mt-0.5 flex-shrink-0\" />\n              <div className=\"text-sm text-blue-800\">\n                <p className=\"font-medium mb-1\">ZIP Loader</p>\n                <p>\n                  Load ZIP archives containing resource files and configurations. \n                  The loader supports automatic configuration application and resource processing.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ZipLoaderView;"]}