{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/CompiledView/index.tsx"],"names":[],"mappings":";;;;AAAA,qDAAyE;AACzE,uDAWqC;AAErC,sCAA2D;AAUpD,IAAM,YAAY,GAAgC,UAAC,EAQzD;;QAPC,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,YAAY,kBAAA,EACZ,wBAA8C,EAA5B,oBAAoB,mBAAG,KAAK,KAAA,EAC9C,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,iBAAc,EAAd,SAAS,mBAAG,EAAE,KAAA;IAER,IAAA,KAAsC,IAAA,gBAAQ,EAAgB,IAAI,CAAC,EAAlE,cAAc,QAAA,EAAE,iBAAiB,QAAiC,CAAC;IACpE,IAAA,KAAoC,IAAA,gBAAQ,EAAc,IAAI,GAAG,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,EAAxF,aAAa,QAAA,EAAE,gBAAgB,QAAyD,CAAC;IAC1F,IAAA,KAAkC,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAAhD,YAAY,QAAA,EAAE,eAAe,QAAmB,CAAC;IAClD,IAAA,KAA0C,IAAA,gBAAQ,EAAC,oBAAoB,CAAC,EAAvE,gBAAgB,QAAA,EAAE,mBAAmB,QAAkC,CAAC;IAE/E,yDAAyD;IACzD,IAAA,iBAAS,EAAC;QACR,IAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,kBAAkB,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACvD,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC,EAAE,CAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,kBAAkB,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAEtD,iEAAiE;IACjE,IAAM,iBAAiB,GAAG,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,KAAI,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,MAAK,IAAI,CAAC;IACjF,IAAM,wBAAwB,GAAG,iBAAiB;QAChD,CAAC,CAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,kBAAkB;QAClC,CAAC,CAAC,SAAS,CAAC;IAEd,yDAAyD;IACzD,IAAM,eAAe,GAAG,UACtB,SAAmD,EACnD,kBAAqE;;QAErE,IAAI,CAAC;YACH,IAAI,MAAA,SAAS,CAAC,QAAQ,0CAAE,GAAG,EAAE,CAAC;gBAC5B,OAAO,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;YAChC,CAAC;YAED,IAAM,SAAS,GAAG,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YAC1E,IAAI,CAAC,SAAS;gBAAE,OAAO,mBAAmB,CAAC;YAE3C,IAAM,GAAG,GAAG,UAAG,SAAS,CAAC,IAAI,cAAI,SAAS,CAAC,KAAK,CAAE,CAAC;YACnD,OAAO,GAAG,CAAC;QACb,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,oBAAa,SAAS,CAAC,cAAc,CAAE,CAAC;QACjD,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,kBAAkB,GAAG,UACzB,YAAyD,EACzD,iBAAyB,EACzB,kBAAqE;;QAErE,IAAI,CAAC;YACH,IAAI,MAAA,YAAY,CAAC,QAAQ,0CAAE,GAAG,EAAE,CAAC;gBAC/B,OAAO,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC;YACnC,CAAC;YAED,IAAI,iBAAiB,KAAK,CAAC,EAAE,CAAC;gBAC5B,OAAO,eAAe,CAAC;YACzB,CAAC;YAED,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACrE,OAAO,wBAAiB,iBAAiB,CAAE,CAAC;YAC9C,CAAC;YAED,IAAM,aAAa,GAAG,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,cAAc;gBAC/D,IAAM,SAAS,GAAG,kBAAkB,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;gBAChE,IAAI,CAAC,SAAS;oBAAE,OAAO,kBAAW,cAAc,CAAE,CAAC;gBACnD,OAAO,eAAe,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;YAEH,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,wBAAiB,iBAAiB,CAAE,CAAC;QAC9C,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,cAAc,GAAG,UACrB,QAAyD,EACzD,aAAqB,EACrB,kBAAqE;;QAErE,IAAI,CAAC;YACH,IAAI,MAAA,QAAQ,CAAC,QAAQ,0CAAE,GAAG,EAAE,CAAC;gBAC3B,OAAO,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC/B,CAAC;YAED,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACnE,OAAO,mBAAY,aAAa,CAAE,CAAC;YACrC,CAAC;YAED,IAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAC,iBAAiB;gBACpE,IAAM,YAAY,GAAG,kBAAkB,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;gBACzE,IAAI,CAAC,YAAY;oBAAE,OAAO,kBAAW,iBAAiB,CAAE,CAAC;gBACzD,OAAO,kBAAkB,CAAC,YAAY,EAAE,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC;YAEH,OAAO,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,mBAAY,aAAa,CAAE,CAAC;QACrC,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,iBAAiB,GAAG,UAAC,GAAW,EAAE,KAAa;QACnD,IAAI,GAAG,CAAC,KAAK,CAAC,0CAA0C,CAAC,EAAE,CAAC;YAC1D,OAAO,UAAG,KAAK,CAAE,CAAC;QACpB,CAAC;QACD,OAAO,UAAG,GAAG,eAAK,KAAK,MAAG,CAAC;IAC7B,CAAC,CAAC;IAEF,IAAM,mBAAmB,GAAG,UAC1B,iBAAyB,EACzB,kBAAqE;QAErE,IAAI,CAAC;YACH,IAAM,YAAY,GAAG,kBAAkB,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;YACzE,OAAO,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,KAAI,wBAAiB,iBAAiB,CAAE,CAAC;QACpE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,wBAAiB,iBAAiB,CAAE,CAAC;QAC9C,CAAC;IACH,CAAC,CAAC;IAEF,+CAA+C;IAC/C,IAAM,QAAQ,GAAG,IAAA,eAAO,EAAC;;QACvB,IAAI,CAAC,CAAA,wBAAwB,aAAxB,wBAAwB,uBAAxB,wBAAwB,CAAE,kBAAkB,CAAA,EAAE,CAAC;YAClD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,kBAAkB,GAAG,wBAAwB,CAAC,kBAAkB,CAAC;QAErE,iCAAiC;QACjC,IAAI,gBAAgB,KAAI,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,mBAAmB,CAAA,EAAE,CAAC;YACvD,IAAI,CAAC;gBACH,IAAM,kBAAkB,GAAG,eAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;gBAC5F,IAAI,kBAAkB,CAAC,SAAS,EAAE,EAAE,CAAC;oBACnC,IAAM,qBAAqB,GAAG,eAAM,CAAC,gBAAgB,CAAC,SAAS,CAC7D,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAC/C,kBAAkB,CAAC,KAAK,CACzB,CAAC;oBAEF,IAAI,qBAAqB,CAAC,SAAS,EAAE,EAAE,CAAC;wBACtC,IAAM,wBAAwB,GAAG,qBAAqB,CAAC,KAAK,CAAC,6BAA6B,CAAC;4BACzF,eAAe,EAAE,IAAI;yBACtB,CAAC,CAAC;wBACH,IAAI,wBAAwB,CAAC,SAAS,EAAE,EAAE,CAAC;4BACzC,kBAAkB,GAAG,wBAAwB,CAAC,KAAK,CAAC;wBACtD,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,IAAI,CAAC,0CAA0C,EAAE,KAAK,CAAC,CAAC;YAClE,CAAC;QACH,CAAC;QAED,IAAM,IAAI,GAAa;YACrB,EAAE,EAAE,MAAM;YACV,IAAI,EAAE,oBAAoB;YAC1B,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,IAAI,CAAC;YACH,oBAAoB;YACpB,IAAM,cAAc,GAAG,CAAA,MAAA,kBAAkB,CAAC,SAAS,0CAAE,MAAM,KAAI,CAAC,CAAC;YACjE,IAAM,gBAAgB,GAAa;gBACjC,EAAE,EAAE,WAAW;gBACf,IAAI,EAAE,qBAAc,cAAc,MAAG;gBACrC,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,EAAE;aACb,CAAC;YAEF,IAAI,kBAAkB,CAAC,SAAS,IAAI,kBAAkB,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC5E,gBAAgB,CAAC,QAAQ,GAAG,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAE,KAAK,IAAK,OAAA,CAAC;oBACjF,EAAE,EAAE,mBAAY,KAAK,CAAE;oBACvB,IAAI,EAAE,QAAQ,CAAC,EAAE,IAAI,mBAAY,KAAK,CAAE;oBACxC,IAAI,EAAE,UAAmB;oBACzB,IAAI,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,QAAQ,UAAA,EAAE,kBAAkB,oBAAA,EAAE;iBAClE,CAAC,EALgF,CAKhF,CAAC,CAAC;YACN,CAAC;YAED,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAEtC,oBAAoB;YACpB,IAAM,cAAc,GAAG,CAAA,MAAA,kBAAkB,CAAC,SAAS,0CAAE,MAAM,KAAI,CAAC,CAAC;YACjE,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC;gBAClB,EAAE,EAAE,WAAW;gBACf,IAAI,EAAE,qBAAc,cAAc,MAAG;gBACrC,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,kBAAkB,CAAC,SAAS,EAAE,kBAAkB,oBAAA,EAAE;aAC1F,CAAC,CAAC;YAEH,yBAAyB;YACzB,IAAM,kBAAkB,GAAG,CAAA,MAAA,kBAAkB,CAAC,aAAa,0CAAE,MAAM,KAAI,CAAC,CAAC;YACzE,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC;gBAClB,EAAE,EAAE,gBAAgB;gBACpB,IAAI,EAAE,0BAAmB,kBAAkB,MAAG;gBAC9C,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,UAAU,EAAE,kBAAkB,CAAC,aAAa,EAAE,kBAAkB,oBAAA,EAAE;aACnG,CAAC,CAAC;YAEH,qBAAqB;YACrB,IAAM,eAAe,GAAG,CAAA,MAAA,kBAAkB,CAAC,UAAU,0CAAE,MAAM,KAAI,CAAC,CAAC;YACnE,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC;gBAClB,EAAE,EAAE,YAAY;gBAChB,IAAI,EAAE,sBAAe,eAAe,MAAG;gBACvC,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,oBAAA,EAAE;aAC5F,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,OAAO,EAAE,+BAAwB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAE,CAAC,CAAC;QACzG,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC,EAAE;QACD,wBAAwB,aAAxB,wBAAwB,uBAAxB,wBAAwB,CAAE,kBAAkB;QAC5C,wBAAwB,aAAxB,wBAAwB,uBAAxB,wBAAwB,CAAE,MAAM,CAAC,eAAe;QAChD,SAAS;QACT,iBAAiB;QACjB,gBAAgB;QAChB,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,kBAAkB;QAC7B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,mBAAmB;KAC/B,CAAC,CAAC;IAEH,IAAM,wBAAwB,GAAG,IAAA,mBAAW,EAAC;;;YAC3C,IAAI,CAAC,CAAA,wBAAwB,aAAxB,wBAAwB,uBAAxB,wBAAwB,CAAE,kBAAkB,CAAA,EAAE,CAAC;gBAClD,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,OAAO,EAAE,sCAAsC,CAAC,CAAC;gBAC7D,sBAAO;YACT,CAAC;YAEG,kBAAkB,GAAG,wBAAwB,CAAC,kBAAkB,CAAC;YAErE,IAAI,gBAAgB,KAAI,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,mBAAmB,CAAA,EAAE,CAAC;gBACvD,IAAI,CAAC;oBACG,kBAAkB,GAAG,eAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;oBAC5F,IAAI,kBAAkB,CAAC,SAAS,EAAE,EAAE,CAAC;wBAC7B,qBAAqB,GAAG,eAAM,CAAC,gBAAgB,CAAC,SAAS,CAC7D,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAC/C,kBAAkB,CAAC,KAAK,CACzB,CAAC;wBAEF,IAAI,qBAAqB,CAAC,SAAS,EAAE,EAAE,CAAC;4BAChC,wBAAwB,GAAG,qBAAqB,CAAC,KAAK,CAAC,6BAA6B,CAAC;gCACzF,eAAe,EAAE,IAAI;6BACtB,CAAC,CAAC;4BACH,IAAI,wBAAwB,CAAC,SAAS,EAAE,EAAE,CAAC;gCACzC,kBAAkB,GAAG,wBAAwB,CAAC,KAAK,CAAC;4BACtD,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,IAAI,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YAEK,YAAY,yCACb,kBAAkB,KACrB,QAAQ,sCACN,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EACpC,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC,qCAAqC,CAAC,CAAC,CAAC,4BAA4B,EAC9F,UAAU,EAAE,gBAAgB,IACzB,CAAC,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,kBAAkB,KAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,GAC7D,CAAC,iBAAiB,IAAI,EAAE,aAAa,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,aAAa,EAAE,CAAC,IAE1E,CAAC;YAEF,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,YAAY,EAAE,MAAM,CAAC,CAAC;;;SAClC,EAAE;QACD,wBAAwB;QACxB,SAAS;QACT,iBAAiB;QACjB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,aAAa;QAC1B,gBAAgB;QAChB,SAAS;QACT,QAAQ;KACT,CAAC,CAAC;IAEH,IAAM,kBAAkB,GAAG,IAAA,mBAAW,EAAC;;;;YACrC,IAAI,CAAC,CAAA,MAAA,wBAAwB,aAAxB,wBAAwB,uBAAxB,wBAAwB,CAAE,MAAM,0CAAE,eAAe,CAAA,IAAI,CAAC,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,mBAAmB,CAAA,EAAE,CAAC;gBAC1F,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,OAAO,EAAE,iEAAiE,CAAC,CAAC;gBACxF,sBAAO;YACT,CAAC;YAEK,kBAAkB,GAAG,eAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;YAC5F,IAAI,kBAAkB,CAAC,SAAS,EAAE,EAAE,CAAC;gBACnC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,OAAO,EAAE,iDAA0C,kBAAkB,CAAC,OAAO,CAAE,CAAC,CAAC;gBAC7F,sBAAO;YACT,CAAC;YAEK,YAAY,GAAG,kBAAkB,CAAC,KAAK,CAAC;YAExC,YAAY,GAA+B;gBAC/C,OAAO,EAAE,OAAO;gBAChB,WAAW,EAAE,iBAAiB;oBAC5B,CAAC,CAAC,sDAAsD;oBACxD,CAAC,CAAC,2CAA2C;gBAC/C,SAAS,EAAE,IAAI;aAChB,CAAC;YAEI,YAAY,GAAG,eAAM,CAAC,aAAa,CAAC,MAAM,CAC9C,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAC/C,YAAY,EACZ,YAAY,CACb,CAAC;YAEF,IAAI,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC;gBAC7B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,OAAO,EAAE,mCAA4B,YAAY,CAAC,OAAO,CAAE,CAAC,CAAC;gBACzE,sBAAO;YACT,CAAC;YAEK,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC;YAE5B,YAAY,yCACb,MAAM,KACT,cAAc,qBACZ,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EACpC,YAAY,EAAE,sBAAsB,EACpC,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,eAAe,IACjE,CAAC,iBAAiB,IAAI,EAAE,aAAa,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,aAAa,EAAE,CAAC,IAE1E,CAAC;YAEF,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,YAAY,EAAE,QAAQ,CAAC,CAAC;;;SACpC,EAAE;QACD,MAAA,wBAAwB,aAAxB,wBAAwB,uBAAxB,wBAAwB,CAAE,MAAM,0CAAE,eAAe;QACjD,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,mBAAmB;QAC9B,SAAS;QACT,iBAAiB;QACjB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,aAAa;QAC1B,QAAQ;KACT,CAAC,CAAC;IAEH,IAAM,eAAe,GAAG,UAAC,IAAc;QACrC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,MAAM,EAAE,oBAAa,IAAI,CAAC,IAAI,CAAE,CAAC,CAAC;QAE9C,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzE,gBAAgB,CAAC,UAAC,IAAI;gBACpB,IAAM,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClC,IAAI,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;oBAC7B,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC9B,CAAC;qBAAM,CAAC;oBACN,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC3B,CAAC;gBACD,OAAO,WAAW,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,cAAc,GAAG,UAAC,IAAc,EAAE,KAAS;QAAT,sBAAA,EAAA,SAAS;QAC/C,IAAM,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9C,IAAM,UAAU,GAAG,cAAc,KAAK,IAAI,CAAC,EAAE,CAAC;QAC9C,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAE9D,OAAO,CACL,uCAAK,GAAG,EAAE,IAAI,CAAC,EAAE;YACf,uCACE,SAAS,EAAE,uEACT,UAAU,CAAC,CAAC,CAAC,uCAAuC,CAAC,CAAC,CAAC,EAAE,CACzD,EACF,KAAK,EAAE,EAAE,WAAW,EAAE,UAAG,CAAC,GAAG,KAAK,GAAG,EAAE,OAAI,EAAE,EAC7C,OAAO,EAAE,cAAM,OAAA,eAAe,CAAC,IAAI,CAAC,EAArB,CAAqB;gBAEnC,WAAW,IAAI,CACd,uCAAK,SAAS,EAAC,+CAA+C,IAC3D,UAAU,CAAC,CAAC,CAAC,CACZ,8BAAC,yBAAe,IAAC,SAAS,EAAC,uBAAuB,GAAG,CACtD,CAAC,CAAC,CAAC,CACF,8BAAC,0BAAgB,IAAC,SAAS,EAAC,uBAAuB,GAAG,CACvD,CACG,CACP;gBACA,CAAC,WAAW,IAAI,uCAAK,SAAS,EAAC,UAAU,GAAG;gBAE7C,uCAAK,SAAS,EAAC,+CAA+C,IAC3D,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CACxB,UAAU,CAAC,CAAC,CAAC,CACX,8BAAC,wBAAc,IAAC,SAAS,EAAC,uBAAuB,GAAG,CACrD,CAAC,CAAC,CAAC,CACF,8BAAC,oBAAU,IAAC,SAAS,EAAC,uBAAuB,GAAG,CACjD,CACF,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,CAC7B,8BAAC,0BAAgB,IAAC,SAAS,EAAC,wBAAwB,GAAG,CACxD,CAAC,CAAC,CAAC,CACF,8BAAC,kBAAQ,IAAC,SAAS,EAAC,yBAAyB,GAAG,CACjD,CACG;gBAEN,wCAAM,SAAS,EAAE,kBAAW,UAAU,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,eAAe,CAAE,IACrF,IAAI,CAAC,IAAI,CACL,CACH;YAEL,WAAW,IAAI,UAAU,IAAI,CAC5B,2CAAM,IAAI,CAAC,QAAS,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,cAAc,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAO,CAC7E,CACG,CACP,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,OAAO,CACL,uCAAK,SAAS,EAAE,cAAO,SAAS,CAAE;YAChC,uCAAK,SAAS,EAAC,kCAAkC;gBAC/C,8BAAC,kBAAQ,IAAC,SAAS,EAAC,uBAAuB,GAAG;gBAC9C,sCAAI,SAAS,EAAC,kCAAkC,yBAAwB,CACpE;YAEN,uCAAK,SAAS,EAAC,sEAAsE;gBACnF,uCAAK,SAAS,EAAC,mBAAmB;oBAChC,sCAAI,SAAS,EAAC,0CAA0C,4BAA2B;oBACnF,qCAAG,SAAS,EAAC,oBAAoB,oEAE7B,CACA,CACF,CACF,CACP,CAAC;IACJ,CAAC;IAED,IAAM,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,YAAY,CAAC,QAAS,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAErF,OAAO,CACL,uCAAK,SAAS,EAAE,cAAO,SAAS,CAAE;QAChC,uCAAK,SAAS,EAAC,wCAAwC;YACrD,uCAAK,SAAS,EAAC,6BAA6B;gBAC1C,8BAAC,kBAAQ,IAAC,SAAS,EAAC,uBAAuB,GAAG;gBAC9C,sCAAI,SAAS,EAAC,kCAAkC,yBAAwB;gBACvE,iBAAiB,IAAI,CACpB,wCAAM,SAAS,EAAC,uGAAuG,eAEhH,CACR,CACG;YACL,wBAAwB,IAAI,CAC3B,uCAAK,SAAS,EAAC,6BAA6B;gBAC1C,0CACE,OAAO,EAAE,wBAAwB,EACjC,SAAS,EAAC,yMAAyM;oBAEnN,8BAAC,+BAAqB,IAAC,SAAS,EAAC,cAAc,GAAG;kCAE3C;gBACT,0CACE,OAAO,EAAE,kBAAkB,EAC3B,SAAS,EAAC,4MAA4M;oBAEtN,8BAAC,wBAAc,IAAC,SAAS,EAAC,cAAc,GAAG;oCAEpC,CACL,CACP,CACG;QAGL,wBAAwB,IAAI,CAC3B,uCAAK,SAAS,EAAC,+DAA+D;YAC5E,uCAAK,SAAS,EAAC,mCAAmC;gBAChD,uCAAK,SAAS,EAAC,6BAA6B;oBAE1C,uCAAK,SAAS,EAAC,6BAA6B;wBACzC,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,kBAAkB,EAAC,CAAC,CAAC,CAC/B,8BAAC,wBAAc,IAAC,SAAS,EAAC,uBAAuB,GAAG,CACrD,CAAC,CAAC,CAAC,CACF,8BAAC,kBAAQ,IAAC,SAAS,EAAC,uBAAuB,GAAG,CAC/C;wBACD,yCAAO,SAAS,EAAC,mCAAmC,wBAA0B;wBAC9E,0CACE,OAAO,EAAE,cAAM,OAAA,mBAAmB,CAAC,CAAC,gBAAgB,CAAC,EAAtC,CAAsC,EACrD,SAAS,EAAE,2JACT,gBAAgB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAChD;4BAEF,wCACE,SAAS,EAAE,oFACT,gBAAgB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,eAAe,CACpD,GACF,CACK;wBACT,wCAAM,SAAS,EAAC,uBAAuB,IAAE,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAQ,CAC5E;oBAGN,0CACE,OAAO,EAAE,cAAM,OAAA,eAAe,CAAC,CAAC,YAAY,CAAC,EAA9B,CAA8B,EAC7C,SAAS,EAAC,oKAAoK;wBAE9K,8BAAC,yBAAe,IAAC,SAAS,EAAC,cAAc,GAAG;wBAC3C,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;;wBAC9B,YAAY,CAAC,CAAC,CAAC,CACd,8BAAC,uBAAa,IAAC,SAAS,EAAC,cAAc,GAAG,CAC3C,CAAC,CAAC,CAAC,CACF,8BAAC,yBAAe,IAAC,SAAS,EAAC,cAAc,GAAG,CAC7C,CACM,CACL,CACF;YAGL,YAAY,IAAI,CACf,uCAAK,SAAS,EAAC,MAAM;gBACnB,uCAAK,SAAS,EAAC,kDAAkD;oBAC/D,uCAAK,SAAS,EAAC,4FAA4F,IACxG,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,CACjE,CACF,CACF,CACP,CACG,CACP;QAED,uCAAK,SAAS,EAAC,0DAA0D;YACvE,uCAAK,SAAS,EAAC,2CAA2C;gBAExD,uCAAK,SAAS,EAAC,wBAAwB;oBACrC,sCAAI,SAAS,EAAC,0CAA0C,0BAAyB;oBACjF,uCAAK,SAAS,EAAC,qEAAqE,IACjF,QAAQ,IAAI,cAAc,CAAC,QAAQ,CAAC,CACjC,CACF;gBAGN,uCAAK,SAAS,EAAC,wBAAwB,IACpC,YAAY,CAAC,CAAC,CAAC,CACd,8BAAC,UAAU,IACT,IAAI,EAAE,YAAY,EAClB,eAAe,EAAE,eAAe,EAChC,kBAAkB,EAAE,kBAAkB,EACtC,cAAc,EAAE,cAAc,EAC9B,iBAAiB,EAAE,iBAAiB,EACpC,mBAAmB,EAAE,mBAAmB,GACxC,CACH,CAAC,CAAC,CAAC,CACF,uCAAK,SAAS,EAAC,sFAAsF;oBACnG,uCAAK,SAAS,EAAC,aAAa;wBAC1B,8BAAC,kBAAQ,IAAC,SAAS,EAAC,sCAAsC,GAAG;wBAC7D,qCAAG,SAAS,EAAC,eAAe,qCAAmC,CAC3D,CACF,CACP,CACG,CACF,CACF,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAhiBW,QAAA,YAAY,gBAgiBvB;AAEF,qCAAqC;AACrC,IAAM,YAAY,GAAG,UAAC,IAAc,EAAE,EAAU;IAC9C,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE;QAAE,OAAO,IAAI,CAAC;IAChC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,KAAoB,UAAa,EAAb,KAAA,IAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa,EAAE,CAAC;YAA/B,IAAM,KAAK,SAAA;YACd,IAAM,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACtC,IAAI,KAAK;gBAAE,OAAO,KAAK,CAAC;QAC1B,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAYF,IAAM,UAAU,GAA8B,UAAC,EAO9C;QANC,IAAI,UAAA,EACJ,eAAe,qBAAA,EACf,kBAAkB,wBAAA,EAClB,cAAc,oBAAA,EACd,iBAAiB,uBAAA,EACjB,mBAAmB,yBAAA;IAEnB,IAAM,aAAa,GAAG;QACpB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,OAAO,CACL,uCAAK,SAAS,EAAC,KAAK;gBAClB,sCAAI,SAAS,EAAC,gCAAgC;;oBAAU,IAAI,CAAC,IAAI,CAAM;gBACvE,qCAAG,SAAS,EAAC,uBAAuB,IACjC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,WAAQ,CAAC,CAAC,CAAC,cAAc,CACxE,CACA,CACP,CAAC;QACJ,CAAC;QAEK,IAAA,KAAqD,IAAI,CAAC,IAAI,EAA5D,IAAI,UAAA,EAAE,UAAU,gBAAA,EAAE,QAAQ,cAAA,EAAE,kBAAkB,wBAAc,CAAC;QAErE,uDAAuD;QACvD,OAAO,CACL,uCAAK,SAAS,EAAC,KAAK;YAClB,sCAAI,SAAS,EAAC,gCAAgC,IAAE,IAAI,CAAC,IAAI,CAAM;YAC/D,uCAAK,SAAS,EAAC,yEAAyE,IACrF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAC/B,CACF,CACP,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,CACL,uCAAK,SAAS,EAAC,sBAAsB;QACnC,sCAAI,SAAS,EAAC,0CAA0C,cAAa;QACrE,uCAAK,SAAS,EAAC,yEAAyE,IACrF,aAAa,EAAE,CACZ,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,oBAAY,CAAC","sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport {\n  CubeIcon,\n  FolderIcon,\n  FolderOpenIcon,\n  DocumentTextIcon,\n  ChevronRightIcon,\n  ChevronDownIcon,\n  DocumentArrowDownIcon,\n  CodeBracketIcon,\n  ChevronUpIcon,\n  ArchiveBoxIcon\n} from '@heroicons/react/24/outline';\nimport { CompiledViewProps, ProcessedResources, FilterState, FilterResult } from '../../../types';\nimport { ResourceJson, Config, Bundle } from '@fgv/ts-res';\n\ninterface TreeNode {\n  id: string;\n  name: string;\n  type: 'folder' | 'resource' | 'section';\n  children?: TreeNode[];\n  data?: any;\n}\n\nexport const CompiledView: React.FC<CompiledViewProps> = ({\n  resources,\n  filterState,\n  filterResult,\n  useNormalization: useNormalizationProp = false,\n  onExport,\n  onMessage,\n  className = ''\n}) => {\n  const [selectedNodeId, setSelectedNodeId] = useState<string | null>(null);\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(new Set(['root', 'resources']));\n  const [showJsonView, setShowJsonView] = useState(false);\n  const [useNormalization, setUseNormalization] = useState(useNormalizationProp);\n\n  // Update normalization default when bundle state changes\n  useEffect(() => {\n    if (resources?.isLoadedFromBundle && !useNormalization) {\n      setUseNormalization(true);\n    }\n  }, [resources?.isLoadedFromBundle, useNormalization]);\n\n  // Use filtered resources when filtering is active and successful\n  const isFilteringActive = filterState?.enabled && filterResult?.success === true;\n  const activeProcessedResources = isFilteringActive\n    ? filterResult?.processedResources\n    : resources;\n\n  // Helper functions to resolve indices to meaningful keys\n  const getConditionKey = (\n    condition: ResourceJson.Compiled.ICompiledCondition,\n    compiledCollection: ResourceJson.Compiled.ICompiledResourceCollection\n  ): string => {\n    try {\n      if (condition.metadata?.key) {\n        return condition.metadata.key;\n      }\n\n      const qualifier = compiledCollection.qualifiers[condition.qualifierIndex];\n      if (!qualifier) return `unknown-qualifier`;\n\n      const key = `${qualifier.name}=${condition.value}`;\n      return key;\n    } catch (error) {\n      return `condition-${condition.qualifierIndex}`;\n    }\n  };\n\n  const getConditionSetKey = (\n    conditionSet: ResourceJson.Compiled.ICompiledConditionSet,\n    conditionSetIndex: number,\n    compiledCollection: ResourceJson.Compiled.ICompiledResourceCollection\n  ): string => {\n    try {\n      if (conditionSet.metadata?.key) {\n        return conditionSet.metadata.key;\n      }\n\n      if (conditionSetIndex === 0) {\n        return 'unconditional';\n      }\n\n      if (!conditionSet.conditions || conditionSet.conditions.length === 0) {\n        return `condition-set-${conditionSetIndex}`;\n      }\n\n      const conditionKeys = conditionSet.conditions.map((conditionIndex) => {\n        const condition = compiledCollection.conditions[conditionIndex];\n        if (!condition) return `unknown-${conditionIndex}`;\n        return getConditionKey(condition, compiledCollection);\n      });\n\n      return conditionKeys.join(',');\n    } catch (error) {\n      return `condition-set-${conditionSetIndex}`;\n    }\n  };\n\n  const getDecisionKey = (\n    decision: ResourceJson.Compiled.ICompiledAbstractDecision,\n    decisionIndex: number,\n    compiledCollection: ResourceJson.Compiled.ICompiledResourceCollection\n  ): string => {\n    try {\n      if (decision.metadata?.key) {\n        return decision.metadata.key;\n      }\n\n      if (!decision.conditionSets || decision.conditionSets.length === 0) {\n        return `decision-${decisionIndex}`;\n      }\n\n      const conditionSetKeys = decision.conditionSets.map((conditionSetIndex) => {\n        const conditionSet = compiledCollection.conditionSets[conditionSetIndex];\n        if (!conditionSet) return `unknown-${conditionSetIndex}`;\n        return getConditionSetKey(conditionSet, conditionSetIndex, compiledCollection);\n      });\n\n      return conditionSetKeys.join(' OR ');\n    } catch (error) {\n      return `decision-${decisionIndex}`;\n    }\n  };\n\n  const formatDisplayName = (key: string, index: number): string => {\n    if (key.match(/^(condition|condition-set|decision)-\\d+$/)) {\n      return `${index}`;\n    }\n    return `${key} (${index})`;\n  };\n\n  const getResourceTypeName = (\n    resourceTypeIndex: number,\n    compiledCollection: ResourceJson.Compiled.ICompiledResourceCollection\n  ): string => {\n    try {\n      const resourceType = compiledCollection.resourceTypes[resourceTypeIndex];\n      return resourceType?.name || `resource-type-${resourceTypeIndex}`;\n    } catch (error) {\n      return `resource-type-${resourceTypeIndex}`;\n    }\n  };\n\n  // Build tree structure from compiled resources\n  const treeData = useMemo(() => {\n    if (!activeProcessedResources?.compiledCollection) {\n      return null;\n    }\n\n    let compiledCollection = activeProcessedResources.compiledCollection;\n\n    // Apply normalization if enabled\n    if (useNormalization && resources?.activeConfiguration) {\n      try {\n        const systemConfigResult = Config.SystemConfiguration.create(resources.activeConfiguration);\n        if (systemConfigResult.isSuccess()) {\n          const resourceManagerResult = Bundle.BundleNormalizer.normalize(\n            activeProcessedResources.system.resourceManager,\n            systemConfigResult.value\n          );\n\n          if (resourceManagerResult.isSuccess()) {\n            const normalizedCompiledResult = resourceManagerResult.value.getCompiledResourceCollection({\n              includeMetadata: true\n            });\n            if (normalizedCompiledResult.isSuccess()) {\n              compiledCollection = normalizedCompiledResult.value;\n            }\n          }\n        }\n      } catch (error) {\n        console.warn('Failed to normalize compiled collection:', error);\n      }\n    }\n\n    const tree: TreeNode = {\n      id: 'root',\n      name: 'Compiled Resources',\n      type: 'folder',\n      children: []\n    };\n\n    try {\n      // Resources section\n      const resourcesCount = compiledCollection.resources?.length || 0;\n      const resourcesSection: TreeNode = {\n        id: 'resources',\n        name: `Resources (${resourcesCount})`,\n        type: 'section',\n        children: []\n      };\n\n      if (compiledCollection.resources && compiledCollection.resources.length > 0) {\n        resourcesSection.children = compiledCollection.resources.map((resource, index) => ({\n          id: `resource-${index}`,\n          name: resource.id || `Resource ${index}`,\n          type: 'resource' as const,\n          data: { type: 'compiled-resource', resource, compiledCollection }\n        }));\n      }\n\n      tree.children!.push(resourcesSection);\n\n      // Decisions section\n      const decisionsCount = compiledCollection.decisions?.length || 0;\n      tree.children!.push({\n        id: 'decisions',\n        name: `Decisions (${decisionsCount})`,\n        type: 'section',\n        data: { type: 'decisions', collection: compiledCollection.decisions, compiledCollection }\n      });\n\n      // Condition Sets section\n      const conditionSetsCount = compiledCollection.conditionSets?.length || 0;\n      tree.children!.push({\n        id: 'condition-sets',\n        name: `Condition Sets (${conditionSetsCount})`,\n        type: 'section',\n        data: { type: 'condition-sets', collection: compiledCollection.conditionSets, compiledCollection }\n      });\n\n      // Conditions section\n      const conditionsCount = compiledCollection.conditions?.length || 0;\n      tree.children!.push({\n        id: 'conditions',\n        name: `Conditions (${conditionsCount})`,\n        type: 'section',\n        data: { type: 'conditions', collection: compiledCollection.conditions, compiledCollection }\n      });\n    } catch (error) {\n      onMessage?.('error', `Error building tree: ${error instanceof Error ? error.message : String(error)}`);\n    }\n\n    return tree;\n  }, [\n    activeProcessedResources?.compiledCollection,\n    activeProcessedResources?.system.resourceManager,\n    onMessage,\n    isFilteringActive,\n    useNormalization,\n    resources?.isLoadedFromBundle,\n    resources?.activeConfiguration\n  ]);\n\n  const handleExportCompiledData = useCallback(async () => {\n    if (!activeProcessedResources?.compiledCollection) {\n      onMessage?.('error', 'No compiled data available to export');\n      return;\n    }\n\n    let compiledCollection = activeProcessedResources.compiledCollection;\n\n    if (useNormalization && resources?.activeConfiguration) {\n      try {\n        const systemConfigResult = Config.SystemConfiguration.create(resources.activeConfiguration);\n        if (systemConfigResult.isSuccess()) {\n          const resourceManagerResult = Bundle.BundleNormalizer.normalize(\n            activeProcessedResources.system.resourceManager,\n            systemConfigResult.value\n          );\n\n          if (resourceManagerResult.isSuccess()) {\n            const normalizedCompiledResult = resourceManagerResult.value.getCompiledResourceCollection({\n              includeMetadata: true\n            });\n            if (normalizedCompiledResult.isSuccess()) {\n              compiledCollection = normalizedCompiledResult.value;\n            }\n          }\n        }\n      } catch (error) {\n        console.warn('Failed to normalize for export:', error);\n      }\n    }\n\n    const compiledData = {\n      ...compiledCollection,\n      metadata: {\n        exportedAt: new Date().toISOString(),\n        type: isFilteringActive ? 'ts-res-filtered-compiled-collection' : 'ts-res-compiled-collection',\n        normalized: useNormalization,\n        ...(resources?.isLoadedFromBundle && { loadedFromBundle: true }),\n        ...(isFilteringActive && { filterContext: filterState?.appliedValues })\n      }\n    };\n\n    onExport?.(compiledData, 'json');\n  }, [\n    activeProcessedResources,\n    onMessage,\n    isFilteringActive,\n    filterState?.appliedValues,\n    useNormalization,\n    resources,\n    onExport\n  ]);\n\n  const handleExportBundle = useCallback(async () => {\n    if (!activeProcessedResources?.system?.resourceManager || !resources?.activeConfiguration) {\n      onMessage?.('error', 'No resource manager or configuration available to create bundle');\n      return;\n    }\n\n    const systemConfigResult = Config.SystemConfiguration.create(resources.activeConfiguration);\n    if (systemConfigResult.isFailure()) {\n      onMessage?.('error', `Failed to create system configuration: ${systemConfigResult.message}`);\n      return;\n    }\n\n    const systemConfig = systemConfigResult.value;\n\n    const bundleParams: Bundle.IBundleCreateParams = {\n      version: '1.0.0',\n      description: isFilteringActive\n        ? 'Bundle exported from ts-res-ui-components (filtered)'\n        : 'Bundle exported from ts-res-ui-components',\n      normalize: true\n    };\n\n    const bundleResult = Bundle.BundleBuilder.create(\n      activeProcessedResources.system.resourceManager,\n      systemConfig,\n      bundleParams\n    );\n\n    if (bundleResult.isFailure()) {\n      onMessage?.('error', `Failed to create bundle: ${bundleResult.message}`);\n      return;\n    }\n\n    const bundle = bundleResult.value;\n\n    const exportBundle = {\n      ...bundle,\n      exportMetadata: {\n        exportedAt: new Date().toISOString(),\n        exportedFrom: 'ts-res-ui-components',\n        type: isFilteringActive ? 'ts-res-bundle-filtered' : 'ts-res-bundle',\n        ...(isFilteringActive && { filterContext: filterState?.appliedValues })\n      }\n    };\n\n    onExport?.(exportBundle, 'bundle');\n  }, [\n    activeProcessedResources?.system?.resourceManager,\n    resources?.activeConfiguration,\n    onMessage,\n    isFilteringActive,\n    filterState?.appliedValues,\n    onExport\n  ]);\n\n  const handleNodeClick = (node: TreeNode) => {\n    setSelectedNodeId(node.id);\n    onMessage?.('info', `Selected: ${node.name}`);\n\n    if (node.type === 'folder' || (node.type === 'section' && node.children)) {\n      setExpandedNodes((prev) => {\n        const newExpanded = new Set(prev);\n        if (newExpanded.has(node.id)) {\n          newExpanded.delete(node.id);\n        } else {\n          newExpanded.add(node.id);\n        }\n        return newExpanded;\n      });\n    }\n  };\n\n  const renderTreeNode = (node: TreeNode, level = 0): React.ReactNode => {\n    const isExpanded = expandedNodes.has(node.id);\n    const isSelected = selectedNodeId === node.id;\n    const hasChildren = node.children && node.children.length > 0;\n\n    return (\n      <div key={node.id}>\n        <div\n          className={`flex items-center px-2 py-1 cursor-pointer hover:bg-gray-100 ${\n            isSelected ? 'bg-blue-50 border-r-2 border-blue-500' : ''\n          }`}\n          style={{ paddingLeft: `${8 + level * 16}px` }}\n          onClick={() => handleNodeClick(node)}\n        >\n          {hasChildren && (\n            <div className=\"w-4 h-4 mr-1 flex items-center justify-center\">\n              {isExpanded ? (\n                <ChevronDownIcon className=\"w-3 h-3 text-gray-500\" />\n              ) : (\n                <ChevronRightIcon className=\"w-3 h-3 text-gray-500\" />\n              )}\n            </div>\n          )}\n          {!hasChildren && <div className=\"w-5 mr-1\" />}\n\n          <div className=\"w-4 h-4 mr-2 flex items-center justify-center\">\n            {node.type === 'folder' ? (\n              isExpanded ? (\n                <FolderOpenIcon className=\"w-4 h-4 text-blue-500\" />\n              ) : (\n                <FolderIcon className=\"w-4 h-4 text-blue-500\" />\n              )\n            ) : node.type === 'resource' ? (\n              <DocumentTextIcon className=\"w-4 h-4 text-green-500\" />\n            ) : (\n              <CubeIcon className=\"w-4 h-4 text-purple-500\" />\n            )}\n          </div>\n\n          <span className={`text-sm ${isSelected ? 'font-medium text-blue-900' : 'text-gray-700'}`}>\n            {node.name}\n          </span>\n        </div>\n\n        {hasChildren && isExpanded && (\n          <div>{node.children!.map((child) => renderTreeNode(child, level + 1))}</div>\n        )}\n      </div>\n    );\n  };\n\n  if (!resources) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <CubeIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Compiled Resources</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Compiled Resources</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Import resources to explore the compiled resource collection.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const selectedNode = selectedNodeId ? findNodeById(treeData!, selectedNodeId) : null;\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <CubeIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Compiled Resources</h2>\n          {isFilteringActive && (\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n              Filtered\n            </span>\n          )}\n        </div>\n        {activeProcessedResources && (\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleExportCompiledData}\n              className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <DocumentArrowDownIcon className=\"h-4 w-4 mr-1\" />\n              Export JSON\n            </button>\n            <button\n              onClick={handleExportBundle}\n              className=\"inline-flex items-center px-3 py-1.5 border border-blue-300 text-xs font-medium rounded text-blue-700 bg-blue-50 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <ArchiveBoxIcon className=\"h-4 w-4 mr-1\" />\n              Export Bundle\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Controls Panel */}\n      {activeProcessedResources && (\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              {/* Normalization Toggle */}\n              <div className=\"flex items-center space-x-2\">\n                {resources?.isLoadedFromBundle ? (\n                  <ArchiveBoxIcon className=\"h-4 w-4 text-blue-600\" />\n                ) : (\n                  <CubeIcon className=\"h-4 w-4 text-gray-600\" />\n                )}\n                <label className=\"text-sm font-medium text-gray-700\">Normalize Output:</label>\n                <button\n                  onClick={() => setUseNormalization(!useNormalization)}\n                  className={`relative inline-flex h-5 w-9 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${\n                    useNormalization ? 'bg-blue-600' : 'bg-gray-300'\n                  }`}\n                >\n                  <span\n                    className={`inline-block h-3 w-3 transform rounded-full bg-white transition-transform ${\n                      useNormalization ? 'translate-x-5' : 'translate-x-1'\n                    }`}\n                  />\n                </button>\n                <span className=\"text-xs text-gray-500\">{useNormalization ? 'ON' : 'OFF'}</span>\n              </div>\n\n              {/* JSON View Toggle */}\n              <button\n                onClick={() => setShowJsonView(!showJsonView)}\n                className=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                <CodeBracketIcon className=\"h-4 w-4 mr-2\" />\n                {showJsonView ? 'Hide' : 'Show'} JSON\n                {showJsonView ? (\n                  <ChevronUpIcon className=\"h-4 w-4 ml-2\" />\n                ) : (\n                  <ChevronDownIcon className=\"h-4 w-4 ml-2\" />\n                )}\n              </button>\n            </div>\n          </div>\n\n          {/* JSON View */}\n          {showJsonView && (\n            <div className=\"mt-4\">\n              <div className=\"bg-gray-50 rounded-lg border border-gray-200 p-4\">\n                <pre className=\"text-xs text-gray-800 bg-white p-3 rounded border overflow-x-auto max-h-64 overflow-y-auto\">\n                  {JSON.stringify(activeProcessedResources.compiledCollection, null, 2)}\n                </pre>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex flex-col lg:flex-row gap-6 h-[600px]\">\n          {/* Tree Navigation */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Compiled Collection</h3>\n            <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg bg-gray-50\">\n              {treeData && renderTreeNode(treeData)}\n            </div>\n          </div>\n\n          {/* Details Panel */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            {selectedNode ? (\n              <NodeDetail\n                node={selectedNode}\n                getConditionKey={getConditionKey}\n                getConditionSetKey={getConditionSetKey}\n                getDecisionKey={getDecisionKey}\n                formatDisplayName={formatDisplayName}\n                getResourceTypeName={getResourceTypeName}\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n                <div className=\"text-center\">\n                  <CubeIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">Select an item to view details</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Helper function to find node by ID\nconst findNodeById = (tree: TreeNode, id: string): TreeNode | null => {\n  if (tree.id === id) return tree;\n  if (tree.children) {\n    for (const child of tree.children) {\n      const found = findNodeById(child, id);\n      if (found) return found;\n    }\n  }\n  return null;\n};\n\n// Simplified NodeDetail component\ninterface NodeDetailProps {\n  node: TreeNode;\n  getConditionKey: Function;\n  getConditionSetKey: Function;\n  getDecisionKey: Function;\n  formatDisplayName: Function;\n  getResourceTypeName: Function;\n}\n\nconst NodeDetail: React.FC<NodeDetailProps> = ({\n  node,\n  getConditionKey,\n  getConditionSetKey,\n  getDecisionKey,\n  formatDisplayName,\n  getResourceTypeName\n}) => {\n  const renderDetails = () => {\n    if (!node.data) {\n      return (\n        <div className=\"p-4\">\n          <h4 className=\"font-medium text-gray-700 mb-2\">Folder: {node.name}</h4>\n          <p className=\"text-sm text-gray-600\">\n            {node.children ? `Contains ${node.children.length} items` : 'Empty folder'}\n          </p>\n        </div>\n      );\n    }\n\n    const { type, collection, resource, compiledCollection } = node.data;\n\n    // Simplified rendering logic - showing just basic info\n    return (\n      <div className=\"p-4\">\n        <h4 className=\"font-medium text-gray-700 mb-2\">{node.name}</h4>\n        <pre className=\"text-xs bg-gray-50 p-2 rounded overflow-x-auto max-h-96 overflow-y-auto\">\n          {JSON.stringify(node.data, null, 2)}\n        </pre>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Details</h3>\n      <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg p-4 bg-gray-50\">\n        {renderDetails()}\n      </div>\n    </div>\n  );\n};\n\nexport default CompiledView;"]}