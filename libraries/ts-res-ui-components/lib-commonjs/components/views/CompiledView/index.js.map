{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/CompiledView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport {\n  CubeIcon,\n  FolderIcon,\n  FolderOpenIcon,\n  DocumentTextIcon,\n  ChevronRightIcon,\n  ChevronDownIcon,\n  DocumentArrowDownIcon,\n  CodeBracketIcon,\n  ChevronUpIcon,\n  ArchiveBoxIcon\n} from '@heroicons/react/24/outline';\nimport { CompiledViewProps, ProcessedResources, FilterState, FilterResult } from '../../../types';\nimport { ResourceJson, Config, Bundle, Resources } from '@fgv/ts-res';\nimport { Hash } from '@fgv/ts-utils';\nimport { ResourcePicker } from '../../pickers/ResourcePicker';\nimport {\n  ResourceSelection,\n  ResourceAnnotations,\n  ResourcePickerOptions\n} from '../../pickers/ResourcePicker/types';\nimport { ResourcePickerOptionsControl } from '../../common/ResourcePickerOptionsControl';\n\ninterface TreeNode {\n  id: string;\n  name: string;\n  type: 'folder' | 'resource' | 'section';\n  children?: TreeNode[];\n  data?: any;\n}\n\n/**\n * CompiledView component for browsing compiled resource collections and metadata.\n *\n * Provides an interface for exploring the compiled resource collection structure,\n * including resources, configuration metadata, qualifiers, and resource types.\n * Supports both filtered and unfiltered views with export functionality.\n *\n * **Key Features:**\n * - **Compiled structure browsing**: Navigate through compiled resource collections\n * - **Metadata exploration**: View system configuration, qualifiers, and resource types\n * - **Filter integration**: Works with filtered resource collections\n * - **Tree-based navigation**: Hierarchical view of resources and metadata\n * - **Export functionality**: Export compiled collections in various formats\n * - **Bundle support**: View and export as ts-res bundles for distribution\n *\n * @example\n * ```tsx\n * import { CompiledView } from '@fgv/ts-res-ui-components';\n *\n * function MyCompiledBrowser() {\n *   const handleExport = (format) => {\n *     console.log(`Exporting compiled resources as ${format}...`);\n *   };\n *\n *   return (\n *     <CompiledView\n *       resources={processedResources}\n *       filterState={filterState}\n *       filterResult={filterResult}\n *       useNormalization={true}\n *       onExport={handleExport}\n *       onMessage={(type, message) => console.log(`${type}: ${message}`)}\n *     />\n *   );\n * }\n * ```\n *\n * @public\n */\nexport const CompiledView: React.FC<CompiledViewProps> = ({\n  resources,\n  filterState,\n  filterResult,\n  useNormalization: useNormalizationProp = false,\n  onExport,\n  onMessage,\n  pickerOptions,\n  pickerOptionsPresentation = 'hidden',\n  className = ''\n}) => {\n  const [selectedResourceId, setSelectedResourceId] = useState<string | null>(null);\n  const [selectedMetadataSection, setSelectedMetadataSection] = useState<string | null>(null);\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(new Set(['metadata']));\n  const [showJsonView, setShowJsonView] = useState(false);\n  const [useNormalization, setUseNormalization] = useState(useNormalizationProp);\n\n  // State for picker options control\n  const [currentPickerOptions, setCurrentPickerOptions] = useState<ResourcePickerOptions>(\n    pickerOptions || {}\n  );\n  const [activeTab, setActiveTab] = useState<'resources' | 'metadata'>('resources');\n\n  // Merge picker options with compiled view-specific defaults\n  const effectivePickerOptions = useMemo(\n    () => ({\n      defaultView: 'tree' as const,\n      showViewToggle: true,\n      enableSearch: true,\n      searchPlaceholder: 'Search compiled resources...',\n      searchScope: 'all' as const,\n      height: '500px',\n      emptyMessage: 'No compiled resources available',\n      // Override with user-provided options\n      ...pickerOptions,\n      // Override with current picker options from control\n      ...currentPickerOptions\n    }),\n    [pickerOptions, currentPickerOptions]\n  );\n\n  // Update normalization default when bundle state changes\n  useEffect(() => {\n    if (resources?.isLoadedFromBundle && !useNormalization) {\n      setUseNormalization(true);\n    }\n  }, [resources?.isLoadedFromBundle, useNormalization]);\n\n  // Use filtered resources when filtering is active and successful\n  const isFilteringActive = filterState?.enabled && filterResult?.success === true;\n  const activeProcessedResources = isFilteringActive ? filterResult?.processedResources : resources;\n\n  // Get the active compiled collection\n  const activeCompiledCollection = useMemo(() => {\n    return isFilteringActive\n      ? filterResult?.processedResources?.compiledCollection\n      : resources?.compiledCollection;\n  }, [\n    isFilteringActive,\n    filterResult?.processedResources?.compiledCollection,\n    resources?.compiledCollection\n  ]);\n\n  // Build metadata tree structure for non-resource sections\n  const metadataTree = useMemo(() => {\n    if (!activeCompiledCollection) {\n      return null;\n    }\n\n    const tree: TreeNode = {\n      id: 'metadata',\n      name: 'Compiled Collection Metadata',\n      type: 'folder',\n      children: []\n    };\n\n    try {\n      // Collectors section - showing from compiled collection\n      tree.children!.push({\n        id: 'qualifiers',\n        name: `Qualifiers (${activeCompiledCollection.qualifiers?.length ?? 0})`,\n        type: 'section',\n        data: { type: 'qualifiers', items: activeCompiledCollection.qualifiers }\n      });\n\n      tree.children!.push({\n        id: 'qualifier-types',\n        name: `Qualifier Types (${activeCompiledCollection.qualifierTypes?.length ?? 0})`,\n        type: 'section',\n        data: { type: 'qualifier-types', items: activeCompiledCollection.qualifierTypes }\n      });\n\n      tree.children!.push({\n        id: 'resource-types',\n        name: `Resource Types (${activeCompiledCollection.resourceTypes?.length ?? 0})`,\n        type: 'section',\n        data: { type: 'resource-types', items: activeCompiledCollection.resourceTypes }\n      });\n\n      tree.children!.push({\n        id: 'conditions',\n        name: `Conditions (${activeCompiledCollection.conditions?.length ?? 0})`,\n        type: 'section',\n        data: { type: 'conditions', items: activeCompiledCollection.conditions }\n      });\n\n      tree.children!.push({\n        id: 'condition-sets',\n        name: `Condition Sets (${activeCompiledCollection.conditionSets?.length ?? 0})`,\n        type: 'section',\n        data: { type: 'condition-sets', items: activeCompiledCollection.conditionSets }\n      });\n\n      tree.children!.push({\n        id: 'decisions',\n        name: `Decisions (${activeCompiledCollection.decisions?.length ?? 0})`,\n        type: 'section',\n        data: { type: 'decisions', items: activeCompiledCollection.decisions }\n      });\n\n      tree.children!.push({\n        id: 'candidate-values',\n        name: `Candidate Values (${activeCompiledCollection.candidateValues?.length ?? 0})`,\n        type: 'section',\n        data: { type: 'candidate-values', items: activeCompiledCollection.candidateValues }\n      });\n    } catch (error) {\n      onMessage?.(\n        'error',\n        `Error building metadata tree: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n\n    return tree;\n  }, [activeCompiledCollection, onMessage]);\n\n  // Create resource annotations for compiled collection metadata\n  const resourceAnnotations = useMemo(() => {\n    const annotations: ResourceAnnotations = {};\n\n    if (activeCompiledCollection?.resources) {\n      activeCompiledCollection.resources.forEach((resource) => {\n        const resourceId = String(resource.id);\n\n        // Get compiled resource metadata\n        const decision = activeCompiledCollection.decisions?.[resource.decision];\n        const candidateCount = decision?.conditionSets?.length ?? 0;\n        const resourceType = activeCompiledCollection.resourceTypes?.[resource.type];\n\n        annotations[resourceId] = {\n          suffix: `${candidateCount} candidate${candidateCount !== 1 ? 's' : ''}`,\n          badge: resourceType\n            ? {\n                text: resourceType.name ?? 'unknown',\n                variant: 'info'\n              }\n            : undefined\n        };\n\n        // Add indicator for resources with no candidates\n        if (candidateCount === 0) {\n          annotations[resourceId].indicator = {\n            type: 'icon',\n            value: '⚠️',\n            tooltip: 'No candidates in compiled resource'\n          };\n        }\n      });\n    }\n\n    return annotations;\n  }, [activeCompiledCollection]);\n\n  const handleExportCompiledData = useCallback(async () => {\n    if (!activeProcessedResources?.compiledCollection) {\n      onMessage?.('error', 'No compiled data available to export');\n      return;\n    }\n\n    let compiledCollection = activeProcessedResources.compiledCollection;\n\n    if (useNormalization && resources?.activeConfiguration) {\n      const systemConfigResult = Config.SystemConfiguration.create(resources.activeConfiguration);\n      if (systemConfigResult.isSuccess()) {\n        // Check if we have a ResourceManagerBuilder (which supports normalization)\n        if ('getCompiledResourceCollection' in activeProcessedResources.system.resourceManager) {\n          const resourceManagerResult = Bundle.BundleNormalizer.normalize(\n            activeProcessedResources.system.resourceManager as Resources.ResourceManagerBuilder,\n            systemConfigResult.value\n          );\n\n          if (resourceManagerResult.isSuccess()) {\n            const normalizedCompiledResult = resourceManagerResult.value.getCompiledResourceCollection({\n              includeMetadata: true\n            });\n            if (normalizedCompiledResult.isSuccess()) {\n              compiledCollection = normalizedCompiledResult.value;\n            } else {\n              console.warn('Failed to get normalized compiled collection:', normalizedCompiledResult.message);\n            }\n          } else {\n            console.warn('Failed to normalize bundle:', resourceManagerResult.message);\n          }\n        }\n        // For IResourceManager from bundles, the compiled collection is already normalized\n      } else {\n        console.warn('Failed to create system configuration for normalization:', systemConfigResult.message);\n      }\n    }\n\n    const compiledData = {\n      ...compiledCollection,\n      metadata: {\n        exportedAt: new Date().toISOString(),\n        type: isFilteringActive ? 'ts-res-filtered-compiled-collection' : 'ts-res-compiled-collection',\n        normalized: useNormalization,\n        ...(resources?.isLoadedFromBundle && { loadedFromBundle: true }),\n        ...(isFilteringActive && { filterContext: filterState?.appliedValues })\n      }\n    };\n\n    onExport?.(compiledData, 'json');\n  }, [\n    activeProcessedResources,\n    onMessage,\n    isFilteringActive,\n    filterState?.appliedValues,\n    useNormalization,\n    resources,\n    onExport\n  ]);\n\n  const handleExportBundle = useCallback(async () => {\n    if (!activeProcessedResources?.system?.resourceManager || !resources?.activeConfiguration) {\n      onMessage?.('error', 'No resource manager or configuration available to create bundle');\n      return;\n    }\n\n    const systemConfigResult = Config.SystemConfiguration.create(resources.activeConfiguration);\n    if (systemConfigResult.isFailure()) {\n      onMessage?.('error', `Failed to create system configuration: ${systemConfigResult.message}`);\n      return;\n    }\n\n    const systemConfig = systemConfigResult.value;\n\n    const bundleParams: Bundle.IBundleCreateParams = {\n      version: '1.0.0',\n      description: isFilteringActive\n        ? 'Bundle exported from ts-res-ui-components (filtered)'\n        : 'Bundle exported from ts-res-ui-components',\n      normalize: true\n    };\n\n    // Check if we have a ResourceManagerBuilder (which supports bundle creation)\n    if (!('getCompiledResourceCollection' in activeProcessedResources.system.resourceManager)) {\n      onMessage?.('error', 'Bundle export is not supported for resources loaded from bundles');\n      return;\n    }\n\n    const bundleResult = Bundle.BundleBuilder.create(\n      activeProcessedResources.system.resourceManager as Resources.ResourceManagerBuilder,\n      systemConfig,\n      bundleParams\n    );\n\n    if (bundleResult.isFailure()) {\n      onMessage?.('error', `Failed to create bundle: ${bundleResult.message}`);\n      return;\n    }\n\n    const bundle = bundleResult.value;\n\n    const exportBundle = {\n      ...bundle,\n      exportMetadata: {\n        exportedAt: new Date().toISOString(),\n        exportedFrom: 'ts-res-ui-components',\n        type: isFilteringActive ? 'ts-res-bundle-filtered' : 'ts-res-bundle',\n        ...(isFilteringActive && { filterContext: filterState?.appliedValues })\n      }\n    };\n\n    onExport?.(exportBundle, 'bundle');\n  }, [\n    activeProcessedResources?.system?.resourceManager,\n    resources?.activeConfiguration,\n    onMessage,\n    isFilteringActive,\n    filterState?.appliedValues,\n    onExport\n  ]);\n\n  // Handle resource selection from ResourcePicker\n  const handleResourceSelect = useCallback(\n    (selection: ResourceSelection) => {\n      setSelectedResourceId(selection.resourceId);\n      setSelectedMetadataSection(null); // Clear metadata selection when resource is selected\n      setActiveTab('resources');\n      if (selection.resourceId) {\n        onMessage?.('info', `Selected compiled resource: ${selection.resourceId}`);\n      }\n    },\n    [onMessage]\n  );\n\n  // Handle metadata node selection\n  const handleMetadataNodeClick = (node: TreeNode) => {\n    setSelectedMetadataSection(node.id);\n    setSelectedResourceId(null); // Clear resource selection when metadata is selected\n    setActiveTab('metadata');\n    onMessage?.('info', `Selected metadata: ${node.name}`);\n\n    if (node.type === 'folder' || (node.type === 'section' && node.children)) {\n      setExpandedNodes((prev) => {\n        const newExpanded = new Set(prev);\n        if (newExpanded.has(node.id)) {\n          newExpanded.delete(node.id);\n        } else {\n          newExpanded.add(node.id);\n        }\n        return newExpanded;\n      });\n    }\n  };\n\n  const renderTreeNode = (node: TreeNode, level = 0): React.ReactNode => {\n    const isExpanded = expandedNodes.has(node.id);\n    const isSelected = selectedMetadataSection === node.id;\n    const hasChildren = node.children && node.children.length > 0;\n\n    return (\n      <div key={node.id}>\n        <div\n          className={`flex items-center px-2 py-1 cursor-pointer hover:bg-gray-100 ${\n            isSelected ? 'bg-blue-50 border-r-2 border-blue-500' : ''\n          }`}\n          style={{ paddingLeft: `${8 + level * 16}px` }}\n          onClick={() => handleMetadataNodeClick(node)}\n        >\n          {hasChildren && (\n            <div className=\"w-4 h-4 mr-1 flex items-center justify-center\">\n              {isExpanded ? (\n                <ChevronDownIcon className=\"w-3 h-3 text-gray-500\" />\n              ) : (\n                <ChevronRightIcon className=\"w-3 h-3 text-gray-500\" />\n              )}\n            </div>\n          )}\n          {!hasChildren && <div className=\"w-5 mr-1\" />}\n\n          <div className=\"w-4 h-4 mr-2 flex items-center justify-center\">\n            {node.type === 'folder' ? (\n              isExpanded ? (\n                <FolderOpenIcon className=\"w-4 h-4 text-blue-500\" />\n              ) : (\n                <FolderIcon className=\"w-4 h-4 text-blue-500\" />\n              )\n            ) : node.type === 'resource' ? (\n              <DocumentTextIcon className=\"w-4 h-4 text-green-500\" />\n            ) : (\n              <CubeIcon className=\"w-4 h-4 text-purple-500\" />\n            )}\n          </div>\n\n          <span className={`text-sm ${isSelected ? 'font-medium text-blue-900' : 'text-gray-700'}`}>\n            {node.name}\n          </span>\n        </div>\n\n        {hasChildren && isExpanded && (\n          <div>{node.children!.map((child) => renderTreeNode(child, level + 1))}</div>\n        )}\n      </div>\n    );\n  };\n\n  if (!resources) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <CubeIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Compiled Resources</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Compiled Resources</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Import resources to explore the compiled resource collection.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Get selected metadata node or resource data\n  const selectedMetadataNode = selectedMetadataSection\n    ? findNodeById(metadataTree!, selectedMetadataSection)\n    : null;\n  const selectedCompiledResource =\n    selectedResourceId && activeCompiledCollection?.resources\n      ? activeCompiledCollection.resources.find((r) => String(r.id) === selectedResourceId)\n      : null;\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <CubeIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Compiled Resources</h2>\n          {isFilteringActive && (\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n              Filtered\n            </span>\n          )}\n        </div>\n        {activeProcessedResources && (\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleExportCompiledData}\n              className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <DocumentArrowDownIcon className=\"h-4 w-4 mr-1\" />\n              Export JSON\n            </button>\n            <button\n              onClick={handleExportBundle}\n              className=\"inline-flex items-center px-3 py-1.5 border border-blue-300 text-xs font-medium rounded text-blue-700 bg-blue-50 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <ArchiveBoxIcon className=\"h-4 w-4 mr-1\" />\n              Export Bundle\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* ResourcePicker Options Control */}\n      <ResourcePickerOptionsControl\n        options={currentPickerOptions}\n        onOptionsChange={setCurrentPickerOptions}\n        presentation={pickerOptionsPresentation}\n        title=\"Compiled View Picker Options\"\n        className=\"mb-6\"\n      />\n\n      {/* Controls Panel */}\n      {activeProcessedResources && (\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              {/* Normalization Toggle */}\n              <div className=\"flex items-center space-x-2\">\n                {resources?.isLoadedFromBundle ? (\n                  <ArchiveBoxIcon className=\"h-4 w-4 text-blue-600\" />\n                ) : (\n                  <CubeIcon className=\"h-4 w-4 text-gray-600\" />\n                )}\n                <label className=\"text-sm font-medium text-gray-700\">Normalize Output:</label>\n                <button\n                  onClick={() => setUseNormalization(!useNormalization)}\n                  className={`relative inline-flex h-5 w-9 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${\n                    useNormalization ? 'bg-blue-600' : 'bg-gray-300'\n                  }`}\n                >\n                  <span\n                    className={`inline-block h-3 w-3 transform rounded-full bg-white transition-transform ${\n                      useNormalization ? 'translate-x-5' : 'translate-x-1'\n                    }`}\n                  />\n                </button>\n                <span className=\"text-xs text-gray-500\">{useNormalization ? 'ON' : 'OFF'}</span>\n              </div>\n\n              {/* JSON View Toggle */}\n              <button\n                onClick={() => setShowJsonView(!showJsonView)}\n                className=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                <CodeBracketIcon className=\"h-4 w-4 mr-2\" />\n                {showJsonView ? 'Hide' : 'Show'} JSON\n                {showJsonView ? (\n                  <ChevronUpIcon className=\"h-4 w-4 ml-2\" />\n                ) : (\n                  <ChevronDownIcon className=\"h-4 w-4 ml-2\" />\n                )}\n              </button>\n            </div>\n          </div>\n\n          {/* JSON View */}\n          {showJsonView && (\n            <div className=\"mt-4\">\n              <div className=\"bg-gray-50 rounded-lg border border-gray-200 p-4\">\n                <pre className=\"text-xs text-gray-800 bg-white p-3 rounded border overflow-x-auto max-h-64 overflow-y-auto\">\n                  {JSON.stringify(activeProcessedResources.compiledCollection, null, 2)}\n                </pre>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8\">\n              <button\n                onClick={() => {\n                  setActiveTab('resources');\n                  setSelectedMetadataSection(null);\n                }}\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'resources'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <DocumentTextIcon className=\"h-4 w-4\" />\n                  <span>Resources ({activeCompiledCollection?.resources?.length || 0})</span>\n                </div>\n              </button>\n              <button\n                onClick={() => {\n                  setActiveTab('metadata');\n                  setSelectedResourceId(null);\n                }}\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'metadata'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <CubeIcon className=\"h-4 w-4\" />\n                  <span>Collection Metadata</span>\n                </div>\n              </button>\n            </nav>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col lg:flex-row gap-6 h-[600px]\">\n          {/* Resources or Metadata Navigation */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            {activeTab === 'resources' ? (\n              <>\n                <div className=\"flex items-center mb-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Compiled Resources</h3>\n                </div>\n                <div className=\"flex-1\">\n                  <ResourcePicker\n                    resources={activeProcessedResources || null}\n                    selectedResourceId={selectedResourceId}\n                    onResourceSelect={handleResourceSelect}\n                    resourceAnnotations={resourceAnnotations}\n                    options={effectivePickerOptions}\n                    onMessage={onMessage}\n                  />\n                </div>\n              </>\n            ) : (\n              <>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Metadata</h3>\n                <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg bg-gray-50\">\n                  {metadataTree && renderTreeNode(metadataTree)}\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* Details Panel */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            {activeTab === 'resources' && selectedResourceId ? (\n              <CompiledResourceDetail\n                resourceId={selectedResourceId}\n                compiledResource={selectedCompiledResource}\n                activeCompiledCollection={activeCompiledCollection}\n                onMessage={onMessage}\n              />\n            ) : activeTab === 'metadata' && selectedMetadataNode ? (\n              <NodeDetail node={selectedMetadataNode} activeCompiledCollection={activeCompiledCollection} />\n            ) : (\n              <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n                <div className=\"text-center\">\n                  <CubeIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">\n                    {activeTab === 'resources'\n                      ? 'Select a resource to view details'\n                      : 'Select a metadata item to view details'}\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Helper function to find node by ID\nconst findNodeById = (tree: TreeNode, id: string): TreeNode | null => {\n  if (tree.id === id) return tree;\n  if (tree.children) {\n    for (const child of tree.children) {\n      const found = findNodeById(child, id);\n      if (found) return found;\n    }\n  }\n  return null;\n};\n\n// NodeDetail component with access to compiled collection\ninterface NodeDetailProps {\n  node: TreeNode;\n  activeCompiledCollection: ResourceJson.Compiled.ICompiledResourceCollection | null | undefined;\n}\n\nconst NodeDetail: React.FC<NodeDetailProps> = ({ node, activeCompiledCollection }) => {\n  const [showRawJson, setShowRawJson] = useState(false);\n\n  const renderDetails = () => {\n    if (!node.data) {\n      return (\n        <div className=\"space-y-4\">\n          <div className=\"bg-white rounded-lg border p-4\">\n            <h4 className=\"font-medium text-gray-700 mb-2\">📁 {node.name}</h4>\n            <p className=\"text-sm text-gray-600\">\n              {node.children ? `Contains ${node.children.length} items` : 'Empty folder'}\n            </p>\n          </div>\n        </div>\n      );\n    }\n\n    const { type, resource, items } = node.data;\n\n    switch (type) {\n      case 'compiled-resource':\n        return renderCompiledResource(resource);\n\n      case 'qualifiers':\n      case 'qualifier-types':\n      case 'resource-types':\n      case 'conditions':\n      case 'condition-sets':\n      case 'decisions':\n      case 'candidate-values':\n        return renderCompiledCollection(type, items);\n\n      default:\n        return renderRawData();\n    }\n  };\n\n  // Function that renders compiled resource data with indices\n  const renderCompiledResource = (resource: any) => {\n    if (!resource) {\n      return (\n        <div className=\"bg-white rounded-lg border p-4\">\n          <h4 className=\"font-medium text-red-700 mb-2\">Error Loading Resource</h4>\n          <p className=\"text-sm text-red-600\">Resource data not available</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Resource Details Header */}\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Compiled Resource Details</h3>\n\n          <div className=\"bg-white rounded-lg border p-4 space-y-3\">\n            <div className=\"flex items-start\">\n              <span className=\"font-semibold text-gray-700 w-32\">ID:</span>\n              <span className=\"font-mono text-gray-900\">{resource.id}</span>\n            </div>\n\n            <div className=\"flex items-start\">\n              <span className=\"font-semibold text-gray-700 w-32\">Resource Type:</span>\n              <span className=\"text-gray-900\">Index: {resource.type}</span>\n            </div>\n\n            <div className=\"flex items-start\">\n              <span className=\"font-semibold text-gray-700 w-32\">Decision:</span>\n              <span className=\"text-gray-900\">\n                <span className=\"font-mono\">\n                  Decision Index: {resource.decision} with {resource.candidates?.length || 0} candidates\n                </span>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Candidates Section - Full candidate data from compiled collection */}\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Candidates ({resource.candidates?.length || 0})\n          </h3>\n\n          <div className=\"space-y-4\">\n            {resource.candidates &&\n              resource.candidates.map((candidate: any, candidateIdx: number) => {\n                // Get the condition set index for this candidate from the decision\n                const compiledCollection = activeCompiledCollection;\n                const decision = compiledCollection?.decisions?.[resource.decision];\n                const conditionSetIndex = decision?.conditionSets?.[candidateIdx];\n                const conditionSet =\n                  conditionSetIndex !== undefined\n                    ? compiledCollection?.conditionSets?.[conditionSetIndex]\n                    : null;\n\n                return (\n                  <div key={candidateIdx} className=\"bg-white rounded-lg border p-4\">\n                    <div className=\"mb-3 flex items-center justify-between\">\n                      <h4 className=\"font-semibold text-gray-900\">\n                        Candidate {candidateIdx}\n                        {candidate.isPartial && (\n                          <span className=\"ml-2 bg-yellow-100 text-yellow-800 px-2 py-1 rounded text-xs\">\n                            Partial\n                          </span>\n                        )}\n                      </h4>\n                      {conditionSetIndex !== undefined && (\n                        <span className=\"text-xs font-mono bg-gray-100 px-2 py-1 rounded\">\n                          ConditionSet: {conditionSetIndex}\n                        </span>\n                      )}\n                    </div>\n\n                    {/* Candidate Value Index and JSON Data */}\n                    <div className=\"space-y-3 mb-3\">\n                      {/* Show Value Index */}\n                      {candidate.valueIndex !== undefined && (\n                        <div className=\"bg-blue-50 rounded p-3\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h6 className=\"text-sm font-semibold text-blue-700\">\n                              Candidate Value Reference:\n                            </h6>\n                            <span className=\"text-xs font-mono bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                              Index: {candidate.valueIndex}\n                            </span>\n                          </div>\n                          <div className=\"text-xs text-blue-600\">\n                            This candidate references candidateValues[{candidate.valueIndex}] from the\n                            compiled collection\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Show Actual JSON Content */}\n                      {(candidate || typeof candidate === 'object') && (\n                        <div className=\"bg-gray-50 rounded p-3\">\n                          <h6 className=\"text-sm font-semibold text-gray-700 mb-2\">\n                            {candidate.valueIndex !== undefined\n                              ? 'Resolved Resource Content:'\n                              : 'Resource Content:'}\n                          </h6>\n                          <pre className=\"text-sm font-mono text-gray-800 whitespace-pre-wrap overflow-x-auto max-h-48 overflow-y-auto\">\n                            {JSON.stringify(candidate, null, 2)}\n                          </pre>\n                          {candidate.valueIndex !== undefined &&\n                            activeCompiledCollection?.candidateValues && (\n                              <div className=\"mt-2 pt-2 border-t border-gray-200\">\n                                <div className=\"text-xs text-gray-600 mb-1\">From candidateValues array:</div>\n                                <pre className=\"text-xs font-mono text-gray-700 bg-white p-2 rounded border overflow-x-auto max-h-32 overflow-y-auto\">\n                                  {JSON.stringify(\n                                    activeCompiledCollection.candidateValues[candidate.valueIndex],\n                                    null,\n                                    2\n                                  )}\n                                </pre>\n                              </div>\n                            )}\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Conditions from the condition set */}\n                    {conditionSet && conditionSet.conditions && conditionSet.conditions.length > 0 && (\n                      <div className=\"border-t pt-3\">\n                        <h5 className=\"text-sm font-semibold text-gray-700 mb-2\">Conditions:</h5>\n                        <div className=\"space-y-2\">\n                          {conditionSet.conditions.map((conditionIndex: number, idx: number) => {\n                            const condition = compiledCollection?.conditions?.[conditionIndex];\n                            if (!condition) return null;\n                            const qualifier = compiledCollection?.qualifiers?.[condition.qualifierIndex];\n\n                            return (\n                              <div\n                                key={idx}\n                                className=\"flex items-center text-sm bg-blue-50 rounded px-3 py-2\"\n                              >\n                                <span className=\"font-mono text-blue-700 mr-2 text-xs\">\n                                  [{conditionIndex}]\n                                </span>\n                                <span className=\"font-medium text-blue-900 mr-2\">\n                                  {qualifier?.name || `Q${condition.qualifierIndex}`}\n                                </span>\n                                <span className=\"text-blue-700 mr-2\">{condition.operator || 'matches'}</span>\n                                <span className=\"font-mono text-blue-800\">{condition.value}</span>\n                                <span className=\"ml-auto text-xs text-blue-600\">\n                                  Priority: {condition.priority || 0}\n                                  {condition.scoreAsDefault !== undefined && (\n                                    <span className=\"ml-2\">Default: {condition.scoreAsDefault}</span>\n                                  )}\n                                </span>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n\n                    {(!conditionSet || !conditionSet.conditions || conditionSet.conditions.length === 0) && (\n                      <div className=\"border-t pt-3\">\n                        <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\n                          No conditions (default candidate)\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Function that renders compiled collection data\n  const renderCompiledCollection = (collectionType: string, items: any[]) => {\n    if (!items) {\n      return (\n        <div className=\"bg-white rounded-lg border p-4\">\n          <p className=\"text-sm text-gray-500\">No data available</p>\n        </div>\n      );\n    }\n\n    let title: string;\n    switch (collectionType) {\n      case 'qualifiers':\n        title = 'Qualifiers';\n        break;\n      case 'qualifier-types':\n        title = 'Qualifier Types';\n        break;\n      case 'resource-types':\n        title = 'Resource Types';\n        break;\n      case 'conditions':\n        title = 'Conditions';\n        break;\n      case 'condition-sets':\n        title = 'Condition Sets';\n        break;\n      case 'decisions':\n        title = 'Decisions';\n        break;\n      case 'candidate-values':\n        title = 'Candidate Values';\n        break;\n      default:\n        title = collectionType;\n    }\n\n    return (\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n          {title} <span className=\"text-sm font-normal text-gray-600\">({items.length})</span>\n        </h3>\n\n        {items.length === 0 ? (\n          <div className=\"bg-white rounded-lg border p-4\">\n            <p className=\"text-sm text-gray-500\">No {title.toLowerCase()} available</p>\n          </div>\n        ) : (\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {items.map((item: any, index: number) => (\n              <div key={index} className=\"bg-white rounded-lg border p-4\">\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div>\n                    <h4 className=\"font-semibold text-gray-900\">\n                      {getCompiledItemDisplayName(item, collectionType, index)}\n                    </h4>\n                    <p className=\"text-sm text-gray-600 font-mono mt-1\">\n                      {getCompiledItemDisplayKey(item, collectionType, index)}\n                    </p>\n                  </div>\n                  <span className=\"bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs font-mono\">\n                    Index: {index}\n                  </span>\n                </div>\n\n                <div className=\"border-t pt-3\">{renderCompiledItemDetail(item, collectionType, index)}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Helper functions for compiled object display\n  const getCompiledItemDisplayName = (item: any, collectionType: string, index: number): string => {\n    switch (collectionType) {\n      case 'qualifiers':\n        return `${index}: ${item?.name || 'unnamed'}`;\n      case 'qualifier-types':\n        return `${index}: ${item?.name || 'unnamed'}`;\n      case 'resource-types':\n        return `${index}: ${item?.name || item?.key || 'unnamed'}`;\n      case 'conditions':\n        const qualifier = activeCompiledCollection?.qualifiers?.[item?.qualifierIndex];\n        return `${index}: ${qualifier?.name || `Q${item?.qualifierIndex}`} ${item?.operator || 'matches'} \"${\n          item?.value || ''\n        }\"`;\n      case 'condition-sets':\n        return `${index}: ${\n          item?.conditions?.length === 0 || !item?.conditions\n            ? 'Unconditional'\n            : `${item.conditions.length} conditions`\n        }`;\n      case 'decisions':\n        return `${index}: Decision with ${item?.conditionSets?.length || 0} condition sets`;\n      case 'candidate-values':\n        try {\n          const normalizer = new Hash.Crc32Normalizer();\n          const hashResult = normalizer.computeHash(item);\n          const jsonStr = JSON.stringify(item);\n          if (hashResult.isSuccess()) {\n            return `${index}: ${typeof item}, ${jsonStr.length} chars (CRC32: ${String(hashResult.value)})`;\n          } else {\n            return `${index}: ${typeof item}, ${jsonStr.length} chars`;\n          }\n        } catch (error) {\n          return `${index}: ${typeof item}, size unknown`;\n        }\n      default:\n        return `${index}: Item ${index}`;\n    }\n  };\n\n  const getCompiledItemDisplayKey = (item: any, collectionType: string, index: number): string => {\n    try {\n      switch (collectionType) {\n        case 'qualifiers':\n          return `type: ${item?.type || 'N/A'}, defaultPriority: ${item?.defaultPriority ?? 'N/A'}`;\n        case 'qualifier-types':\n          return `systemType: ${item?.systemType ?? 'N/A'}`;\n        case 'resource-types':\n          return `key: ${item?.key ?? 'N/A'}`;\n        case 'conditions':\n          return `priority: ${item?.priority ?? 0}`;\n        case 'condition-sets':\n          if (!item?.conditions || item.conditions.length === 0) return 'default';\n          return `${item.conditions.length} condition${item.conditions.length !== 1 ? 's' : ''}`;\n        case 'decisions':\n          return `${item?.conditionSets?.length ?? 0} condition set${\n            (item?.conditionSets?.length ?? 0) !== 1 ? 's' : ''\n          }`;\n        case 'candidate-values':\n          return ''; // All info now in main header\n        default:\n          return '';\n      }\n    } catch (error) {\n      console.warn('Error in getCompiledItemDisplayKey:', error, { item, collectionType, index });\n      return 'Display error';\n    }\n  };\n\n  const renderCompiledItemDetail = (item: any, collectionType: string, index: number) => {\n    switch (collectionType) {\n      case 'qualifiers':\n        const qualifierType = activeCompiledCollection?.qualifierTypes?.[item?.type];\n        return (\n          <div className=\"space-y-2\">\n            <div>\n              <span className=\"font-medium\">Name:</span> {item?.name || 'N/A'}\n            </div>\n            <div>\n              <span className=\"font-medium\">Type Index:</span> {item?.type ?? 'N/A'}\n              {qualifierType && (\n                <span className=\"ml-2 text-gray-600\">({qualifierType.name || 'unnamed'})</span>\n              )}\n            </div>\n            <div>\n              <span className=\"font-medium\">Default Priority:</span> {item?.defaultPriority ?? 'N/A'}\n            </div>\n            {item?.token && (\n              <div>\n                <span className=\"font-medium\">Token:</span> {item.token}\n              </div>\n            )}\n            {item?.defaultValue !== undefined && (\n              <div>\n                <span className=\"font-medium\">Default Value:</span> {item.defaultValue}\n              </div>\n            )}\n          </div>\n        );\n      case 'qualifier-types':\n        return (\n          <div className=\"space-y-2\">\n            <div>\n              <span className=\"font-medium\">Name:</span> {item?.name || 'N/A'}\n            </div>\n            <div>\n              <span className=\"font-medium\">System Type:</span> {item?.systemType || 'N/A'}\n            </div>\n            {item?.configuration && (\n              <div>\n                <span className=\"font-medium\">Configuration:</span>\n                <pre className=\"text-xs bg-gray-50 p-2 rounded mt-1 overflow-x-auto\">\n                  {JSON.stringify(item.configuration, null, 2)}\n                </pre>\n              </div>\n            )}\n          </div>\n        );\n      case 'resource-types':\n        return (\n          <div className=\"space-y-2\">\n            <div>\n              <span className=\"font-medium\">Name:</span> {item?.name || 'N/A'}\n            </div>\n            <div>\n              <span className=\"font-medium\">Key:</span> {item?.key || 'N/A'}\n            </div>\n          </div>\n        );\n      case 'conditions':\n        const qualifier = activeCompiledCollection?.qualifiers?.[item?.qualifierIndex];\n        return (\n          <div className=\"space-y-2\">\n            <div>\n              <span className=\"font-medium\">Qualifier Index:</span> {item?.qualifierIndex ?? 'N/A'}\n              {qualifier && <span className=\"ml-2 text-gray-600\">({qualifier.name || 'unnamed'})</span>}\n            </div>\n            <div>\n              <span className=\"font-medium\">Operator:</span> {item?.operator || 'matches'}\n            </div>\n            <div>\n              <span className=\"font-medium\">Value:</span> {item?.value || 'N/A'}\n            </div>\n            <div>\n              <span className=\"font-medium\">Priority:</span> {item?.priority ?? 0}\n            </div>\n            {item?.scoreAsDefault !== undefined && (\n              <div>\n                <span className=\"font-medium\">Score As Default:</span> {item.scoreAsDefault}\n              </div>\n            )}\n          </div>\n        );\n      case 'condition-sets':\n        return (\n          <div className=\"space-y-2\">\n            <div>\n              <span className=\"font-medium\">Conditions:</span> {item?.conditions?.length ?? 0}\n            </div>\n            {item?.conditions && item.conditions.length > 0 && (\n              <div className=\"space-y-1\">\n                <div className=\"font-medium text-sm\">Condition Indices:</div>\n                {item.conditions.map((conditionIndex: number, idx: number) => {\n                  const condition = activeCompiledCollection?.conditions?.[conditionIndex];\n                  const qualifier = condition\n                    ? activeCompiledCollection?.qualifiers?.[condition.qualifierIndex]\n                    : null;\n                  return (\n                    <div key={idx} className=\"text-xs bg-blue-50 rounded px-2 py-1\">\n                      [{conditionIndex}] {qualifier?.name || `Q${condition?.qualifierIndex}`}{' '}\n                      {condition?.operator || 'matches'} \"{condition?.value || ''}\" (p:\n                      {condition?.priority || 0})\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        );\n      case 'decisions':\n        return (\n          <div className=\"space-y-2\">\n            <div>\n              <span className=\"font-medium\">Condition Sets:</span> {item?.conditionSets?.length ?? 0}\n            </div>\n            {item?.conditionSets && item.conditionSets.length > 0 && (\n              <div className=\"space-y-1\">\n                <div className=\"font-medium text-sm\">Condition Set Indices:</div>\n                <div className=\"flex flex-wrap gap-1\">\n                  {item.conditionSets.map((conditionSetIndex: number, idx: number) => (\n                    <span key={idx} className=\"text-xs bg-green-50 text-green-800 px-2 py-1 rounded\">\n                      [{conditionSetIndex}]\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case 'candidate-values':\n        return (\n          <div className=\"bg-gray-50 rounded p-3\">\n            <pre className=\"text-sm font-mono text-gray-800 whitespace-pre-wrap overflow-x-auto max-h-48 overflow-y-auto\">\n              {JSON.stringify(item, null, 2)}\n            </pre>\n          </div>\n        );\n      default:\n        return (\n          <pre className=\"text-xs bg-gray-50 p-2 rounded overflow-x-auto max-h-32 overflow-y-auto\">\n            {JSON.stringify(item, null, 2)}\n          </pre>\n        );\n    }\n  };\n\n  const renderRawData = () => {\n    return (\n      <div className=\"bg-white rounded-lg border p-4\">\n        <h4 className=\"font-medium text-gray-700 mb-2\">{node.name}</h4>\n        <pre className=\"text-xs bg-gray-50 p-2 rounded overflow-x-auto max-h-96 overflow-y-auto\">\n          {JSON.stringify(node.data, null, 2)}\n        </pre>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Details</h3>\n        <button\n          onClick={() => setShowRawJson(!showRawJson)}\n          className=\"text-xs text-gray-500 hover:text-gray-700 px-2 py-1 rounded hover:bg-gray-100\"\n        >\n          {showRawJson ? 'Rich View' : 'Raw JSON'}\n        </button>\n      </div>\n      <div className=\"flex-1 overflow-y-auto\">\n        {showRawJson ? (\n          <div className=\"bg-white rounded-lg border p-4\">\n            <pre className=\"text-xs bg-gray-50 p-3 rounded overflow-x-auto\">\n              {JSON.stringify(node.data, null, 2)}\n            </pre>\n          </div>\n        ) : (\n          renderDetails()\n        )}\n      </div>\n    </div>\n  );\n};\n\n// CompiledResourceDetail component specifically for compiled resources\ninterface CompiledResourceDetailProps {\n  resourceId: string;\n  compiledResource: any;\n  activeCompiledCollection: ResourceJson.Compiled.ICompiledResourceCollection | null | undefined;\n  onMessage?: (type: 'info' | 'warning' | 'error' | 'success', message: string) => void;\n}\n\nconst CompiledResourceDetail: React.FC<CompiledResourceDetailProps> = ({\n  resourceId,\n  compiledResource,\n  activeCompiledCollection,\n  onMessage\n}) => {\n  const [showRawJson, setShowRawJson] = useState(false);\n\n  if (!compiledResource) {\n    return (\n      <div className=\"flex flex-col h-full\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Resource Details</h3>\n        <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-red-50\">\n          <div className=\"text-center\">\n            <p className=\"text-red-600 font-medium mb-2\">Resource Not Found</p>\n            <p className=\"text-red-500 text-sm\">Resource {resourceId} not found in compiled collection</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Compiled Resource Details</h3>\n        <button\n          onClick={() => setShowRawJson(!showRawJson)}\n          className=\"text-xs text-gray-500 hover:text-gray-700 px-2 py-1 rounded hover:bg-gray-100\"\n        >\n          {showRawJson ? 'Rich View' : 'Raw JSON'}\n        </button>\n      </div>\n      <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg p-4 bg-gray-50\">\n        {showRawJson ? (\n          <div className=\"bg-white rounded-lg border p-4\">\n            <pre className=\"text-xs bg-gray-50 p-3 rounded overflow-x-auto\">\n              {JSON.stringify(compiledResource, null, 2)}\n            </pre>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* Resource Details Header */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Compiled Resource Details</h3>\n\n              <div className=\"bg-white rounded-lg border p-4 space-y-3\">\n                <div className=\"flex items-start\">\n                  <span className=\"font-semibold text-gray-700 w-32\">ID:</span>\n                  <span className=\"font-mono text-gray-900\">{compiledResource.id}</span>\n                </div>\n\n                <div className=\"flex items-start\">\n                  <span className=\"font-semibold text-gray-700 w-32\">Resource Type:</span>\n                  <span className=\"text-gray-900\">Index: {compiledResource.type}</span>\n                </div>\n\n                <div className=\"flex items-start\">\n                  <span className=\"font-semibold text-gray-700 w-32\">Decision:</span>\n                  <span className=\"text-gray-900\">\n                    <span className=\"font-mono\">\n                      Decision Index: {compiledResource.decision} with{' '}\n                      {compiledResource.candidates?.length || 0} candidates\n                    </span>\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Candidates Section */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                Candidates ({compiledResource.candidates?.length || 0})\n              </h3>\n\n              <div className=\"space-y-4\">\n                {compiledResource.candidates &&\n                  compiledResource.candidates.map((candidate: any, candidateIdx: number) => {\n                    // Get the condition set index for this candidate from the decision\n                    const decision = activeCompiledCollection?.decisions?.[compiledResource.decision];\n                    const conditionSetIndex = decision?.conditionSets?.[candidateIdx];\n                    const conditionSet =\n                      conditionSetIndex !== undefined\n                        ? activeCompiledCollection?.conditionSets?.[conditionSetIndex]\n                        : null;\n\n                    return (\n                      <div key={candidateIdx} className=\"bg-white rounded-lg border p-4\">\n                        <div className=\"mb-3 flex items-center justify-between\">\n                          <h4 className=\"font-semibold text-gray-900\">Candidate {candidateIdx}</h4>\n                          {conditionSetIndex !== undefined && (\n                            <span className=\"text-xs font-mono bg-gray-100 px-2 py-1 rounded\">\n                              ConditionSet: {conditionSetIndex}\n                            </span>\n                          )}\n                        </div>\n\n                        {/* Candidate metadata banner */}\n                        {(candidate.isPartial || candidate.mergeMethod) && (\n                          <div className=\"mb-3 flex items-center gap-2 text-xs\">\n                            {candidate.isPartial && (\n                              <span className=\"bg-yellow-100 text-yellow-800 px-2 py-1 rounded\">Partial</span>\n                            )}\n                            {candidate.mergeMethod && (\n                              <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                                Merge: {candidate.mergeMethod}\n                              </span>\n                            )}\n                          </div>\n                        )}\n\n                        {/* Resource Value */}\n                        <div className=\"mb-3\">\n                          <div className=\"text-xs text-gray-600 mb-1\">\n                            Value\n                            {candidate.valueIndex !== undefined\n                              ? ` (candidateValues[${candidate.valueIndex}])`\n                              : ''}\n                            :\n                          </div>\n                          <pre className=\"text-xs font-mono text-gray-700 bg-white p-2 rounded border overflow-x-auto max-h-32 overflow-y-auto\">\n                            {candidate.valueIndex !== undefined && activeCompiledCollection?.candidateValues\n                              ? JSON.stringify(\n                                  activeCompiledCollection.candidateValues[candidate.valueIndex],\n                                  null,\n                                  2\n                                )\n                              : JSON.stringify(candidate, null, 2)}\n                          </pre>\n                        </div>\n\n                        {/* Conditions from the condition set */}\n                        {conditionSet && conditionSet.conditions && conditionSet.conditions.length > 0 && (\n                          <div className=\"border-t pt-3\">\n                            <h5 className=\"text-sm font-semibold text-gray-700 mb-2\">Conditions:</h5>\n                            <div className=\"space-y-2\">\n                              {conditionSet.conditions.map((conditionIndex: number, idx: number) => {\n                                const condition = activeCompiledCollection?.conditions?.[conditionIndex];\n                                if (!condition) return null;\n                                const qualifier =\n                                  activeCompiledCollection?.qualifiers?.[condition.qualifierIndex];\n\n                                return (\n                                  <div\n                                    key={idx}\n                                    className=\"flex items-center text-sm bg-blue-50 rounded px-3 py-2\"\n                                  >\n                                    <span className=\"font-mono text-blue-700 mr-2 text-xs\">\n                                      [{conditionIndex}]\n                                    </span>\n                                    <span className=\"font-medium text-blue-900 mr-2\">\n                                      {qualifier?.name || `Q${condition.qualifierIndex}`}\n                                    </span>\n                                    <span className=\"text-blue-700 mr-2\">\n                                      {condition.operator || 'matches'}\n                                    </span>\n                                    <span className=\"font-mono text-blue-800\">{condition.value}</span>\n                                    <span className=\"ml-auto text-xs text-blue-600\">\n                                      Priority: {condition.priority || 0}\n                                      {condition.scoreAsDefault !== undefined && (\n                                        <span className=\"ml-2\">Default: {condition.scoreAsDefault}</span>\n                                      )}\n                                    </span>\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        )}\n\n                        {(!conditionSet ||\n                          !conditionSet.conditions ||\n                          conditionSet.conditions.length === 0) && (\n                          <div className=\"border-t pt-3\">\n                            <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\n                              No conditions (default candidate)\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CompiledView;\n"]}