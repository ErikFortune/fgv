{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/FilterView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  FunnelIcon,\n  DocumentTextIcon,\n  ExclamationTriangleIcon,\n  ArrowPathIcon,\n  CheckIcon,\n  XMarkIcon,\n  DocumentArrowDownIcon,\n  CodeBracketIcon,\n  ChevronDownIcon,\n  ChevronUpIcon\n} from '@heroicons/react/24/outline';\nimport { FilterViewProps } from '../../../types';\nimport { Config } from '@fgv/ts-res';\n\n// Import FilteredResource type from the utils\ninterface FilteredResource {\n  id: string;\n  originalCandidateCount: number;\n  filteredCandidateCount: number;\n  hasWarning: boolean;\n}\n\nexport const FilterView: React.FC<FilterViewProps> = ({\n  resources,\n  filterState,\n  filterActions,\n  filterResult,\n  onFilterResult,\n  onMessage,\n  className = ''\n}) => {\n  // Local UI state  \n  const [selectedResourceId, setSelectedResourceId] = useState<string | null>(null);\n  const [showFilteredJsonView, setShowFilteredJsonView] = useState(false);\n\n  // Available qualifiers from system configuration or compiled collection\n  const availableQualifiers = useMemo(() => {\n    if (resources?.compiledCollection.qualifiers) {\n      return resources.compiledCollection.qualifiers.map((q) => q.name);\n    }\n\n    // Fallback to default qualifiers if no compiled collection\n    return ['language', 'territory', 'currentTerritory', 'role', 'env'];\n  }, [resources?.compiledCollection.qualifiers]);\n\n  // Get qualifier type information for form controls\n  const qualifierTypeInfo = useMemo(() => {\n    const info: Record<string, any> = {};\n\n    // Simple type mapping for basic form controls\n    availableQualifiers.forEach((qualifierName) => {\n      // Default to text input for all qualifiers in the simplified version\n      info[qualifierName] = { \n        type: { systemType: 'literal' },\n        enumeratedValues: [] \n      };\n    });\n\n    return info;\n  }, [availableQualifiers]);\n\n  // Check if we have any applied filter values set\n  const hasAppliedFilterValues = useMemo(() => {\n    if (!filterState.appliedValues) return false;\n    return Object.values(filterState.appliedValues).some(value => value !== undefined && value !== '');\n  }, [filterState.appliedValues]);\n\n  // Determine if filtering is active (enabled AND has applied values)\n  const isFilteringActive = filterState.enabled && hasAppliedFilterValues;\n\n  // Simplified filter summary\n  const getFilterSummary = useCallback((values: Record<string, string | undefined>) => {\n    const activeFilters = Object.entries(values)\n      .filter(([, value]) => value !== undefined && value !== '')\n      .map(([key, value]) => `${key}=${value}`);\n    return activeFilters.length > 0 ? activeFilters.join(', ') : 'No filters';\n  }, []);\n\n  // Get filtered resource collection data (simplified)\n  const getFilteredResourceCollectionData = useCallback(() => {\n    if (!filterResult?.processedResources?.system.resourceManager) {\n      return null;\n    }\n\n    try {\n      const collectionResult = filterResult.processedResources.system.resourceManager.getResourceCollectionDecl();\n      if (collectionResult.isSuccess()) {\n        return {\n          ...collectionResult.value,\n          metadata: {\n            exportedAt: new Date().toISOString(),\n            totalResources: filterResult.processedResources.resourceCount,\n            type: 'ts-res-filtered-resource-collection',\n            filterContext: filterState.appliedValues,\n            reduceQualifiers: filterState.reduceQualifiers\n          }\n        };\n      } else {\n        onMessage?.('error', `Failed to get filtered resource collection: ${collectionResult.message}`);\n        return null;\n      }\n    } catch (error) {\n      onMessage?.(\n        'error',\n        `Error getting filtered resource collection: ${error instanceof Error ? error.message : String(error)}`\n      );\n      return null;\n    }\n  }, [filterResult, onMessage, filterState.appliedValues, filterState.reduceQualifiers]);\n\n  // Export filtered resource collection data\n  const handleExportFilteredData = useCallback(() => {\n    try {\n      const collectionData = getFilteredResourceCollectionData();\n      if (!collectionData) {\n        onMessage?.('error', 'No filtered collection data available to export');\n        return;\n      }\n\n      const filterSummary = getFilterSummary(filterState.appliedValues);\n      // Use onExport callback instead of direct file download for flexibility\n      // onExport?.(collectionData, 'json');\n      onMessage?.('success', 'Filtered resource collection exported successfully');\n    } catch (error) {\n      onMessage?.(\n        'error',\n        `Failed to export filtered resource collection: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }, [getFilteredResourceCollectionData, onMessage, filterState.appliedValues, getFilterSummary]);\n\n  // Get resources to display (filtered or original) - now uses orchestrator's filterResult\n  const displayResources = useMemo(() => {\n    if (!resources) return [];\n\n    let resourceList: FilteredResource[] = [];\n\n    if (isFilteringActive && filterResult?.success && filterResult.filteredResources) {\n      resourceList = filterResult.filteredResources;\n    } else {\n      // Return original resources\n      const originalResources = resources.summary.resourceIds || [];\n      resourceList = originalResources.map((id) => {\n        const resourceResult = resources.system.resourceManager.getBuiltResource(id);\n        const candidateCount = resourceResult.isSuccess() ? resourceResult.value.candidates.length : 0;\n\n        return {\n          id,\n          originalCandidateCount: candidateCount,\n          filteredCandidateCount: candidateCount,\n          hasWarning: false\n        };\n      });\n    }\n\n    // Sort resources alphabetically by id\n    return resourceList.sort((a, b) => a.id.localeCompare(b.id));\n  }, [resources, isFilteringActive, filterResult]);\n\n  // Handle filter value changes\n  const handleFilterChange = useCallback(\n    (qualifierName: string, value: string | undefined) => {\n      const newValues = { ...filterState.values, [qualifierName]: value };\n      filterActions.updateFilterValues(newValues);\n    },\n    [filterState.values, filterActions]\n  );\n\n  // Handle resource selection\n  const handleResourceSelect = useCallback((resourceId: string) => {\n    setSelectedResourceId(resourceId);\n  }, []);\n\n  // Handle filter toggle\n  const handleFilterToggle = useCallback(\n    (enabled: boolean) => {\n      filterActions.updateFilterEnabled(enabled);\n      if (!enabled) {\n        onMessage?.('info', 'Filtering disabled - showing all resources');\n      } else {\n        onMessage?.('info', 'Filtering enabled - set qualifier values and click Apply to filter resources');\n      }\n    },\n    [filterActions, onMessage]\n  );\n\n  // Handle apply filter values\n  const handleApplyFilter = useCallback(() => {\n    filterActions.applyFilterValues();\n    onMessage?.('info', 'Filter applied - processing resources...');\n  }, [filterActions, onMessage]);\n\n  // Handle reset filter values\n  const handleResetFilter = useCallback(() => {\n    filterActions.resetFilterValues();\n    onMessage?.('info', 'Filter values reset');\n  }, [filterActions, onMessage]);\n\n  if (!resources) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <FunnelIcon className=\"h-8 w-8 text-purple-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Filter Tool</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Resources Loaded</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Import resources first to use the filter tool for context-based resource filtering.\n            </p>\n            <div className=\"bg-purple-50 rounded-lg p-4\">\n              <p className=\"text-sm text-purple-800\">\n                <strong>Filter Tool:</strong> Allows you to filter resources based on partial context\n                matching, creating focused subsets for analysis and testing.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center space-x-3 mb-6\">\n        <FunnelIcon className=\"h-8 w-8 text-purple-600\" />\n        <h2 className=\"text-2xl font-bold text-gray-900\">Filter Tool</h2>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        {/* Filter Controls */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Filter Controls</h3>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={filterState.enabled}\n                    onChange={(e) => handleFilterToggle(e.target.checked)}\n                    className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Enable Filtering</span>\n                </label>\n                <label\n                  className=\"flex items-center\"\n                  title=\"Remove perfectly matching qualifier conditions from filtered resources to create cleaner bundles for comparison\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={filterState.reduceQualifiers}\n                    onChange={(e) => filterActions.updateReduceQualifiers(e.target.checked)}\n                    disabled={!filterState.enabled}\n                    className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500 disabled:text-gray-400\"\n                  />\n                  <span\n                    className={`ml-2 text-sm ${!filterState.enabled ? 'text-gray-400' : 'text-gray-700'}`}\n                  >\n                    Reduce Qualifiers\n                  </span>\n                </label>\n                {isFilteringActive && (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                    Active{filterState.reduceQualifiers ? ' + Reducing' : ''}\n                  </span>\n                )}\n                {filterState.hasPendingChanges && filterState.enabled && (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-amber-100 text-amber-800\">\n                    Pending Changes\n                  </span>\n                )}\n              </div>\n\n              {filterState.enabled && (\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={handleResetFilter}\n                    className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                  >\n                    <XMarkIcon className=\"h-4 w-4 mr-1\" />\n                    Reset\n                  </button>\n                  <button\n                    onClick={handleApplyFilter}\n                    disabled={!filterState.hasPendingChanges}\n                    className={`inline-flex items-center px-3 py-1.5 text-xs font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 ${\n                      filterState.hasPendingChanges\n                        ? 'text-white bg-purple-600 hover:bg-purple-700'\n                        : 'text-gray-400 bg-gray-300 cursor-not-allowed'\n                    }`}\n                  >\n                    <CheckIcon className=\"h-4 w-4 mr-1\" />\n                    Apply\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Qualifier Selection Panel */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Context Filters</h3>\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n              {availableQualifiers.map((qualifierName) => (\n                <div key={qualifierName} className=\"bg-white rounded border border-gray-200 p-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <label className=\"text-sm font-medium text-gray-700 min-w-0 flex-shrink-0\">\n                      {qualifierName}:\n                    </label>\n                    <div className=\"flex-1 flex items-center gap-1\">\n                      <input\n                        type=\"text\"\n                        value={filterState.values[qualifierName] ?? ''}\n                        onChange={(e) => handleFilterChange(qualifierName, e.target.value)}\n                        disabled={!filterState.enabled}\n                        className={`flex-1 px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-purple-500 focus:border-transparent text-sm min-w-0 ${\n                          !filterState.enabled ? 'bg-gray-100 text-gray-400' : ''\n                        }`}\n                        placeholder={\n                          !filterState.enabled\n                            ? 'Disabled'\n                            : filterState.values[qualifierName] === undefined\n                            ? '(undefined)'\n                            : `Filter by ${qualifierName}`\n                        }\n                      />\n                      {filterState.enabled && filterState.values[qualifierName] !== undefined && (\n                        <button\n                          type=\"button\"\n                          onClick={() => handleFilterChange(qualifierName, undefined)}\n                          className=\"px-2 py-1 text-xs text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded transition-colors\"\n                          title=\"Set to undefined\"\n                        >\n                          ✕\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            {filterState.enabled && (\n              <div className=\"mt-3 text-sm text-gray-600\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Pending:</strong> {getFilterSummary(filterState.values)}\n                    </p>\n                    {isFilteringActive && (\n                      <p>\n                        <strong>Applied:</strong> {getFilterSummary(filterState.appliedValues)}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                {filterResult && !filterResult.success && filterResult.error && (\n                  <p className=\"text-red-600 text-xs mt-1\">\n                    <strong>Error:</strong> {filterResult.error}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Resource List */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              {isFilteringActive ? 'Filtered Resources' : 'All Resources'}\n            </h3>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              <span>{displayResources.length} resources</span>\n              {isFilteringActive && displayResources.some((r) => r.hasWarning) && (\n                <>\n                  <span>•</span>\n                  <span className=\"text-amber-600 flex items-center\">\n                    <ExclamationTriangleIcon className=\"h-4 w-4 mr-1\" />\n                    {displayResources.filter((r) => r.hasWarning).length} warnings\n                  </span>\n                </>\n              )}\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-lg border border-gray-200 max-h-96 overflow-y-auto\">\n            {displayResources.map((resource) => (\n              <div\n                key={resource.id}\n                className={`flex items-center justify-between px-3 py-2 cursor-pointer hover:bg-gray-100 border-b border-gray-100 last:border-b-0 ${\n                  selectedResourceId === resource.id ? 'bg-purple-50 border-r-2 border-purple-500' : ''\n                }`}\n                onClick={() => handleResourceSelect(resource.id)}\n              >\n                <div className=\"flex items-center space-x-2 flex-1 min-w-0\">\n                  <DocumentTextIcon className=\"w-4 h-4 text-green-500 flex-shrink-0\" />\n                  <span\n                    className={`text-sm truncate ${\n                      selectedResourceId === resource.id ? 'font-medium text-purple-900' : 'text-gray-700'\n                    }`}\n                  >\n                    {resource.id}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2 flex-shrink-0\">\n                  {isFilteringActive && (\n                    <div className=\"flex items-center space-x-1 text-xs\">\n                      <span className=\"text-gray-400\">{resource.originalCandidateCount}</span>\n                      <span className=\"text-gray-400\">→</span>\n                      <span\n                        className={`font-medium ${\n                          resource.filteredCandidateCount === 0\n                            ? 'text-red-600'\n                            : resource.filteredCandidateCount < resource.originalCandidateCount\n                            ? 'text-amber-600'\n                            : 'text-green-600'\n                        }`}\n                      >\n                        {resource.filteredCandidateCount}\n                      </span>\n                    </div>\n                  )}\n                  {!isFilteringActive && (\n                    <span className=\"text-xs text-gray-500\">\n                      {resource.originalCandidateCount} candidates\n                    </span>\n                  )}\n                  {resource.hasWarning && (\n                    <ExclamationTriangleIcon\n                      className=\"h-4 w-4 text-amber-500\"\n                      title=\"No matching candidates\"\n                    />\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Selected Resource Info */}\n        {selectedResourceId && (\n          <div className=\"bg-blue-50 rounded-lg p-4\">\n            <h4 className=\"font-medium text-blue-900 mb-2\">Selected Resource</h4>\n            <p className=\"text-sm text-blue-800\">\n              <strong>ID:</strong> {selectedResourceId}\n            </p>\n            <p className=\"text-sm text-blue-700 mt-1\">\n              Click on a resource above to view detailed filtering information.\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FilterView;"]}