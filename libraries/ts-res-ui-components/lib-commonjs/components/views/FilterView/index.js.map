{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/FilterView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  FunnelIcon,\n  DocumentTextIcon,\n  ExclamationTriangleIcon,\n  ArrowPathIcon,\n  CheckIcon,\n  XMarkIcon,\n  DocumentArrowDownIcon,\n  CodeBracketIcon,\n  ChevronDownIcon,\n  ChevronUpIcon\n} from '@heroicons/react/24/outline';\nimport { Resources } from '@fgv/ts-res';\nimport { FilterViewProps, ResolutionContextOptions } from '../../../types';\nimport { Config } from '@fgv/ts-res';\nimport { QualifierContextControl } from '../../common/QualifierContextControl';\nimport { ResourcePicker } from '../../pickers/ResourcePicker';\nimport {\n  ResourceSelection,\n  ResourceAnnotations,\n  ResourcePickerOptions\n} from '../../pickers/ResourcePicker/types';\nimport { SourceResourceDetail } from '../../common/SourceResourceDetail';\nimport { ResourcePickerOptionsControl } from '../../common/ResourcePickerOptionsControl';\nimport { ResolutionContextOptionsControl } from '../../common/ResolutionContextOptionsControl';\nimport { useObservability } from '../../../contexts';\n\n// Import FilteredResource type from the utils\ninterface FilteredResource {\n  id: string;\n  originalCandidateCount: number;\n  filteredCandidateCount: number;\n  hasWarning: boolean;\n}\n\n/**\n * FilterView component for context-based resource filtering and analysis.\n *\n * Provides a comprehensive interface for filtering resources based on qualifier values,\n * displaying filtered results with candidate count comparisons, and exporting filtered\n * resource collections. Supports partial context matching and qualifier reduction.\n *\n * **Key Features:**\n * - **Context-based filtering**: Filter resources using qualifier values (language, territory, etc.)\n * - **Candidate analysis**: Compare original vs filtered candidate counts for each resource\n * - **Visual indicators**: Highlight resources with reduced candidates or warnings\n * - **Export functionality**: Export filtered resource collections as JSON\n * - **Dual resource comparison**: View original and filtered resource details side-by-side\n * - **Qualifier reduction**: Option to remove perfectly matching qualifiers from results\n *\n * @example\n * ```tsx\n * import { FilterView } from '@fgv/ts-res-ui-components';\n *\n * function MyFilterTool() {\n *   const [filterState, setFilterState] = useState({\n *     enabled: false,\n *     values: {},\n *     appliedValues: {},\n *     hasPendingChanges: false,\n *     reduceQualifiers: false\n *   });\n *\n *   return (\n *     <FilterView\n *       resources={processedResources}\n *       filterState={filterState}\n *       filterActions={{\n *         updateFilterEnabled: (enabled) => setFilterState(prev => ({...prev, enabled})),\n *         updateFilterValues: (values) => setFilterState(prev => ({...prev, values})),\n *         applyFilterValues: () => setFilterState(prev => ({...prev, appliedValues: prev.values})),\n *         resetFilterValues: () => setFilterState(prev => ({...prev, values: {}})),\n *         updateReduceQualifiers: (reduce) => setFilterState(prev => ({...prev, reduceQualifiers: reduce}))\n *       }}\n *       onFilterResult={(result) => console.log('Filter result:', result)}\n *       onMessage={(type, message) => console.log(`${type}: ${message}`)}\n *     />\n *   );\n * }\n * ```\n *\n * @public\n */\nexport const FilterView: React.FC<FilterViewProps> = ({\n  resources,\n  filterState,\n  filterActions,\n  filterResult,\n  onFilterResult,\n  onMessage,\n  pickerOptions,\n  pickerOptionsPresentation = 'hidden',\n  contextOptions,\n  className = ''\n}) => {\n  // Get observability context\n  const o11y = useObservability();\n\n  // Local UI state\n  const [selectedResourceId, setSelectedResourceId] = useState<string | null>(null);\n  const [showFilteredJsonView, setShowFilteredJsonView] = useState(false);\n\n  // State for picker options control\n  const [currentPickerOptions, setCurrentPickerOptions] = useState<ResourcePickerOptions>(\n    pickerOptions || {}\n  );\n\n  // State for context options control\n  const [currentContextOptions, setCurrentContextOptions] = useState<ResolutionContextOptions>(\n    contextOptions || {}\n  );\n\n  // Merge picker options with filter-specific defaults\n  const effectivePickerOptions = useMemo(\n    () => ({\n      defaultView: 'list' as const,\n      showViewToggle: true,\n      enableSearch: true,\n      searchPlaceholder: 'Search resources...',\n      searchScope: 'all' as const,\n      height: '520px',\n      emptyMessage: 'No resources available',\n      // Override with user-provided options\n      ...pickerOptions,\n      // Override with current picker options from control\n      ...currentPickerOptions\n    }),\n    [pickerOptions, currentPickerOptions]\n  );\n\n  // Available qualifiers from system configuration or compiled collection\n  const availableQualifiers = useMemo(() => {\n    if (resources?.compiledCollection.qualifiers) {\n      return resources.compiledCollection.qualifiers.map((q) => q.name);\n    }\n\n    // Fallback to default qualifiers if no compiled collection\n    return ['language', 'territory', 'currentTerritory', 'role', 'env'];\n  }, [resources?.compiledCollection.qualifiers]);\n\n  // Merge context options with current options from control\n  const effectiveContextOptions = useMemo(\n    () => ({\n      ...contextOptions,\n      ...currentContextOptions\n    }),\n    [contextOptions, currentContextOptions]\n  );\n\n  // Handle filter value changes using the shared component's callback pattern\n  const handleQualifierChange = useCallback(\n    (qualifierName: string, value: string | undefined) => {\n      // Don't update filter values if this qualifier is host-managed\n      const qualifierOptions = effectiveContextOptions?.qualifierOptions?.[qualifierName];\n      const isHostManaged = qualifierOptions?.hostValue !== undefined;\n\n      if (!isHostManaged) {\n        const newValues = { ...filterState.values, [qualifierName]: value };\n        filterActions.updateFilterValues(newValues);\n      }\n    },\n    [filterState.values, filterActions, effectiveContextOptions?.qualifierOptions]\n  );\n\n  // Check if we have any applied filter values set\n  const hasAppliedFilterValues = useMemo(() => {\n    if (!filterState.appliedValues) return false;\n    return Object.values(filterState.appliedValues).some((value) => value !== undefined && value !== '');\n  }, [filterState.appliedValues]);\n\n  // Determine if filtering is active (enabled AND has applied values)\n  const isFilteringActive = filterState.enabled && hasAppliedFilterValues;\n\n  // Simplified filter summary\n  const getFilterSummary = useCallback((values: Record<string, string | undefined>) => {\n    const activeFilters = Object.entries(values)\n      .filter(([, value]) => value !== undefined && value !== '')\n      .map(([key, value]) => `${key}=${value}`);\n    return activeFilters.length > 0 ? activeFilters.join(', ') : 'No filters';\n  }, []);\n\n  // Get filtered resource collection data (simplified)\n  const getFilteredResourceCollectionData = useCallback(() => {\n    if (!filterResult?.processedResources?.system.resourceManager) {\n      return null;\n    }\n\n    const resourceManager = filterResult.processedResources.system.resourceManager;\n\n    // Check if this is a ResourceManagerBuilder (has getResourceCollectionDecl method)\n    if ('getResourceCollectionDecl' in resourceManager) {\n      const collectionResult = (\n        resourceManager as Resources.ResourceManagerBuilder\n      ).getResourceCollectionDecl();\n      if (collectionResult.isSuccess()) {\n        return {\n          ...collectionResult.value,\n          metadata: {\n            exportedAt: new Date().toISOString(),\n            totalResources: filterResult.processedResources.resourceCount,\n            type: 'ts-res-filtered-resource-collection',\n            filterContext: filterState.appliedValues,\n            reduceQualifiers: filterState.reduceQualifiers\n          }\n        };\n      } else {\n        onMessage?.('error', `Failed to get filtered resource collection: ${collectionResult.message}`);\n        return null;\n      }\n    } else if (filterResult.processedResources.compiledCollection) {\n      // For IResourceManager from bundles, use the compiled collection directly\n      return {\n        resources: filterResult.processedResources.compiledCollection.resources || [],\n        metadata: {\n          exportedAt: new Date().toISOString(),\n          totalResources: filterResult.processedResources.resourceCount,\n          type: 'ts-res-filtered-resource-collection',\n          filterContext: filterState.appliedValues,\n          reduceQualifiers: filterState.reduceQualifiers\n        }\n      };\n    } else {\n      onMessage?.('error', 'Filtered resource collection data not available');\n      return null;\n    }\n  }, [filterResult, onMessage, filterState.appliedValues, filterState.reduceQualifiers]);\n\n  // Export filtered resource collection data\n  const handleExportFilteredData = useCallback(() => {\n    try {\n      const collectionData = getFilteredResourceCollectionData();\n      if (!collectionData) {\n        onMessage?.('error', 'No filtered collection data available to export');\n        return;\n      }\n\n      const filterSummary = getFilterSummary(filterState.appliedValues);\n      // Use onExport callback instead of direct file download for flexibility\n      // onExport?.(collectionData, 'json');\n      onMessage?.('success', 'Filtered resource collection exported successfully');\n    } catch (error) {\n      onMessage?.(\n        'error',\n        `Failed to export filtered resource collection: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }, [getFilteredResourceCollectionData, onMessage, filterState.appliedValues, getFilterSummary]);\n\n  // Get resources to display (filtered or original) - now uses orchestrator's filterResult\n  const displayResources = useMemo(() => {\n    o11y.diag.info('FilterView displayResources calculation:', {\n      hasResources: !!resources,\n      isFilteringActive,\n      filterResultExists: !!filterResult,\n      filterResultSuccess: filterResult?.success,\n      filterResultCount: filterResult?.filteredResources?.length,\n      appliedValues: filterState.appliedValues,\n      hasAppliedFilterValues\n    });\n\n    if (!resources) return [];\n\n    let resourceList: FilteredResource[] = [];\n\n    if (isFilteringActive && filterResult?.success && filterResult.filteredResources) {\n      o11y.diag.info('Using filtered resources:', filterResult.filteredResources.length);\n      o11y.diag.info(\n        'Filtered resource details:',\n        filterResult.filteredResources.map((r) => ({\n          id: r.id,\n          original: r.originalCandidateCount,\n          filtered: r.filteredCandidateCount,\n          hasWarning: r.hasWarning\n        }))\n      );\n      resourceList = filterResult.filteredResources;\n    } else {\n      // Return original resources\n      o11y.diag.info('Using original resources');\n      const originalResources = resources.summary.resourceIds || [];\n      resourceList = originalResources.map((id) => {\n        const resourceResult = resources.system.resourceManager.getBuiltResource(id);\n        const candidateCount = resourceResult.isSuccess() ? resourceResult.value.candidates.length : 0;\n\n        return {\n          id,\n          originalCandidateCount: candidateCount,\n          filteredCandidateCount: candidateCount,\n          hasWarning: false\n        };\n      });\n    }\n\n    // Sort resources alphabetically by id\n    return resourceList.sort((a, b) => a.id.localeCompare(b.id));\n  }, [resources, isFilteringActive, filterResult]);\n\n  // Create resource annotations for filtering information\n  const resourceAnnotations = useMemo(() => {\n    const annotations: ResourceAnnotations = {};\n\n    displayResources.forEach((resource) => {\n      if (isFilteringActive) {\n        // Show filtering effects with candidate count changes\n        const originalCount = resource.originalCandidateCount;\n        const filteredCount = resource.filteredCandidateCount;\n\n        // Determine badge color and text based on filtering result\n        let badgeVariant: 'info' | 'warning' | 'error' = 'info';\n        let badgeText = `${originalCount} → ${filteredCount}`;\n\n        if (filteredCount === 0) {\n          badgeVariant = 'error';\n          badgeText = `${originalCount} → 0`;\n        } else if (filteredCount < originalCount) {\n          badgeVariant = 'warning';\n        }\n\n        annotations[resource.id] = {\n          badge: {\n            text: badgeText,\n            variant: badgeVariant\n          }\n        };\n\n        // Add warning indicator for resources with issues\n        if (resource.hasWarning) {\n          annotations[resource.id].indicator = {\n            type: 'icon',\n            value: '⚠️',\n            tooltip: 'No matching candidates after filtering'\n          };\n        }\n      } else {\n        // Show candidate count only for non-filtered view\n        const count = resource.originalCandidateCount;\n        annotations[resource.id] = {\n          suffix: `${count} candidate${count !== 1 ? 's' : ''}`\n        };\n      }\n    });\n\n    return annotations;\n  }, [displayResources, isFilteringActive]);\n\n  // Determine which qualifiers to show and their options\n  const visibleQualifiers = useMemo(() => {\n    if (!effectiveContextOptions?.qualifierOptions) {\n      return availableQualifiers;\n    }\n\n    return availableQualifiers.filter((qualifierName) => {\n      const options = effectiveContextOptions.qualifierOptions![qualifierName];\n      return options?.visible !== false;\n    });\n  }, [availableQualifiers, effectiveContextOptions?.qualifierOptions]);\n\n  // Get effective filter values including host-managed values\n  const effectiveFilterValues = useMemo(() => {\n    const baseValues = filterState.values || {};\n    const hostValues = effectiveContextOptions?.hostManagedValues || {};\n    return { ...baseValues, ...hostValues };\n  }, [filterState.values, effectiveContextOptions?.hostManagedValues]);\n\n  // Handle filter value changes\n  const handleFilterChange = useCallback(\n    (qualifierName: string, value: string | undefined) => {\n      const newValues = { ...filterState.values, [qualifierName]: value };\n      filterActions.updateFilterValues(newValues);\n    },\n    [filterState.values, filterActions]\n  );\n\n  // Handle resource selection with enhanced callback\n  const handleResourceSelect = useCallback((selection: ResourceSelection) => {\n    setSelectedResourceId(selection.resourceId);\n  }, []);\n\n  // Handle filter toggle\n  const handleFilterToggle = useCallback(\n    (enabled: boolean) => {\n      filterActions.updateFilterEnabled(enabled);\n      if (!enabled) {\n        onMessage?.('info', 'Filtering disabled - showing all resources');\n      } else {\n        onMessage?.('info', 'Filtering enabled - set qualifier values and click Apply to filter resources');\n      }\n    },\n    [filterActions, onMessage]\n  );\n\n  // Handle apply filter values\n  const handleApplyFilter = useCallback(() => {\n    filterActions.applyFilterValues();\n    onMessage?.('info', 'Filter applied - processing resources...');\n  }, [filterActions, onMessage]);\n\n  // Handle reset filter values\n  const handleResetFilter = useCallback(() => {\n    filterActions.resetFilterValues();\n    onMessage?.('info', 'Filter values reset');\n  }, [filterActions, onMessage]);\n\n  if (!resources) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <FunnelIcon className=\"h-8 w-8 text-purple-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Filter Tool</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Resources Loaded</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Import resources first to use the filter tool for context-based resource filtering.\n            </p>\n            <div className=\"bg-purple-50 rounded-lg p-4\">\n              <p className=\"text-sm text-purple-800\">\n                <strong>Filter Tool:</strong> Allows you to filter resources based on partial context\n                matching, creating focused subsets for analysis and testing.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center space-x-3 mb-6\">\n        <FunnelIcon className=\"h-8 w-8 text-purple-600\" />\n        <h2 className=\"text-2xl font-bold text-gray-900\">Filter Tool</h2>\n      </div>\n\n      {/* ResourcePicker Options Control */}\n      <ResourcePickerOptionsControl\n        options={currentPickerOptions}\n        onOptionsChange={setCurrentPickerOptions}\n        presentation={pickerOptionsPresentation}\n        title=\"Filter Tool Picker Options\"\n        className=\"mb-6\"\n      />\n\n      {/* FilterContext Options Control */}\n      <ResolutionContextOptionsControl\n        options={currentContextOptions}\n        onOptionsChange={setCurrentContextOptions}\n        availableQualifiers={availableQualifiers}\n        presentation={pickerOptionsPresentation}\n        title=\"Filter Context Options\"\n        className=\"mb-6\"\n      />\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        {/* Filter Controls */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Filter Controls</h3>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={filterState.enabled}\n                    onChange={(e) => handleFilterToggle(e.target.checked)}\n                    className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Enable Filtering</span>\n                </label>\n                <label\n                  className=\"flex items-center\"\n                  title=\"Remove perfectly matching qualifier conditions from filtered resources to create cleaner bundles for comparison\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={filterState.reduceQualifiers}\n                    onChange={(e) => filterActions.updateReduceQualifiers(e.target.checked)}\n                    disabled={!filterState.enabled}\n                    className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500 disabled:text-gray-400\"\n                  />\n                  <span\n                    className={`ml-2 text-sm ${!filterState.enabled ? 'text-gray-400' : 'text-gray-700'}`}\n                  >\n                    Reduce Qualifiers\n                  </span>\n                </label>\n                {isFilteringActive && (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                    Active{filterState.reduceQualifiers ? ' + Reducing' : ''}\n                  </span>\n                )}\n                {filterState.hasPendingChanges && filterState.enabled && (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-amber-100 text-amber-800\">\n                    Pending Changes\n                  </span>\n                )}\n              </div>\n\n              {filterState.enabled && (\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={handleResetFilter}\n                    className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                  >\n                    <XMarkIcon className=\"h-4 w-4 mr-1\" />\n                    Reset\n                  </button>\n                  <button\n                    onClick={handleApplyFilter}\n                    disabled={!filterState.hasPendingChanges}\n                    className={`inline-flex items-center px-3 py-1.5 text-xs font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 ${\n                      filterState.hasPendingChanges\n                        ? 'text-white bg-purple-600 hover:bg-purple-700'\n                        : 'text-gray-400 bg-gray-300 cursor-not-allowed'\n                    }`}\n                  >\n                    <CheckIcon className=\"h-4 w-4 mr-1\" />\n                    Apply\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Qualifier Selection Panel */}\n        {effectiveContextOptions?.showContextControls !== false && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              {effectiveContextOptions?.contextPanelTitle || 'Context Filters'}\n            </h3>\n            <div\n              className={`bg-gray-50 rounded-lg p-4 ${effectiveContextOptions?.contextPanelClassName || ''}`}\n            >\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {visibleQualifiers.map((qualifierName) => {\n                  const qualifierOptions = effectiveContextOptions?.qualifierOptions?.[qualifierName];\n                  const hostManagedValue = effectiveContextOptions?.hostManagedValues?.[qualifierName];\n                  const globalPlaceholder =\n                    typeof effectiveContextOptions?.globalPlaceholder === 'function'\n                      ? effectiveContextOptions.globalPlaceholder(qualifierName)\n                      : effectiveContextOptions?.globalPlaceholder;\n\n                  // Merge host-managed values with qualifier options\n                  const mergedOptions = {\n                    ...qualifierOptions,\n                    // Host-managed values override qualifier-specific host values\n                    hostValue:\n                      hostManagedValue !== undefined ? hostManagedValue : qualifierOptions?.hostValue,\n                    // Apply filter-enabled state to editability\n                    editable: filterState.enabled && qualifierOptions?.editable !== false\n                  };\n\n                  return (\n                    <QualifierContextControl\n                      key={qualifierName}\n                      qualifierName={qualifierName}\n                      value={filterState.values[qualifierName]}\n                      onChange={handleQualifierChange}\n                      disabled={!filterState.enabled}\n                      placeholder={globalPlaceholder || `Filter by ${qualifierName}`}\n                      resources={resources}\n                      options={mergedOptions}\n                    />\n                  );\n                })}\n              </div>\n              {filterState.enabled && effectiveContextOptions?.showCurrentContext !== false && (\n                <div className=\"mt-3 text-sm text-gray-600\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-1\">\n                      <p>\n                        <strong>Pending:</strong> {getFilterSummary(effectiveFilterValues)}\n                      </p>\n                      {isFilteringActive && (\n                        <p>\n                          <strong>Applied:</strong> {getFilterSummary(filterState.appliedValues)}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  {filterResult && !filterResult.success && filterResult.error && (\n                    <p className=\"text-red-600 text-xs mt-1\">\n                      <strong>Error:</strong> {filterResult.error}\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Main Browser/Details Layout */}\n        <div className=\"flex flex-col md:flex-row gap-6 h-[600px]\">\n          {/* Left side: Resource List */}\n          <div className=\"md:w-1/2 flex flex-col\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  {isFilteringActive ? 'Filtered Resources' : 'All Resources'}\n                </h3>\n                {isFilteringActive && displayResources.some((r) => r.hasWarning) && (\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500 mt-1\">\n                    <span className=\"text-amber-600 flex items-center\">\n                      <ExclamationTriangleIcon className=\"h-4 w-4 mr-1\" />\n                      {displayResources.filter((r) => r.hasWarning).length} warnings\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex-1\">\n              <ResourcePicker\n                resources={\n                  isFilteringActive && filterResult?.processedResources\n                    ? filterResult.processedResources\n                    : resources\n                }\n                selectedResourceId={selectedResourceId}\n                onResourceSelect={handleResourceSelect}\n                resourceAnnotations={resourceAnnotations}\n                options={{\n                  ...effectivePickerOptions,\n                  searchPlaceholder: isFilteringActive\n                    ? 'Search filtered resources...'\n                    : effectivePickerOptions.searchPlaceholder,\n                  emptyMessage: isFilteringActive\n                    ? 'No resources match the filter criteria'\n                    : effectivePickerOptions.emptyMessage\n                }}\n                onMessage={onMessage}\n              />\n            </div>\n          </div>\n\n          {/* Right side: Resource Details */}\n          <div className=\"md:w-1/2 flex flex-col\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Resource Details</h3>\n            </div>\n\n            <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg p-4 bg-gray-50\">\n              {!selectedResourceId ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <div className=\"text-center\">\n                    <FunnelIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                    <p className=\"text-gray-500\">Select a resource to view details</p>\n                    {isFilteringActive && (\n                      <p className=\"text-sm text-gray-400 mt-2\">\n                        Showing resources that match your filter criteria\n                      </p>\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <SourceResourceDetail\n                  resourceId={selectedResourceId}\n                  processedResources={\n                    isFilteringActive && filterResult?.processedResources\n                      ? filterResult.processedResources\n                      : resources\n                  }\n                  originalProcessedResources={isFilteringActive ? resources : undefined}\n                  filterContext={isFilteringActive ? filterState.appliedValues : undefined}\n                  showComparison={isFilteringActive}\n                  primaryLabel=\"Filtered\"\n                  secondaryLabel=\"Original\"\n                  onMessage={onMessage}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterView;\n"]}