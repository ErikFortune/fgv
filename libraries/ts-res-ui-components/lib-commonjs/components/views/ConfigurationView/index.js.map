{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/ConfigurationView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport {\n  CogIcon,\n  DocumentTextIcon,\n  PlusIcon,\n  TrashIcon,\n  ArrowDownTrayIcon,\n  ArrowUpTrayIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  InformationCircleIcon,\n  EyeIcon,\n  PencilIcon,\n  XMarkIcon\n} from '@heroicons/react/24/outline';\nimport { ConfigurationViewProps } from '../../../types';\nimport { useConfigurationState } from '../../../hooks/useConfigurationState';\nimport { Config, QualifierTypes, Qualifiers, ResourceTypes } from '@fgv/ts-res';\nimport { QualifierTypeEditForm } from '../../forms/QualifierTypeEditForm';\nimport { GenericQualifierTypeEditForm } from '../../forms/GenericQualifierTypeEditForm';\nimport { QualifierEditForm } from '../../forms/QualifierEditForm';\nimport { ResourceTypeEditForm } from '../../forms/ResourceTypeEditForm';\n\n/**\n * ConfigurationView component for managing ts-res system configurations.\n *\n * Provides a comprehensive interface for creating, editing, and managing ts-res\n * system configurations including qualifier types, qualifiers, and resource types.\n * Supports import/export functionality and real-time validation.\n *\n * **Key Features:**\n * - **Configuration editing**: Create and modify system configurations\n * - **Qualifier type management**: Add, edit, and remove qualifier types (language, territory, etc.)\n * - **Qualifier management**: Configure specific qualifiers with default values\n * - **Resource type management**: Define and manage resource types\n * - **Import/export**: Load configurations from files or export current settings\n * - **Real-time validation**: Validate configuration changes as you type\n * - **Change tracking**: Track unsaved changes with visual indicators\n *\n * @example\n * ```tsx\n * import { ConfigurationView } from '@fgv/ts-res-ui-components';\n *\n * function MyConfigurationEditor() {\n *   const [config, setConfig] = useState(defaultConfiguration);\n *   const [hasChanges, setHasChanges] = useState(false);\n *\n *   const handleSave = () => {\n *     console.log('Saving configuration...', config);\n *     setHasChanges(false);\n *   };\n *\n *   return (\n *     <ConfigurationView\n *       configuration={config}\n *       onConfigurationChange={(newConfig) => {\n *         setConfig(newConfig);\n *         setHasChanges(true);\n *       }}\n *       onSave={handleSave}\n *       hasUnsavedChanges={hasChanges}\n *       onMessage={(type, message) => console.log(`${type}: ${message}`)}\n *     />\n *   );\n * }\n * ```\n *\n * @public\n */\nexport const ConfigurationView: React.FC<ConfigurationViewProps> = ({\n  configuration,\n  onConfigurationChange,\n  onSave,\n  hasUnsavedChanges,\n  onMessage,\n  className = ''\n}) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [editingQualifierType, setEditingQualifierType] = useState<{\n    item: QualifierTypes.Config.IAnyQualifierTypeConfig;\n    index: number;\n  } | null>(null);\n  const [editingQualifier, setEditingQualifier] = useState<{\n    item: Qualifiers.IQualifierDecl;\n    index: number;\n  } | null>(null);\n  const [editingResourceType, setEditingResourceType] = useState<{\n    item: ResourceTypes.Config.IResourceTypeConfig;\n    index: number;\n  } | null>(null);\n  const [showAddQualifierType, setShowAddQualifierType] = useState(false);\n  const [addQualifierTypeMode, setAddQualifierTypeMode] = useState<'system' | 'custom' | null>(null);\n  const [showAddQualifier, setShowAddQualifier] = useState(false);\n  const [showAddResourceType, setShowAddResourceType] = useState(false);\n\n  const { state, actions, templates } = useConfigurationState(\n    configuration || undefined,\n    onConfigurationChange,\n    hasUnsavedChanges\n      ? undefined\n      : (changes) => {\n          // Only notify if we weren't already told there are unsaved changes\n        }\n  );\n\n  // Handle file import\n  const handleFileImport = useCallback(\n    (files: FileList | null) => {\n      if (!files || files.length === 0) return;\n\n      const file = files[0];\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const content = e.target?.result as string;\n        if (content) {\n          const result = actions.importFromJson(content);\n          if (result.isSuccess()) {\n            onMessage?.('success', `Configuration imported from ${file.name}`);\n          } else {\n            onMessage?.('error', `Import failed: ${result.message}`);\n          }\n        }\n      };\n\n      reader.onerror = () => {\n        onMessage?.('error', `Failed to read file: ${file.name}`);\n      };\n\n      reader.readAsText(file);\n    },\n    [actions, onMessage]\n  );\n\n  // Handle export\n  const handleExport = useCallback(() => {\n    const result = actions.exportToJson({ format: 'json', pretty: true });\n    if (result.isSuccess()) {\n      const blob = new Blob([result.value], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'ts-res-configuration.json';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      onMessage?.('success', 'Configuration exported successfully');\n    } else {\n      onMessage?.('error', `Export failed: ${result.message}`);\n    }\n  }, [actions, onMessage]);\n\n  // Handle template loading\n  const handleLoadTemplate = useCallback(\n    (templateId: string) => {\n      const result = actions.loadTemplate(templateId);\n      if (result.isSuccess()) {\n        const template = templates.find((t) => t.id === templateId);\n        onMessage?.('success', `Loaded template: ${template?.name}`);\n      } else {\n        onMessage?.('error', `Failed to load template: ${result.message}`);\n      }\n    },\n    [actions, templates, onMessage]\n  );\n\n  // Handle save\n  const handleSave = useCallback(() => {\n    if (onSave) {\n      onSave(state.currentConfiguration);\n      actions.applyConfiguration();\n      onMessage?.('success', 'Configuration saved successfully');\n    }\n  }, [onSave, state.currentConfiguration, actions, onMessage]);\n\n  if (!configuration && !state.currentConfiguration) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <CogIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Configuration</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Configuration Available</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Load a configuration to manage qualifiers, qualifier types, and resource types.\n            </p>\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Configuration Manager:</strong> Define and manage system configurations for resource\n                management, including qualifiers, qualifier types, and resource types.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <CogIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Configuration</h2>\n          {state.hasUnsavedChanges && (\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n              Unsaved Changes\n            </span>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {/* Template Selection */}\n          <select\n            onChange={(e) => e.target.value && handleLoadTemplate(e.target.value)}\n            value=\"\"\n            className=\"px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"\">Load Template...</option>\n            {templates.map((template) => (\n              <option key={template.id} value={template.id}>\n                {template.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Import Button */}\n          <button\n            onClick={() => fileInputRef.current?.click()}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <ArrowUpTrayIcon className=\"w-4 h-4 mr-2\" />\n            Import\n          </button>\n\n          {/* Export Button */}\n          <button\n            onClick={handleExport}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\n            Export\n          </button>\n\n          {/* View Toggle */}\n          <button\n            onClick={actions.toggleJsonView}\n            className={`inline-flex items-center px-3 py-2 border rounded-md text-sm font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n              state.isJsonView\n                ? 'border-blue-600 text-blue-600 bg-blue-50'\n                : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n            }`}\n          >\n            {state.isJsonView ? (\n              <>\n                <PencilIcon className=\"w-4 h-4 mr-2\" />\n                Form View\n              </>\n            ) : (\n              <>\n                <EyeIcon className=\"w-4 h-4 mr-2\" />\n                JSON View\n              </>\n            )}\n          </button>\n\n          {/* Save Button */}\n          {onSave && (\n            <button\n              onClick={handleSave}\n              disabled={!state.hasUnsavedChanges}\n              className={`inline-flex items-center px-4 py-2 border border-transparent rounded-md text-sm font-medium ${\n                state.hasUnsavedChanges\n                  ? 'text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500'\n                  : 'text-gray-400 bg-gray-200 cursor-not-allowed'\n              }`}\n            >\n              Save\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Validation Status */}\n      {!state.validation.isValid && (\n        <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2 text-red-600 mb-2\">\n            <ExclamationTriangleIcon className=\"w-5 h-5\" />\n            <span className=\"font-medium\">Configuration Issues</span>\n          </div>\n          <ul className=\"text-sm text-red-700 space-y-1\">\n            {state.validation.errors.map((error, index) => (\n              <li key={index}>• {error}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Warnings */}\n      {state.validation.warnings.length > 0 && (\n        <div className=\"mb-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2 text-yellow-600 mb-2\">\n            <InformationCircleIcon className=\"w-5 h-5\" />\n            <span className=\"font-medium\">Configuration Warnings</span>\n          </div>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            {state.validation.warnings.map((warning, index) => (\n              <li key={index}>• {warning}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        {state.isJsonView ? (\n          // JSON Editor View\n          <div className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">JSON Configuration</h3>\n              <button\n                onClick={() => {\n                  const result = actions.applyJsonChanges();\n                  if (result.isSuccess()) {\n                    onMessage?.('success', 'JSON changes applied');\n                  } else {\n                    onMessage?.('error', `JSON error: ${result.message}`);\n                  }\n                }}\n                disabled={!!state.jsonError}\n                className={`px-4 py-2 rounded-md text-sm font-medium ${\n                  state.jsonError\n                    ? 'bg-gray-200 text-gray-400 cursor-not-allowed'\n                    : 'bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500'\n                }`}\n              >\n                Apply Changes\n              </button>\n            </div>\n\n            {state.jsonError && (\n              <div className=\"mb-4 bg-red-50 border border-red-200 rounded-lg p-3\">\n                <p className=\"text-sm text-red-700\">{state.jsonError}</p>\n              </div>\n            )}\n\n            <textarea\n              value={state.jsonString}\n              onChange={(e) => actions.updateJsonString(e.target.value)}\n              className=\"w-full h-96 px-3 py-2 border border-gray-300 rounded-md font-mono text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter JSON configuration...\"\n            />\n          </div>\n        ) : (\n          // Form View\n          <div>\n            {/* Tab Navigation */}\n            <div className=\"border-b border-gray-200\">\n              <nav className=\"-mb-px flex space-x-8 px-6\">\n                {[\n                  {\n                    key: 'qualifiers' as const,\n                    label: 'Qualifiers',\n                    count: state.currentConfiguration.qualifiers?.length || 0\n                  },\n                  {\n                    key: 'qualifierTypes' as const,\n                    label: 'Qualifier Types',\n                    count: state.currentConfiguration.qualifierTypes?.length || 0\n                  },\n                  {\n                    key: 'resourceTypes' as const,\n                    label: 'Resource Types',\n                    count: state.currentConfiguration.resourceTypes?.length || 0\n                  }\n                ].map((tab) => (\n                  <button\n                    key={tab.key}\n                    onClick={() => actions.setActiveTab(tab.key)}\n                    className={`py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap ${\n                      state.activeTab === tab.key\n                        ? 'border-blue-600 text-blue-600'\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                    }`}\n                  >\n                    {tab.label}\n                    <span className=\"ml-2 bg-gray-100 text-gray-900 rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                      {tab.count}\n                    </span>\n                  </button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Tab Content */}\n            <div className=\"p-6\">\n              {state.activeTab === 'qualifiers' && (\n                <QualifiersPanel\n                  qualifiers={state.currentConfiguration.qualifiers || []}\n                  qualifierTypes={state.currentConfiguration.qualifierTypes || []}\n                  onUpdateItem={actions.updateQualifier}\n                  onRemove={actions.removeQualifier}\n                  onShowAdd={() => setShowAddQualifier(true)}\n                  onEdit={(item, index) => setEditingQualifier({ item, index })}\n                />\n              )}\n\n              {state.activeTab === 'qualifierTypes' && (\n                <QualifierTypesPanel\n                  qualifierTypes={state.currentConfiguration.qualifierTypes || []}\n                  onUpdateItem={actions.updateQualifierType}\n                  onRemove={actions.removeQualifierType}\n                  onShowAdd={() => setShowAddQualifierType(true)}\n                  onEdit={(item, index) => setEditingQualifierType({ item, index })}\n                />\n              )}\n\n              {state.activeTab === 'resourceTypes' && (\n                <ResourceTypesPanel\n                  resourceTypes={state.currentConfiguration.resourceTypes || []}\n                  onUpdateItem={actions.updateResourceType}\n                  onRemove={actions.removeResourceType}\n                  onShowAdd={() => setShowAddResourceType(true)}\n                  onEdit={(item, index) => setEditingResourceType({ item, index })}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".json\"\n        onChange={(e) => handleFileImport(e.target.files)}\n        className=\"hidden\"\n      />\n\n      {/* Edit Modals */}\n      {/* Qualifier Type Choice Modal */}\n      {showAddQualifierType && addQualifierTypeMode === null && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full\">\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">Add Qualifier Type</h3>\n                <p className=\"text-sm text-gray-600 mt-1\">Choose the type of qualifier to create</p>\n              </div>\n              <button\n                onClick={() => {\n                  setShowAddQualifierType(false);\n                  setAddQualifierTypeMode(null);\n                }}\n                className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n              >\n                <XMarkIcon className=\"w-6 h-6\" />\n              </button>\n            </div>\n\n            <div className=\"p-6 space-y-4\">\n              <button\n                onClick={() => setAddQualifierTypeMode('system')}\n                className=\"w-full p-4 text-left border-2 border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors\"\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">System Qualifier Type</h4>\n                    <p className=\"text-sm text-gray-600\">\n                      Built-in types: language, territory, or literal with predefined configuration options\n                    </p>\n                  </div>\n                  <CogIcon className=\"w-6 h-6 text-gray-400 ml-3\" />\n                </div>\n              </button>\n\n              <button\n                onClick={() => setAddQualifierTypeMode('custom')}\n                className=\"w-full p-4 text-left border-2 border-gray-200 rounded-lg hover:border-orange-300 hover:bg-orange-50 transition-colors\"\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">Custom Qualifier Type</h4>\n                    <p className=\"text-sm text-gray-600\">\n                      Custom type with JSON configuration for specialized validation logic\n                    </p>\n                  </div>\n                  <DocumentTextIcon className=\"w-6 h-6 text-gray-400 ml-3\" />\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* System Qualifier Type Form */}\n      {showAddQualifierType && addQualifierTypeMode === 'system' && (\n        <QualifierTypeEditForm\n          onSave={(qualifierType) => {\n            actions.addQualifierType(qualifierType);\n            setShowAddQualifierType(false);\n            setAddQualifierTypeMode(null);\n            onMessage?.('success', `Added system qualifier type: ${qualifierType.name}`);\n          }}\n          onCancel={() => {\n            setShowAddQualifierType(false);\n            setAddQualifierTypeMode(null);\n          }}\n          existingNames={(state.currentConfiguration.qualifierTypes || []).map((qt) => qt.name)}\n        />\n      )}\n\n      {/* Custom Qualifier Type Form */}\n      {showAddQualifierType && addQualifierTypeMode === 'custom' && (\n        <GenericQualifierTypeEditForm\n          onSave={(qualifierType) => {\n            actions.addQualifierType(qualifierType);\n            setShowAddQualifierType(false);\n            setAddQualifierTypeMode(null);\n            onMessage?.('success', `Added custom qualifier type: ${qualifierType.name}`);\n          }}\n          onCancel={() => {\n            setShowAddQualifierType(false);\n            setAddQualifierTypeMode(null);\n          }}\n          existingNames={(state.currentConfiguration.qualifierTypes || []).map((qt) => qt.name)}\n        />\n      )}\n\n      {editingQualifierType &&\n        (QualifierTypes.Config.isSystemQualifierTypeConfig(editingQualifierType.item) ? (\n          <QualifierTypeEditForm\n            qualifierType={editingQualifierType.item}\n            onSave={(qualifierType) => {\n              actions.updateQualifierType(editingQualifierType.index, qualifierType);\n              setEditingQualifierType(null);\n              onMessage?.('success', `Updated qualifier type: ${qualifierType.name}`);\n            }}\n            onCancel={() => setEditingQualifierType(null)}\n            existingNames={(state.currentConfiguration.qualifierTypes || [])\n              .filter((_, i) => i !== editingQualifierType.index)\n              .map((qt) => qt.name)}\n          />\n        ) : (\n          <GenericQualifierTypeEditForm\n            qualifierType={editingQualifierType.item}\n            onSave={(qualifierType) => {\n              actions.updateQualifierType(editingQualifierType.index, qualifierType);\n              setEditingQualifierType(null);\n              onMessage?.('success', `Updated custom qualifier type: ${qualifierType.name}`);\n            }}\n            onCancel={() => setEditingQualifierType(null)}\n            existingNames={(state.currentConfiguration.qualifierTypes || [])\n              .filter((_, i) => i !== editingQualifierType.index)\n              .map((qt) => qt.name)}\n          />\n        ))}\n\n      {showAddQualifier && (\n        <QualifierEditForm\n          qualifierTypes={(state.currentConfiguration.qualifierTypes || []).filter(\n            QualifierTypes.Config.isSystemQualifierTypeConfig\n          )}\n          onSave={(qualifier) => {\n            actions.addQualifier(qualifier);\n            setShowAddQualifier(false);\n            onMessage?.('success', `Added qualifier: ${qualifier.name}`);\n          }}\n          onCancel={() => setShowAddQualifier(false)}\n          existingNames={(state.currentConfiguration.qualifiers || []).map((q) => q.name)}\n        />\n      )}\n\n      {editingQualifier && (\n        <QualifierEditForm\n          qualifier={editingQualifier.item}\n          qualifierTypes={(state.currentConfiguration.qualifierTypes || []).filter(\n            QualifierTypes.Config.isSystemQualifierTypeConfig\n          )}\n          onSave={(qualifier) => {\n            actions.updateQualifier(editingQualifier.index, qualifier);\n            setEditingQualifier(null);\n            onMessage?.('success', `Updated qualifier: ${qualifier.name}`);\n          }}\n          onCancel={() => setEditingQualifier(null)}\n          existingNames={(state.currentConfiguration.qualifiers || [])\n            .filter((_, i) => i !== editingQualifier.index)\n            .map((q) => q.name)}\n        />\n      )}\n\n      {showAddResourceType && (\n        <ResourceTypeEditForm\n          onSave={(resourceType) => {\n            actions.addResourceType(resourceType);\n            setShowAddResourceType(false);\n            onMessage?.('success', `Added resource type: ${resourceType.name}`);\n          }}\n          onCancel={() => setShowAddResourceType(false)}\n          existingNames={(state.currentConfiguration.resourceTypes || []).map((rt) => rt.name)}\n        />\n      )}\n\n      {editingResourceType && (\n        <ResourceTypeEditForm\n          resourceType={editingResourceType.item}\n          onSave={(resourceType) => {\n            actions.updateResourceType(editingResourceType.index, resourceType);\n            setEditingResourceType(null);\n            onMessage?.('success', `Updated resource type: ${resourceType.name}`);\n          }}\n          onCancel={() => setEditingResourceType(null)}\n          existingNames={(state.currentConfiguration.resourceTypes || [])\n            .filter((_, i) => i !== editingResourceType.index)\n            .map((rt) => rt.name)}\n        />\n      )}\n    </div>\n  );\n};\n\n// Comprehensive panel components with full editing capabilities\ninterface QualifierTypesPanelProps {\n  qualifierTypes: QualifierTypes.Config.IAnyQualifierTypeConfig[];\n  onUpdateItem: (index: number, qualifierType: QualifierTypes.Config.IAnyQualifierTypeConfig) => void;\n  onRemove: (index: number) => void;\n  onShowAdd: () => void;\n  onEdit: (item: QualifierTypes.Config.IAnyQualifierTypeConfig, index: number) => void;\n}\n\nconst QualifierTypesPanel: React.FC<QualifierTypesPanelProps> = ({\n  qualifierTypes,\n  onRemove,\n  onShowAdd,\n  onEdit\n}) => {\n  const getConfigurationSummary = (type: QualifierTypes.Config.IAnyQualifierTypeConfig): string => {\n    if (!type.configuration) return 'No configuration';\n\n    // Handle system qualifier types\n    if (QualifierTypes.Config.isSystemQualifierTypeConfig(type)) {\n      const config = type.configuration as Record<string, unknown>;\n      const details: string[] = [];\n\n      if (config?.allowContextList) details.push('Context List');\n      if (type.systemType === 'literal') {\n        if (config?.caseSensitive === false) details.push('Case Insensitive');\n        const enumValues = config?.enumeratedValues as string[] | undefined;\n        if (enumValues?.length) details.push(`${enumValues.length} values`);\n      }\n      if (type.systemType === 'territory') {\n        if (config?.acceptLowercase) details.push('Accept Lowercase');\n        const territories = config?.allowedTerritories as string[] | undefined;\n        if (territories?.length) details.push(`${territories.length} territories`);\n      }\n\n      return details.length > 0 ? details.join(', ') : 'Default settings';\n    }\n\n    // Handle custom qualifier types\n    const config = type.configuration;\n    if (typeof config === 'object' && config !== null) {\n      const keys = Object.keys(config);\n      return keys.length > 0 ? `${keys.length} properties` : 'Empty configuration';\n    }\n    return 'Custom configuration';\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Qualifier Types</h3>\n        <button\n          onClick={onShowAdd}\n          className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n        >\n          <PlusIcon className=\"w-4 h-4 mr-2\" />\n          Add Type\n        </button>\n      </div>\n\n      {qualifierTypes.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <CogIcon className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n          <p>No qualifier types defined</p>\n          <p className=\"text-sm\">Add a qualifier type to get started</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {qualifierTypes.map((type, index) => (\n            <div\n              key={index}\n              className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors\"\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <h4 className=\"font-medium text-gray-900\">{type.name}</h4>\n                    <span\n                      className={`px-2 py-1 text-xs font-medium rounded-full ${\n                        QualifierTypes.Config.isSystemQualifierTypeConfig(type)\n                          ? type.systemType === 'language'\n                            ? 'bg-blue-100 text-blue-800'\n                            : type.systemType === 'territory'\n                            ? 'bg-green-100 text-green-800'\n                            : 'bg-purple-100 text-purple-800'\n                          : 'bg-orange-100 text-orange-800 border border-orange-300'\n                      }`}\n                    >\n                      {QualifierTypes.Config.isSystemQualifierTypeConfig(type) ? type.systemType : 'custom'}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-2\">{getConfigurationSummary(type)}</p>\n                </div>\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <button\n                    onClick={() => onEdit(type, index)}\n                    className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded\"\n                    title=\"Edit qualifier type\"\n                  >\n                    <PencilIcon className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => onRemove(index)}\n                    className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded\"\n                    title=\"Delete qualifier type\"\n                  >\n                    <TrashIcon className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface QualifiersPanelProps {\n  qualifiers: Qualifiers.IQualifierDecl[];\n  qualifierTypes: QualifierTypes.Config.IAnyQualifierTypeConfig[];\n  onUpdateItem: (index: number, qualifier: Qualifiers.IQualifierDecl) => void;\n  onRemove: (index: number) => void;\n  onShowAdd: () => void;\n  onEdit: (item: Qualifiers.IQualifierDecl, index: number) => void;\n}\n\nconst QualifiersPanel: React.FC<QualifiersPanelProps> = ({\n  qualifiers,\n  qualifierTypes,\n  onRemove,\n  onShowAdd,\n  onEdit\n}) => {\n  // Sort qualifiers by priority (highest first)\n  const sortedQualifiers = [...qualifiers].sort((a, b) => b.defaultPriority - a.defaultPriority);\n\n  const getQualifierSummary = (qualifier: Qualifiers.IQualifierDecl): string => {\n    const qualifierType = qualifierTypes.find((qt) => qt.name === qualifier.typeName);\n    const details: string[] = [];\n\n    if (qualifier.token) details.push(`Token: ${qualifier.token}`);\n    if (qualifier.defaultValue) details.push(`Default: ${qualifier.defaultValue}`);\n    if (qualifier.tokenIsOptional) details.push('Optional Token');\n    if (qualifierType) details.push(`System: ${qualifierType.systemType}`);\n\n    return details.join(' • ');\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Qualifiers</h3>\n        <button\n          onClick={onShowAdd}\n          disabled={qualifierTypes.length === 0}\n          className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n          title={qualifierTypes.length === 0 ? 'Add qualifier types first' : 'Add qualifier'}\n        >\n          <PlusIcon className=\"w-4 h-4 mr-2\" />\n          Add Qualifier\n        </button>\n      </div>\n\n      {qualifierTypes.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <ExclamationTriangleIcon className=\"w-12 h-12 mx-auto mb-4 text-amber-400\" />\n          <p>No qualifier types available</p>\n          <p className=\"text-sm\">Create qualifier types first before adding qualifiers</p>\n        </div>\n      ) : qualifiers.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <CogIcon className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n          <p>No qualifiers defined</p>\n          <p className=\"text-sm\">Add a qualifier to get started</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {sortedQualifiers.map((qualifier, index) => {\n            const originalIndex = qualifiers.findIndex((q) => q === qualifier);\n            const qualifierType = qualifierTypes.find((qt) => qt.name === qualifier.typeName);\n\n            return (\n              <div\n                key={originalIndex}\n                className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex-1\">\n                    {/* Header line with name, type, and token */}\n                    <div className=\"flex items-center space-x-3 mb-2\">\n                      <h4 className=\"font-medium text-gray-900\">{qualifier.name}</h4>\n                      <span className=\"text-gray-600 text-sm\">{qualifier.typeName}</span>\n                      {qualifier.token && (\n                        <span className=\"px-2 py-1 text-xs font-medium bg-purple-100 text-purple-700 rounded\">\n                          token: {qualifier.token}\n                        </span>\n                      )}\n                      {!qualifierType && (\n                        <span className=\"px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full\">\n                          Missing Type\n                        </span>\n                      )}\n                    </div>\n                    {/* Bottom line with type and priority */}\n                    <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                      <span>Type: {qualifier.typeName}</span>\n                      <span>Priority: {qualifier.defaultPriority}</span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2 ml-4\">\n                    <button\n                      onClick={() => onEdit(qualifier, originalIndex)}\n                      className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded\"\n                      title=\"Edit qualifier\"\n                    >\n                      <PencilIcon className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => onRemove(originalIndex)}\n                      className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded\"\n                      title=\"Delete qualifier\"\n                    >\n                      <TrashIcon className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface ResourceTypesPanelProps {\n  resourceTypes: ResourceTypes.Config.IResourceTypeConfig[];\n  onUpdateItem: (index: number, resourceType: ResourceTypes.Config.IResourceTypeConfig) => void;\n  onRemove: (index: number) => void;\n  onShowAdd: () => void;\n  onEdit: (item: ResourceTypes.Config.IResourceTypeConfig, index: number) => void;\n}\n\nconst ResourceTypesPanel: React.FC<ResourceTypesPanelProps> = ({\n  resourceTypes,\n  onRemove,\n  onShowAdd,\n  onEdit\n}) => {\n  const getTypeNameBadgeColor = (typeName: string): string => {\n    switch (typeName) {\n      case 'string':\n        return 'bg-blue-100 text-blue-800';\n      case 'object':\n        return 'bg-green-100 text-green-800';\n      case 'array':\n        return 'bg-purple-100 text-purple-800';\n      case 'number':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'boolean':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Resource Types</h3>\n        <button\n          onClick={onShowAdd}\n          className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n        >\n          <PlusIcon className=\"w-4 h-4 mr-2\" />\n          Add Type\n        </button>\n      </div>\n\n      {resourceTypes.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <CogIcon className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n          <p>No resource types defined</p>\n          <p className=\"text-sm\">Add a resource type to get started</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {resourceTypes.map((type, index) => (\n            <div\n              key={index}\n              className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors\"\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <h4 className=\"font-medium text-gray-900\">{type.name}</h4>\n                    <span\n                      className={`px-2 py-1 text-xs font-medium rounded-full ${getTypeNameBadgeColor(\n                        type.typeName\n                      )}`}\n                    >\n                      {type.typeName}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    Defines how resources of this type are processed and validated\n                  </p>\n                </div>\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <button\n                    onClick={() => onEdit(type, index)}\n                    className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded\"\n                    title=\"Edit resource type\"\n                  >\n                    <PencilIcon className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => onRemove(index)}\n                    className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded\"\n                    title=\"Delete resource type\"\n                  >\n                    <TrashIcon className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConfigurationView;\n"]}