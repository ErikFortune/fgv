{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/ConfigurationView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport {\n  CogIcon,\n  DocumentTextIcon,\n  PlusIcon,\n  TrashIcon,\n  ArrowDownTrayIcon,\n  ArrowUpTrayIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  InformationCircleIcon,\n  EyeIcon,\n  PencilIcon\n} from '@heroicons/react/24/outline';\nimport { ConfigurationViewProps } from '../../../types';\nimport { useConfigurationState } from '../../../hooks/useConfigurationState';\nimport { Config, QualifierTypes, Qualifiers, ResourceTypes } from '@fgv/ts-res';\nimport { QualifierTypeEditForm } from '../../forms/QualifierTypeEditForm';\nimport { QualifierEditForm } from '../../forms/QualifierEditForm';\nimport { ResourceTypeEditForm } from '../../forms/ResourceTypeEditForm';\n\nexport const ConfigurationView: React.FC<ConfigurationViewProps> = ({\n  configuration,\n  onConfigurationChange,\n  onSave,\n  hasUnsavedChanges,\n  onMessage,\n  className = ''\n}) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [editingQualifierType, setEditingQualifierType] = useState<{ item: QualifierTypes.Config.ISystemQualifierTypeConfig; index: number } | null>(null);\n  const [editingQualifier, setEditingQualifier] = useState<{ item: Qualifiers.IQualifierDecl; index: number } | null>(null);\n  const [editingResourceType, setEditingResourceType] = useState<{ item: ResourceTypes.Config.IResourceTypeConfig; index: number } | null>(null);\n  const [showAddQualifierType, setShowAddQualifierType] = useState(false);\n  const [showAddQualifier, setShowAddQualifier] = useState(false);\n  const [showAddResourceType, setShowAddResourceType] = useState(false);\n  \n  const { state, actions, templates } = useConfigurationState(\n    configuration || undefined,\n    onConfigurationChange,\n    hasUnsavedChanges ? undefined : (changes) => {\n      // Only notify if we weren't already told there are unsaved changes\n    }\n  );\n\n  // Handle file import\n  const handleFileImport = useCallback((files: FileList | null) => {\n    if (!files || files.length === 0) return;\n    \n    const file = files[0];\n    const reader = new FileReader();\n    \n    reader.onload = (e) => {\n      const content = e.target?.result as string;\n      if (content) {\n        const result = actions.importFromJson(content);\n        if (result.isSuccess()) {\n          onMessage?.('success', `Configuration imported from ${file.name}`);\n        } else {\n          onMessage?.('error', `Import failed: ${result.message}`);\n        }\n      }\n    };\n    \n    reader.onerror = () => {\n      onMessage?.('error', `Failed to read file: ${file.name}`);\n    };\n    \n    reader.readAsText(file);\n  }, [actions, onMessage]);\n\n  // Handle export\n  const handleExport = useCallback(() => {\n    const result = actions.exportToJson({ format: 'json', pretty: true });\n    if (result.isSuccess()) {\n      const blob = new Blob([result.value], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'ts-res-configuration.json';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      onMessage?.('success', 'Configuration exported successfully');\n    } else {\n      onMessage?.('error', `Export failed: ${result.message}`);\n    }\n  }, [actions, onMessage]);\n\n  // Handle template loading\n  const handleLoadTemplate = useCallback((templateId: string) => {\n    const result = actions.loadTemplate(templateId);\n    if (result.isSuccess()) {\n      const template = templates.find(t => t.id === templateId);\n      onMessage?.('success', `Loaded template: ${template?.name}`);\n    } else {\n      onMessage?.('error', `Failed to load template: ${result.message}`);\n    }\n  }, [actions, templates, onMessage]);\n\n  // Handle save\n  const handleSave = useCallback(() => {\n    if (onSave) {\n      onSave(state.currentConfiguration);\n      actions.applyConfiguration();\n      onMessage?.('success', 'Configuration saved successfully');\n    }\n  }, [onSave, state.currentConfiguration, actions, onMessage]);\n\n  if (!configuration && !state.currentConfiguration) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <CogIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Configuration</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Configuration Available</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Load a configuration to manage qualifiers, qualifier types, and resource types.\n            </p>\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Configuration Manager:</strong> Define and manage system configurations\n                for resource management, including qualifiers, qualifier types, and resource types.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <CogIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Configuration</h2>\n          {state.hasUnsavedChanges && (\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n              Unsaved Changes\n            </span>\n          )}\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* Template Selection */}\n          <select\n            onChange={(e) => e.target.value && handleLoadTemplate(e.target.value)}\n            value=\"\"\n            className=\"px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"\">Load Template...</option>\n            {templates.map((template) => (\n              <option key={template.id} value={template.id}>\n                {template.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Import Button */}\n          <button\n            onClick={() => fileInputRef.current?.click()}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <ArrowUpTrayIcon className=\"w-4 h-4 mr-2\" />\n            Import\n          </button>\n\n          {/* Export Button */}\n          <button\n            onClick={handleExport}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\n            Export\n          </button>\n\n          {/* View Toggle */}\n          <button\n            onClick={actions.toggleJsonView}\n            className={`inline-flex items-center px-3 py-2 border rounded-md text-sm font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n              state.isJsonView\n                ? 'border-blue-600 text-blue-600 bg-blue-50'\n                : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\n            }`}\n          >\n            {state.isJsonView ? (\n              <>\n                <PencilIcon className=\"w-4 h-4 mr-2\" />\n                Form View\n              </>\n            ) : (\n              <>\n                <EyeIcon className=\"w-4 h-4 mr-2\" />\n                JSON View\n              </>\n            )}\n          </button>\n\n          {/* Save Button */}\n          {onSave && (\n            <button\n              onClick={handleSave}\n              disabled={!state.hasUnsavedChanges}\n              className={`inline-flex items-center px-4 py-2 border border-transparent rounded-md text-sm font-medium ${\n                state.hasUnsavedChanges\n                  ? 'text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500'\n                  : 'text-gray-400 bg-gray-200 cursor-not-allowed'\n              }`}\n            >\n              Save\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Validation Status */}\n      {!state.validation.isValid && (\n        <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2 text-red-600 mb-2\">\n            <ExclamationTriangleIcon className=\"w-5 h-5\" />\n            <span className=\"font-medium\">Configuration Issues</span>\n          </div>\n          <ul className=\"text-sm text-red-700 space-y-1\">\n            {state.validation.errors.map((error, index) => (\n              <li key={index}>• {error}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Warnings */}\n      {state.validation.warnings.length > 0 && (\n        <div className=\"mb-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2 text-yellow-600 mb-2\">\n            <InformationCircleIcon className=\"w-5 h-5\" />\n            <span className=\"font-medium\">Configuration Warnings</span>\n          </div>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            {state.validation.warnings.map((warning, index) => (\n              <li key={index}>• {warning}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        {state.isJsonView ? (\n          // JSON Editor View\n          <div className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">JSON Configuration</h3>\n              <button\n                onClick={() => {\n                  const result = actions.applyJsonChanges();\n                  if (result.isSuccess()) {\n                    onMessage?.('success', 'JSON changes applied');\n                  } else {\n                    onMessage?.('error', `JSON error: ${result.message}`);\n                  }\n                }}\n                disabled={!!state.jsonError}\n                className={`px-4 py-2 rounded-md text-sm font-medium ${\n                  state.jsonError\n                    ? 'bg-gray-200 text-gray-400 cursor-not-allowed'\n                    : 'bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500'\n                }`}\n              >\n                Apply Changes\n              </button>\n            </div>\n            \n            {state.jsonError && (\n              <div className=\"mb-4 bg-red-50 border border-red-200 rounded-lg p-3\">\n                <p className=\"text-sm text-red-700\">{state.jsonError}</p>\n              </div>\n            )}\n            \n            <textarea\n              value={state.jsonString}\n              onChange={(e) => actions.updateJsonString(e.target.value)}\n              className=\"w-full h-96 px-3 py-2 border border-gray-300 rounded-md font-mono text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter JSON configuration...\"\n            />\n          </div>\n        ) : (\n          // Form View\n          <div>\n            {/* Tab Navigation */}\n            <div className=\"border-b border-gray-200\">\n              <nav className=\"-mb-px flex space-x-8 px-6\">\n                {[\n                  { key: 'qualifierTypes' as const, label: 'Qualifier Types', count: state.currentConfiguration.qualifierTypes?.length || 0 },\n                  { key: 'qualifiers' as const, label: 'Qualifiers', count: state.currentConfiguration.qualifiers?.length || 0 },\n                  { key: 'resourceTypes' as const, label: 'Resource Types', count: state.currentConfiguration.resourceTypes?.length || 0 }\n                ].map((tab) => (\n                  <button\n                    key={tab.key}\n                    onClick={() => actions.setActiveTab(tab.key)}\n                    className={`py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap ${\n                      state.activeTab === tab.key\n                        ? 'border-blue-600 text-blue-600'\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                    }`}\n                  >\n                    {tab.label}\n                    <span className=\"ml-2 bg-gray-100 text-gray-900 rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                      {tab.count}\n                    </span>\n                  </button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Tab Content */}\n            <div className=\"p-6\">\n              {state.activeTab === 'qualifierTypes' && (\n                <QualifierTypesPanel\n                  qualifierTypes={state.currentConfiguration.qualifierTypes || []}\n                  onUpdateItem={actions.updateQualifierType}\n                  onRemove={actions.removeQualifierType}\n                  onShowAdd={() => setShowAddQualifierType(true)}\n                  onEdit={(item, index) => setEditingQualifierType({ item, index })}\n                />\n              )}\n              \n              {state.activeTab === 'qualifiers' && (\n                <QualifiersPanel\n                  qualifiers={state.currentConfiguration.qualifiers || []}\n                  qualifierTypes={state.currentConfiguration.qualifierTypes || []}\n                  onUpdateItem={actions.updateQualifier}\n                  onRemove={actions.removeQualifier}\n                  onShowAdd={() => setShowAddQualifier(true)}\n                  onEdit={(item, index) => setEditingQualifier({ item, index })}\n                />\n              )}\n              \n              {state.activeTab === 'resourceTypes' && (\n                <ResourceTypesPanel\n                  resourceTypes={state.currentConfiguration.resourceTypes || []}\n                  onUpdateItem={actions.updateResourceType}\n                  onRemove={actions.removeResourceType}\n                  onShowAdd={() => setShowAddResourceType(true)}\n                  onEdit={(item, index) => setEditingResourceType({ item, index })}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".json\"\n        onChange={(e) => handleFileImport(e.target.files)}\n        className=\"hidden\"\n      />\n\n      {/* Edit Modals */}\n      {showAddQualifierType && (\n        <QualifierTypeEditForm\n          onSave={(qualifierType) => {\n            actions.addQualifierType(qualifierType);\n            setShowAddQualifierType(false);\n            onMessage?.('success', `Added qualifier type: ${qualifierType.name}`);\n          }}\n          onCancel={() => setShowAddQualifierType(false)}\n          existingNames={(state.currentConfiguration.qualifierTypes || []).map(qt => qt.name)}\n        />\n      )}\n\n      {editingQualifierType && (\n        <QualifierTypeEditForm\n          qualifierType={editingQualifierType.item}\n          onSave={(qualifierType) => {\n            actions.updateQualifierType(editingQualifierType.index, qualifierType);\n            setEditingQualifierType(null);\n            onMessage?.('success', `Updated qualifier type: ${qualifierType.name}`);\n          }}\n          onCancel={() => setEditingQualifierType(null)}\n          existingNames={(state.currentConfiguration.qualifierTypes || [])\n            .filter((_, i) => i !== editingQualifierType.index)\n            .map(qt => qt.name)}\n        />\n      )}\n\n      {showAddQualifier && (\n        <QualifierEditForm\n          qualifierTypes={state.currentConfiguration.qualifierTypes || []}\n          onSave={(qualifier) => {\n            actions.addQualifier(qualifier);\n            setShowAddQualifier(false);\n            onMessage?.('success', `Added qualifier: ${qualifier.name}`);\n          }}\n          onCancel={() => setShowAddQualifier(false)}\n          existingNames={(state.currentConfiguration.qualifiers || []).map(q => q.name)}\n        />\n      )}\n\n      {editingQualifier && (\n        <QualifierEditForm\n          qualifier={editingQualifier.item}\n          qualifierTypes={state.currentConfiguration.qualifierTypes || []}\n          onSave={(qualifier) => {\n            actions.updateQualifier(editingQualifier.index, qualifier);\n            setEditingQualifier(null);\n            onMessage?.('success', `Updated qualifier: ${qualifier.name}`);\n          }}\n          onCancel={() => setEditingQualifier(null)}\n          existingNames={(state.currentConfiguration.qualifiers || [])\n            .filter((_, i) => i !== editingQualifier.index)\n            .map(q => q.name)}\n        />\n      )}\n\n      {showAddResourceType && (\n        <ResourceTypeEditForm\n          onSave={(resourceType) => {\n            actions.addResourceType(resourceType);\n            setShowAddResourceType(false);\n            onMessage?.('success', `Added resource type: ${resourceType.name}`);\n          }}\n          onCancel={() => setShowAddResourceType(false)}\n          existingNames={(state.currentConfiguration.resourceTypes || []).map(rt => rt.name)}\n        />\n      )}\n\n      {editingResourceType && (\n        <ResourceTypeEditForm\n          resourceType={editingResourceType.item}\n          onSave={(resourceType) => {\n            actions.updateResourceType(editingResourceType.index, resourceType);\n            setEditingResourceType(null);\n            onMessage?.('success', `Updated resource type: ${resourceType.name}`);\n          }}\n          onCancel={() => setEditingResourceType(null)}\n          existingNames={(state.currentConfiguration.resourceTypes || [])\n            .filter((_, i) => i !== editingResourceType.index)\n            .map(rt => rt.name)}\n        />\n      )}\n    </div>\n  );\n};\n\n// Comprehensive panel components with full editing capabilities\ninterface QualifierTypesPanelProps {\n  qualifierTypes: QualifierTypes.Config.ISystemQualifierTypeConfig[];\n  onUpdateItem: (index: number, qualifierType: QualifierTypes.Config.ISystemQualifierTypeConfig) => void;\n  onRemove: (index: number) => void;\n  onShowAdd: () => void;\n  onEdit: (item: QualifierTypes.Config.ISystemQualifierTypeConfig, index: number) => void;\n}\n\nconst QualifierTypesPanel: React.FC<QualifierTypesPanelProps> = ({ \n  qualifierTypes, \n  onRemove, \n  onShowAdd, \n  onEdit \n}) => {\n  const getConfigurationSummary = (type: QualifierTypes.Config.ISystemQualifierTypeConfig): string => {\n    if (!type.configuration) return 'No configuration';\n    const config = type.configuration as any;\n    const details: string[] = [];\n    \n    if (config.allowContextList) details.push('Context List');\n    if (type.systemType === 'literal') {\n      if (config.caseSensitive === false) details.push('Case Insensitive');\n      if (config.enumeratedValues?.length) details.push(`${config.enumeratedValues.length} values`);\n    }\n    if (type.systemType === 'territory') {\n      if (config.acceptLowercase) details.push('Accept Lowercase');\n      if (config.allowedTerritories?.length) details.push(`${config.allowedTerritories.length} territories`);\n    }\n    \n    return details.length > 0 ? details.join(', ') : 'Default settings';\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Qualifier Types</h3>\n        <button\n          onClick={onShowAdd}\n          className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n        >\n          <PlusIcon className=\"w-4 h-4 mr-2\" />\n          Add Type\n        </button>\n      </div>\n      \n      {qualifierTypes.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <CogIcon className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n          <p>No qualifier types defined</p>\n          <p className=\"text-sm\">Add a qualifier type to get started</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {qualifierTypes.map((type, index) => (\n            <div key={index} className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <h4 className=\"font-medium text-gray-900\">{type.name}</h4>\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                      type.systemType === 'language' ? 'bg-blue-100 text-blue-800' :\n                      type.systemType === 'territory' ? 'bg-green-100 text-green-800' :\n                      'bg-purple-100 text-purple-800'\n                    }`}>\n                      {type.systemType}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-2\">\n                    {getConfigurationSummary(type)}\n                  </p>\n                </div>\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <button\n                    onClick={() => onEdit(type, index)}\n                    className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded\"\n                    title=\"Edit qualifier type\"\n                  >\n                    <PencilIcon className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => onRemove(index)}\n                    className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded\"\n                    title=\"Delete qualifier type\"\n                  >\n                    <TrashIcon className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface QualifiersPanelProps {\n  qualifiers: Qualifiers.IQualifierDecl[];\n  qualifierTypes: QualifierTypes.Config.ISystemQualifierTypeConfig[];\n  onUpdateItem: (index: number, qualifier: Qualifiers.IQualifierDecl) => void;\n  onRemove: (index: number) => void;\n  onShowAdd: () => void;\n  onEdit: (item: Qualifiers.IQualifierDecl, index: number) => void;\n}\n\nconst QualifiersPanel: React.FC<QualifiersPanelProps> = ({ \n  qualifiers, \n  qualifierTypes, \n  onRemove, \n  onShowAdd, \n  onEdit \n}) => {\n  // Sort qualifiers by priority (highest first)\n  const sortedQualifiers = [...qualifiers].sort((a, b) => b.defaultPriority - a.defaultPriority);\n  \n  const getQualifierSummary = (qualifier: Qualifiers.IQualifierDecl): string => {\n    const qualifierType = qualifierTypes.find(qt => qt.name === qualifier.typeName);\n    const details: string[] = [];\n    \n    if (qualifier.token) details.push(`Token: ${qualifier.token}`);\n    if (qualifier.defaultValue) details.push(`Default: ${qualifier.defaultValue}`);\n    if (qualifier.tokenIsOptional) details.push('Optional Token');\n    if (qualifierType) details.push(`System: ${qualifierType.systemType}`);\n    \n    return details.join(' • ');\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Qualifiers</h3>\n        <button\n          onClick={onShowAdd}\n          disabled={qualifierTypes.length === 0}\n          className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n          title={qualifierTypes.length === 0 ? \"Add qualifier types first\" : \"Add qualifier\"}\n        >\n          <PlusIcon className=\"w-4 h-4 mr-2\" />\n          Add Qualifier\n        </button>\n      </div>\n      \n      {qualifierTypes.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <ExclamationTriangleIcon className=\"w-12 h-12 mx-auto mb-4 text-amber-400\" />\n          <p>No qualifier types available</p>\n          <p className=\"text-sm\">Create qualifier types first before adding qualifiers</p>\n        </div>\n      ) : qualifiers.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <CogIcon className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n          <p>No qualifiers defined</p>\n          <p className=\"text-sm\">Add a qualifier to get started</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {sortedQualifiers.map((qualifier, index) => {\n            const originalIndex = qualifiers.findIndex(q => q === qualifier);\n            const qualifierType = qualifierTypes.find(qt => qt.name === qualifier.typeName);\n            \n            return (\n              <div key={originalIndex} className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <h4 className=\"font-medium text-gray-900\">{qualifier.name}</h4>\n                      <span className=\"px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full\">\n                        Priority: {qualifier.defaultPriority}\n                      </span>\n                      {!qualifierType && (\n                        <span className=\"px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full\">\n                          Missing Type\n                        </span>\n                      )}\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-1\">\n                      Type: <span className=\"font-medium\">{qualifier.typeName}</span>\n                    </p>\n                    <p className=\"text-sm text-gray-500\">\n                      {getQualifierSummary(qualifier)}\n                    </p>\n                  </div>\n                  <div className=\"flex items-center space-x-2 ml-4\">\n                    <button\n                      onClick={() => onEdit(qualifier, originalIndex)}\n                      className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded\"\n                      title=\"Edit qualifier\"\n                    >\n                      <PencilIcon className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => onRemove(originalIndex)}\n                      className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded\"\n                      title=\"Delete qualifier\"\n                    >\n                      <TrashIcon className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface ResourceTypesPanelProps {\n  resourceTypes: ResourceTypes.Config.IResourceTypeConfig[];\n  onUpdateItem: (index: number, resourceType: ResourceTypes.Config.IResourceTypeConfig) => void;\n  onRemove: (index: number) => void;\n  onShowAdd: () => void;\n  onEdit: (item: ResourceTypes.Config.IResourceTypeConfig, index: number) => void;\n}\n\nconst ResourceTypesPanel: React.FC<ResourceTypesPanelProps> = ({ \n  resourceTypes, \n  onRemove, \n  onShowAdd, \n  onEdit \n}) => {\n  const getTypeNameBadgeColor = (typeName: string): string => {\n    switch (typeName) {\n      case 'string': return 'bg-blue-100 text-blue-800';\n      case 'object': return 'bg-green-100 text-green-800';\n      case 'array': return 'bg-purple-100 text-purple-800';\n      case 'number': return 'bg-yellow-100 text-yellow-800';\n      case 'boolean': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Resource Types</h3>\n        <button\n          onClick={onShowAdd}\n          className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n        >\n          <PlusIcon className=\"w-4 h-4 mr-2\" />\n          Add Type\n        </button>\n      </div>\n      \n      {resourceTypes.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">\n          <CogIcon className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n          <p>No resource types defined</p>\n          <p className=\"text-sm\">Add a resource type to get started</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {resourceTypes.map((type, index) => (\n            <div key={index} className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <h4 className=\"font-medium text-gray-900\">{type.name}</h4>\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${getTypeNameBadgeColor(type.typeName)}`}>\n                      {type.typeName}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    Defines how resources of this type are processed and validated\n                  </p>\n                </div>\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <button\n                    onClick={() => onEdit(type, index)}\n                    className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded\"\n                    title=\"Edit resource type\"\n                  >\n                    <PencilIcon className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => onRemove(index)}\n                    className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded\"\n                    title=\"Delete resource type\"\n                  >\n                    <TrashIcon className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConfigurationView;"]}