{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/SourceView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  DocumentTextIcon,\n  MagnifyingGlassIcon,\n  DocumentArrowDownIcon,\n  CodeBracketIcon,\n  ChevronDownIcon,\n  ChevronUpIcon\n} from '@heroicons/react/24/outline';\nimport { Resources, ResourceJson } from '@fgv/ts-res';\nimport { Result } from '@fgv/ts-utils';\nimport { SourceViewProps } from '../../../types';\nimport { ResourcePicker } from '../../pickers/ResourcePicker';\nimport { ResourceSelection, ResourcePickerOptions } from '../../pickers/ResourcePicker/types';\nimport { SourceResourceDetail } from '../../common/SourceResourceDetail';\nimport { ResourcePickerOptionsControl } from '../../common/ResourcePickerOptionsControl';\n\n/**\n * SourceView component for browsing and managing source resource collections.\n *\n * Provides an interface for browsing source resources in their original form,\n * viewing resource details including candidates and conditions, and exporting\n * the complete source resource collection.\n *\n * **Key Features:**\n * - **Resource browsing**: Navigate through all resources with search and filtering\n * - **Detailed resource view**: See resource structure, candidates, conditions, and values\n * - **Export functionality**: Export the complete source resource collection as JSON\n * - **Source-specific details**: View resources in their original source form\n * - **Candidate analysis**: Examine resource candidates and their conditions\n *\n * @example\n * ```tsx\n * import { SourceView } from '@fgv/ts-res-ui-components';\n *\n * function MySourceBrowser() {\n *   const handleExport = () => {\n *     // Export source resources\n *     console.log('Exporting source resources...');\n *   };\n *\n *   return (\n *     <SourceView\n *       resources={processedResources}\n *       onExport={handleExport}\n *       onMessage={(type, message) => console.log(`${type}: ${message}`)}\n *     />\n *   );\n * }\n * ```\n *\n * @public\n */\nexport const SourceView: React.FC<SourceViewProps> = ({\n  resources,\n  onExport,\n  onMessage,\n  pickerOptions,\n  pickerOptionsPresentation = 'hidden',\n  className = ''\n}) => {\n  const [selectedResourceId, setSelectedResourceId] = useState<string | null>(null);\n  const [showJsonView, setShowJsonView] = useState(false);\n\n  // State for picker options control\n  const [currentPickerOptions, setCurrentPickerOptions] = useState<ResourcePickerOptions>(\n    pickerOptions || {}\n  );\n\n  // Merge picker options with view-specific defaults\n  const effectivePickerOptions = useMemo(\n    () => ({\n      defaultView: 'list' as const,\n      showViewToggle: true,\n      enableSearch: true,\n      searchPlaceholder: 'Search resources...',\n      searchScope: 'all' as const,\n      height: '560px',\n      emptyMessage: 'No resources available',\n      // Override with user-provided options\n      ...pickerOptions,\n      // Override with current picker options from control\n      ...currentPickerOptions\n    }),\n    [pickerOptions, currentPickerOptions]\n  );\n\n  // Handle resource selection with new enhanced callback\n  const handleResourceSelect = useCallback(\n    (selection: ResourceSelection) => {\n      setSelectedResourceId(selection.resourceId);\n      if (selection.resourceId) {\n        onMessage?.('info', `Selected resource: ${selection.resourceId}`);\n      }\n    },\n    [onMessage]\n  );\n\n  // Get full resource collection data using the new method\n  const getResourceCollectionData = useCallback(() => {\n    if (!resources?.system.resourceManager) {\n      return null;\n    }\n\n    // Check if this is a ResourceManagerBuilder (has getResourceCollectionDecl method)\n    if ('getResourceCollectionDecl' in resources.system.resourceManager) {\n      const collectionResult = resources.system.resourceManager.getResourceCollectionDecl();\n      if (collectionResult.isSuccess()) {\n        return {\n          ...collectionResult.value,\n          metadata: {\n            exportedAt: new Date().toISOString(),\n            totalResources: resources.summary.totalResources,\n            type: 'ts-res-resource-collection'\n          }\n        };\n      } else {\n        onMessage?.('error', `Failed to get resource collection: ${collectionResult.message}`);\n        return null;\n      }\n    } else if (resources.compiledCollection) {\n      // For IResourceManager from bundles, use the compiled collection directly\n      return {\n        resources: resources.compiledCollection.resources || [],\n        metadata: {\n          exportedAt: new Date().toISOString(),\n          totalResources: resources.summary.totalResources,\n          type: 'ts-res-resource-collection'\n        }\n      };\n    } else {\n      onMessage?.('error', 'Resource collection data not available');\n      return null;\n    }\n  }, [resources, onMessage]);\n\n  // Export source data to JSON file\n  const handleExportSourceData = useCallback(() => {\n    try {\n      const collectionData = getResourceCollectionData();\n      if (!collectionData) {\n        onMessage?.('error', 'No source collection data available to export');\n        return;\n      }\n\n      onExport?.(collectionData, 'json');\n      onMessage?.('success', 'Resource collection exported successfully');\n    } catch (error) {\n      onMessage?.(\n        'error',\n        `Failed to export resource collection: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }, [getResourceCollectionData, onExport, onMessage]);\n\n  if (!resources) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <DocumentTextIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Source Browser</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Resources Loaded</h3>\n            <p className=\"text-gray-600 mb-6\">Import resources to explore them here.</p>\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Tip:</strong> Use the Import View to load ts-res resource files or directories, then\n                return here to browse and explore the loaded resources.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <DocumentTextIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Source Browser</h2>\n        </div>\n        {resources && (\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleExportSourceData}\n              className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <DocumentArrowDownIcon className=\"h-4 w-4 mr-1\" />\n              Export JSON\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* ResourcePicker Options Control */}\n      <ResourcePickerOptionsControl\n        options={currentPickerOptions}\n        onOptionsChange={setCurrentPickerOptions}\n        presentation={pickerOptionsPresentation}\n        title=\"Source Browser Picker Options\"\n        className=\"mb-6\"\n      />\n\n      {/* JSON View Toggle */}\n      {resources && (\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6\">\n          <button\n            onClick={() => setShowJsonView(!showJsonView)}\n            className=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <CodeBracketIcon className=\"h-4 w-4 mr-2\" />\n            {showJsonView ? 'Hide' : 'Show'} JSON Resource Collection\n            {showJsonView ? (\n              <ChevronUpIcon className=\"h-4 w-4 ml-2\" />\n            ) : (\n              <ChevronDownIcon className=\"h-4 w-4 ml-2\" />\n            )}\n          </button>\n\n          {/* JSON View */}\n          {showJsonView && (\n            <div className=\"mt-4\">\n              <div className=\"bg-gray-50 rounded-lg border border-gray-200 p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"text-sm font-medium text-gray-900\">Resource Collection (JSON)</h3>\n                  <button\n                    onClick={handleExportSourceData}\n                    className=\"inline-flex items-center px-2 py-1 text-xs font-medium text-gray-700 bg-gray-100 rounded hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                  >\n                    <DocumentArrowDownIcon className=\"h-3 w-3 mr-1\" />\n                    Export\n                  </button>\n                </div>\n                <pre className=\"text-xs text-gray-800 bg-white p-3 rounded border overflow-x-auto max-h-64 overflow-y-auto\">\n                  {JSON.stringify(getResourceCollectionData(), null, 2)}\n                </pre>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex flex-col lg:flex-row gap-6 h-[600px]\">\n          {/* Left side: Resource Picker */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            <div className=\"flex items-center mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Resources</h3>\n            </div>\n\n            {/* Enhanced Resource Picker */}\n            <div className=\"flex-1 min-h-0\">\n              <ResourcePicker\n                resources={resources}\n                selectedResourceId={selectedResourceId}\n                onResourceSelect={handleResourceSelect}\n                options={effectivePickerOptions}\n                onMessage={onMessage}\n              />\n            </div>\n          </div>\n\n          {/* Right side: Resource Details */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            {selectedResourceId ? (\n              <SourceResourceDetail\n                resourceId={selectedResourceId}\n                processedResources={resources}\n                onMessage={onMessage}\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n                <div className=\"text-center\">\n                  <DocumentTextIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">Select a resource to view details</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SourceView;\n"]}