{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/views/SourceView/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  DocumentTextIcon,\n  MagnifyingGlassIcon,\n  DocumentArrowDownIcon,\n  CodeBracketIcon,\n  ChevronDownIcon,\n  ChevronUpIcon\n} from '@heroicons/react/24/outline';\nimport { SourceViewProps, ResourceDetailData } from '../../../types';\n\nexport const SourceView: React.FC<SourceViewProps> = ({\n  resources,\n  onExport,\n  onMessage,\n  className = ''\n}) => {\n  const [selectedResourceId, setSelectedResourceId] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showJsonView, setShowJsonView] = useState(false);\n\n  // Sort and filter resource IDs\n  const filteredResourceIds = useMemo(() => {\n    if (!resources?.summary.resourceIds) {\n      return [];\n    }\n\n    const resourceIds = resources.summary.resourceIds;\n\n    // Filter by search term\n    const filtered = searchTerm\n      ? resourceIds.filter((id: string) => id.toLowerCase().includes(searchTerm.toLowerCase()))\n      : resourceIds;\n\n    // Sort alphabetically\n    return filtered.sort();\n  }, [resources?.summary.resourceIds, searchTerm]);\n\n  const handleResourceSelect = (resourceId: string) => {\n    setSelectedResourceId(resourceId);\n    onMessage?.('info', `Selected resource: ${resourceId}`);\n  };\n\n  const handleSearch = (term: string) => {\n    setSearchTerm(term);\n    setSelectedResourceId(null); // Clear selection when searching\n  };\n\n  // Get full resource collection data using the new method\n  const getResourceCollectionData = useCallback(() => {\n    if (!resources?.system.resourceManager) {\n      return null;\n    }\n\n    try {\n      const collectionResult = resources.system.resourceManager.getResourceCollectionDecl();\n      if (collectionResult.isSuccess()) {\n        return {\n          ...collectionResult.value,\n          metadata: {\n            exportedAt: new Date().toISOString(),\n            totalResources: resources.summary.totalResources,\n            type: 'ts-res-resource-collection'\n          }\n        };\n      } else {\n        onMessage?.('error', `Failed to get resource collection: ${collectionResult.message}`);\n        return null;\n      }\n    } catch (error) {\n      onMessage?.(\n        'error',\n        `Error getting resource collection: ${error instanceof Error ? error.message : String(error)}`\n      );\n      return null;\n    }\n  }, [resources, onMessage]);\n\n  // Export source data to JSON file\n  const handleExportSourceData = useCallback(() => {\n    try {\n      const collectionData = getResourceCollectionData();\n      if (!collectionData) {\n        onMessage?.('error', 'No source collection data available to export');\n        return;\n      }\n\n      onExport?.(collectionData, 'json');\n      onMessage?.('success', 'Resource collection exported successfully');\n    } catch (error) {\n      onMessage?.(\n        'error',\n        `Failed to export resource collection: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }, [getResourceCollectionData, onExport, onMessage]);\n\n  if (!resources) {\n    return (\n      <div className={`p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <DocumentTextIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Source Browser</h2>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">No Resources Loaded</h3>\n            <p className=\"text-gray-600 mb-6\">Import resources to explore them here.</p>\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Tip:</strong> Use the Import View to load ts-res resource files or directories, then\n                return here to browse and explore the loaded resources.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <DocumentTextIcon className=\"h-8 w-8 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">Source Browser</h2>\n        </div>\n        {resources && (\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleExportSourceData}\n              className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <DocumentArrowDownIcon className=\"h-4 w-4 mr-1\" />\n              Export JSON\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* JSON View Toggle */}\n      {resources && (\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6\">\n          <button\n            onClick={() => setShowJsonView(!showJsonView)}\n            className=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <CodeBracketIcon className=\"h-4 w-4 mr-2\" />\n            {showJsonView ? 'Hide' : 'Show'} JSON Resource Collection\n            {showJsonView ? (\n              <ChevronUpIcon className=\"h-4 w-4 ml-2\" />\n            ) : (\n              <ChevronDownIcon className=\"h-4 w-4 ml-2\" />\n            )}\n          </button>\n\n          {/* JSON View */}\n          {showJsonView && (\n            <div className=\"mt-4\">\n              <div className=\"bg-gray-50 rounded-lg border border-gray-200 p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"text-sm font-medium text-gray-900\">Resource Collection (JSON)</h3>\n                  <button\n                    onClick={handleExportSourceData}\n                    className=\"inline-flex items-center px-2 py-1 text-xs font-medium text-gray-700 bg-gray-100 rounded hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                  >\n                    <DocumentArrowDownIcon className=\"h-3 w-3 mr-1\" />\n                    Export\n                  </button>\n                </div>\n                <pre className=\"text-xs text-gray-800 bg-white p-3 rounded border overflow-x-auto max-h-64 overflow-y-auto\">\n                  {JSON.stringify(getResourceCollectionData(), null, 2)}\n                </pre>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex flex-col lg:flex-row gap-6 h-[600px]\">\n          {/* Left side: Resource List */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                Resources ({filteredResourceIds.length})\n              </h3>\n            </div>\n\n            {/* Search Box */}\n            <div className=\"relative mb-4\">\n              <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search resources...\"\n                value={searchTerm}\n                onChange={(e) => handleSearch(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n\n            {/* Resource List */}\n            <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg\">\n              {filteredResourceIds.length === 0 ? (\n                <div className=\"p-4 text-center text-gray-500\">\n                  {searchTerm ? 'No resources match your search' : 'No resources available'}\n                </div>\n              ) : (\n                <div className=\"divide-y divide-gray-200\">\n                  {filteredResourceIds.map((resourceId: string) => (\n                    <button\n                      key={resourceId}\n                      onClick={() => handleResourceSelect(resourceId)}\n                      className={`w-full px-4 py-3 text-left hover:bg-gray-50 transition-colors ${\n                        selectedResourceId === resourceId ? 'bg-blue-50 border-r-2 border-blue-500' : ''\n                      }`}\n                    >\n                      <div className=\"font-medium text-gray-900 truncate\">\n                        {searchTerm ? (\n                          <span\n                            dangerouslySetInnerHTML={{\n                              __html: resourceId.replace(\n                                new RegExp(`(${searchTerm})`, 'gi'),\n                                '<mark class=\"bg-yellow-200\">$1</mark>'\n                              )\n                            }}\n                          />\n                        ) : (\n                          resourceId\n                        )}\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right side: Resource Details */}\n          <div className=\"lg:w-1/2 flex flex-col\">\n            {selectedResourceId ? (\n              <ResourceDetail\n                resourceId={selectedResourceId}\n                processedResources={resources}\n                onMessage={onMessage}\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n                <div className=\"text-center\">\n                  <DocumentTextIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">Select a resource to view details</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface ResourceDetailProps {\n  resourceId: string;\n  processedResources: any;\n  onMessage?: (type: 'info' | 'warning' | 'error' | 'success', message: string) => void;\n}\n\nconst ResourceDetail: React.FC<ResourceDetailProps> = ({ resourceId, processedResources, onMessage }) => {\n  const [resourceDetail, setResourceDetail] = useState<ResourceDetailData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  React.useEffect(() => {\n    const loadResourceDetail = () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const resourceManager = processedResources.system.resourceManager;\n        const resourceResult = resourceManager.getBuiltResource(resourceId);\n\n        if (resourceResult.isSuccess()) {\n          const resource = resourceResult.value;\n\n          const detail: ResourceDetailData = {\n            id: resource.id,\n            resourceType: resource.resourceType.key,\n            candidateCount: resource.candidates.length,\n            candidates: resource.candidates.map((candidate: any) => ({\n              json: candidate.json,\n              conditions: candidate.conditions.conditions.map((condition: any) => ({\n                qualifier: condition.qualifier.name,\n                operator: condition.operator,\n                value: condition.value,\n                priority: condition.priority,\n                scoreAsDefault: condition.scoreAsDefault\n              })),\n              isPartial: candidate.isPartial,\n              mergeMethod: candidate.mergeMethod\n            }))\n          };\n\n          setResourceDetail(detail);\n          onMessage?.('info', `Loaded details for resource: ${resourceId}`);\n        } else {\n          setError(`Failed to load resource details: ${resourceResult.message}`);\n          onMessage?.('error', `Failed to load resource details: ${resourceResult.message}`);\n        }\n      } catch (err) {\n        const errorMsg = `Error loading resource details: ${\n          err instanceof Error ? err.message : String(err)\n        }`;\n        setError(errorMsg);\n        onMessage?.('error', errorMsg);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadResourceDetail();\n  }, [resourceId, processedResources, onMessage]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex flex-col h-full\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Resource Details</h3>\n        <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin h-8 w-8 border-4 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n            <p className=\"text-gray-500\">Loading resource details...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Resource Details</h3>\n        <div className=\"flex-1 border border-gray-200 rounded-lg p-4 bg-red-50\">\n          <div className=\"text-center\">\n            <p className=\"text-red-600 font-medium mb-2\">Error Loading Resource</p>\n            <p className=\"text-red-500 text-sm\">{error}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!resourceDetail) {\n    return (\n      <div className=\"flex flex-col h-full\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Resource Details</h3>\n        <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n          <p className=\"text-gray-500\">No resource details available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Resource Details</h3>\n\n      <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg p-4 bg-gray-50\">\n        <div className=\"space-y-6\">\n          {/* Resource Overview */}\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-3\">Resource Overview</h4>\n            <div className=\"bg-white p-4 rounded-lg border space-y-3\">\n              <div>\n                <span className=\"text-sm font-medium text-gray-600\">Fully Qualified ID:</span>\n                <code className=\"text-sm bg-gray-100 px-2 py-1 rounded ml-2 break-all\">\n                  {resourceDetail.id}\n                </code>\n              </div>\n              <div>\n                <span className=\"text-sm font-medium text-gray-600\">Resource Type:</span>\n                <span className=\"ml-2 text-sm\">{resourceDetail.resourceType}</span>\n              </div>\n              <div>\n                <span className=\"text-sm font-medium text-gray-600\">Candidate Count:</span>\n                <span className=\"ml-2 text-sm font-medium text-blue-600\">\n                  {resourceDetail.candidateCount}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Candidates */}\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-3\">\n              Candidates ({resourceDetail.candidates.length})\n            </h4>\n            <div className=\"space-y-4\">\n              {resourceDetail.candidates.map((candidate, index) => (\n                <div key={index} className=\"bg-white p-4 rounded-lg border\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <h5 className=\"font-medium text-gray-800\">Candidate {index + 1}</h5>\n                    <div className=\"flex items-center space-x-2 text-xs\">\n                      {candidate.isPartial && (\n                        <span className=\"bg-yellow-100 text-yellow-800 px-2 py-1 rounded\">Partial</span>\n                      )}\n                      <span className=\"bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                        {candidate.mergeMethod}\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Conditions */}\n                  {candidate.conditions.length > 0 && (\n                    <div className=\"mb-3\">\n                      <h6 className=\"text-sm font-medium text-gray-600 mb-2\">Conditions:</h6>\n                      <div className=\"space-y-1\">\n                        {candidate.conditions.map((condition, condIndex) => (\n                          <div\n                            key={condIndex}\n                            className=\"flex items-center text-xs bg-blue-50 px-2 py-1 rounded\"\n                          >\n                            <span className=\"font-medium text-blue-800\">{condition.qualifier}</span>\n                            <span className=\"mx-1 text-blue-600\">{condition.operator}</span>\n                            <span className=\"text-blue-700\">{condition.value}</span>\n                            <div className=\"ml-auto flex items-center space-x-2\">\n                              <span className=\"text-blue-500\">priority: {condition.priority}</span>\n                              {condition.scoreAsDefault !== undefined && (\n                                <span className=\"text-amber-600 font-medium\">\n                                  default: {condition.scoreAsDefault}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {candidate.conditions.length === 0 && (\n                    <div className=\"mb-3\">\n                      <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\n                        No conditions (default candidate)\n                      </span>\n                    </div>\n                  )}\n\n                  {/* JSON Content */}\n                  <div>\n                    <h6 className=\"text-sm font-medium text-gray-600 mb-2\">Content:</h6>\n                    <pre className=\"text-xs bg-gray-50 p-3 rounded border overflow-x-auto max-h-40\">\n                      {JSON.stringify(candidate.json, null, 2)}\n                    </pre>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SourceView;"]}