{"version":3,"file":"ResolutionContextOptionsControl.js","sourceRoot":"","sources":["../../../src/components/common/ResolutionContextOptionsControl.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { CogIcon, ChevronDownIcon, ChevronUpIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { ResolutionContextOptions, QualifierControlOptions } from '../../types';\n\n/**\n * Props for the ResolutionContextOptionsControl component.\n * @public\n */\nexport interface ResolutionContextOptionsControlProps {\n  /** Current context options */\n  options: ResolutionContextOptions;\n  /** Callback when options change */\n  onOptionsChange: (options: ResolutionContextOptions) => void;\n  /** Available qualifiers for configuration */\n  availableQualifiers?: string[];\n  /** How to present the options control (default: 'hidden' for production use) */\n  presentation?: 'hidden' | 'inline' | 'collapsible' | 'popup' | 'popover';\n  /** Custom class name */\n  className?: string;\n  /** Title for the control section */\n  title?: string;\n  /** Editing/creation toggle - when provided, show UI to control it */\n  allowResourceCreation?: boolean;\n  /** Callback for editing/creation toggle */\n  onAllowResourceCreationChange?: (allow: boolean) => void;\n  /** Pending resources list visibility - when provided, show UI to control it */\n  showPendingResourcesInList?: boolean;\n  /** Callback for pending resources list visibility */\n  onShowPendingResourcesInListChange?: (show: boolean) => void;\n}\n\n/**\n * Reusable control for configuring ResolutionView context options.\n *\n * Provides a clean interface for adjusting context behavior including:\n * - Visibility of context controls, current context display, and action buttons\n * - Per-qualifier options (visibility, editability, host values)\n * - Global defaults and appearance customization\n *\n * Can be rendered in multiple presentation modes:\n * - 'hidden': Not displayed (default for production)\n * - 'inline': Always expanded with full controls visible\n * - 'collapsible': Expandable/collapsible section\n * - 'popover': Small dropdown overlay\n * - 'popup': Full modal dialog\n *\n * @example\n * ```tsx\n * import { ResolutionContextOptionsControl } from '@fgv/ts-res-ui-components';\n *\n * function ContextConfiguration() {\n *   const [contextOptions, setContextOptions] = useState<ResolutionContextOptions>({});\n *\n *   return (\n *     <ResolutionContextOptionsControl\n *       options={contextOptions}\n *       onOptionsChange={setContextOptions}\n *       availableQualifiers={['language', 'platform', 'env']}\n *       presentation=\"collapsible\"\n *       title=\"Context Configuration\"\n *     />\n *   );\n * }\n * ```\n *\n * @public\n */\nexport const ResolutionContextOptionsControl: React.FC<ResolutionContextOptionsControlProps> = ({\n  options,\n  onOptionsChange,\n  availableQualifiers = [],\n  presentation = 'hidden',\n  className = '',\n  title = 'Context Options',\n  allowResourceCreation,\n  onAllowResourceCreationChange,\n  showPendingResourcesInList,\n  onShowPendingResourcesInListChange\n}) => {\n  // Early return for hidden presentation\n  if (presentation === 'hidden') {\n    return null;\n  }\n\n  const [isExpanded, setIsExpanded] = useState(presentation === 'inline');\n  const [showPopover, setShowPopover] = useState(false);\n\n  const handleOptionChange = useCallback(\n    <K extends keyof ResolutionContextOptions>(key: K, value: ResolutionContextOptions[K]) => {\n      onOptionsChange({\n        ...options,\n        [key]: value\n      });\n    },\n    [options, onOptionsChange]\n  );\n\n  const handleQualifierOptionChange = useCallback(\n    (qualifierName: string, optionKey: keyof QualifierControlOptions, value: any) => {\n      const currentQualifierOptions = options.qualifierOptions || {};\n      const currentOptions = currentQualifierOptions[qualifierName] || {};\n\n      const updatedQualifierOptions = {\n        ...currentQualifierOptions,\n        [qualifierName]: {\n          ...currentOptions,\n          [optionKey]: value\n        }\n      };\n\n      handleOptionChange('qualifierOptions', updatedQualifierOptions);\n    },\n    [options.qualifierOptions, handleOptionChange]\n  );\n\n  const handleHostManagedValueChange = useCallback(\n    (qualifierName: string, value: string | undefined) => {\n      const currentHostValues = options.hostManagedValues || {};\n      const updatedHostValues = {\n        ...currentHostValues,\n        [qualifierName]: value || undefined\n      };\n\n      // Remove undefined values to keep object clean\n      if (value === undefined || value === '') {\n        delete updatedHostValues[qualifierName];\n      }\n\n      handleOptionChange('hostManagedValues', updatedHostValues);\n    },\n    [options.hostManagedValues, handleOptionChange]\n  );\n\n  const renderControls = () => (\n    <div className=\"space-y-4\">\n      {/* Visibility Settings */}\n      <div className=\"space-y-3\">\n        <h4 className=\"text-sm font-medium text-gray-700\">Context Panel Visibility</h4>\n\n        <div className=\"space-y-2\">\n          <label className=\"flex items-center text-xs\">\n            <input\n              type=\"checkbox\"\n              checked={options.showContextControls !== false}\n              onChange={(e) => handleOptionChange('showContextControls', e.target.checked)}\n              className=\"mr-2 rounded\"\n            />\n            Show Context Controls\n          </label>\n          <label className=\"flex items-center text-xs\">\n            <input\n              type=\"checkbox\"\n              checked={options.showCurrentContext !== false}\n              onChange={(e) => handleOptionChange('showCurrentContext', e.target.checked)}\n              className=\"mr-2 rounded\"\n            />\n            Show Current Context Display\n          </label>\n          <label className=\"flex items-center text-xs\">\n            <input\n              type=\"checkbox\"\n              checked={options.showContextActions !== false}\n              onChange={(e) => handleOptionChange('showContextActions', e.target.checked)}\n              className=\"mr-2 rounded\"\n            />\n            Show Context Action Buttons\n          </label>\n        </div>\n      </div>\n\n      {/* Global Defaults */}\n      <div className=\"space-y-3 pt-3 border-t border-gray-200\">\n        <h4 className=\"text-sm font-medium text-gray-700\">Global Defaults</h4>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n          <label className=\"flex items-center text-xs\">\n            <input\n              type=\"checkbox\"\n              checked={options.defaultQualifierVisible !== false}\n              onChange={(e) => handleOptionChange('defaultQualifierVisible', e.target.checked)}\n              className=\"mr-2 rounded\"\n            />\n            Qualifiers Visible by Default\n          </label>\n          <label className=\"flex items-center text-xs\">\n            <input\n              type=\"checkbox\"\n              checked={options.defaultQualifierEditable !== false}\n              onChange={(e) => handleOptionChange('defaultQualifierEditable', e.target.checked)}\n              className=\"mr-2 rounded\"\n            />\n            Qualifiers Editable by Default\n          </label>\n        </div>\n\n        <div>\n          <label className=\"block text-xs font-medium text-gray-600 mb-1\">Panel Title</label>\n          <input\n            type=\"text\"\n            value={options.contextPanelTitle || ''}\n            onChange={(e) => handleOptionChange('contextPanelTitle', e.target.value || undefined)}\n            placeholder=\"Context Configuration\"\n            className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-xs font-medium text-gray-600 mb-1\">Global Placeholder</label>\n          <input\n            type=\"text\"\n            value={typeof options.globalPlaceholder === 'string' ? options.globalPlaceholder : ''}\n            onChange={(e) => handleOptionChange('globalPlaceholder', e.target.value || undefined)}\n            placeholder=\"Enter {qualifierName} value\"\n            className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">Use {'{qualifierName}'} for dynamic qualifier names</p>\n        </div>\n      </div>\n\n      {/* Editing & Creation (optional, when props provided) */}\n      {(allowResourceCreation !== undefined || showPendingResourcesInList !== undefined) && (\n        <div className=\"space-y-3 pt-3 border-t border-gray-200\">\n          <h4 className=\"text-sm font-medium text-gray-700\">Editing & Creation</h4>\n          {allowResourceCreation !== undefined && (\n            <label className=\"flex items-center text-xs\">\n              <input\n                type=\"checkbox\"\n                checked={!!allowResourceCreation}\n                onChange={(e) => onAllowResourceCreationChange?.(e.target.checked)}\n                className=\"mr-2 rounded\"\n              />\n              Allow Resource Creation\n            </label>\n          )}\n          {showPendingResourcesInList !== undefined && (\n            <label className=\"flex items-center text-xs\">\n              <input\n                type=\"checkbox\"\n                checked={!!showPendingResourcesInList}\n                onChange={(e) => onShowPendingResourcesInListChange?.(e.target.checked)}\n                className=\"mr-2 rounded\"\n              />\n              Show Pending Resources In List\n            </label>\n          )}\n        </div>\n      )}\n\n      {/* Per-Qualifier Configuration */}\n      {availableQualifiers.length > 0 && (\n        <div className=\"space-y-3 pt-3 border-t border-gray-200\">\n          <h4 className=\"text-sm font-medium text-gray-700\">Per-Qualifier Settings</h4>\n\n          <div className=\"space-y-3\">\n            {availableQualifiers.map((qualifierName) => {\n              const qualifierOptions = options.qualifierOptions?.[qualifierName] || {};\n              const hostValue = options.hostManagedValues?.[qualifierName];\n\n              return (\n                <div key={qualifierName} className=\"border border-gray-200 rounded p-3\">\n                  <h5 className=\"text-xs font-medium text-gray-800 mb-2\">{qualifierName}</h5>\n\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 mb-2\">\n                    <label className=\"flex items-center text-xs\">\n                      <input\n                        type=\"checkbox\"\n                        checked={qualifierOptions.visible !== false}\n                        onChange={(e) =>\n                          handleQualifierOptionChange(qualifierName, 'visible', e.target.checked)\n                        }\n                        className=\"mr-2 rounded\"\n                      />\n                      Visible\n                    </label>\n                    <label className=\"flex items-center text-xs\">\n                      <input\n                        type=\"checkbox\"\n                        checked={qualifierOptions.editable !== false}\n                        onChange={(e) =>\n                          handleQualifierOptionChange(qualifierName, 'editable', e.target.checked)\n                        }\n                        className=\"mr-2 rounded\"\n                      />\n                      Editable\n                    </label>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-600 mb-1\">\n                        Custom Placeholder\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={qualifierOptions.placeholder || ''}\n                        onChange={(e) =>\n                          handleQualifierOptionChange(\n                            qualifierName,\n                            'placeholder',\n                            e.target.value || undefined\n                          )\n                        }\n                        placeholder={`Enter ${qualifierName} value`}\n                        className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-600 mb-1\">\n                        Host-Managed Value\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={hostValue || ''}\n                        onChange={(e) => handleHostManagedValueChange(qualifierName, e.target.value)}\n                        placeholder=\"Leave empty for user control\"\n                        className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                      />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        When set, overrides user input and makes field readonly\n                      </p>\n                    </div>\n\n                    <label className=\"flex items-center text-xs\">\n                      <input\n                        type=\"checkbox\"\n                        checked={qualifierOptions.showHostValue !== false}\n                        onChange={(e) =>\n                          handleQualifierOptionChange(qualifierName, 'showHostValue', e.target.checked)\n                        }\n                        className=\"mr-2 rounded\"\n                      />\n                      Show Host-Managed Indicator\n                    </label>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  if (presentation === 'popover') {\n    return (\n      <div className={`relative ${className}`}>\n        <button\n          onClick={() => setShowPopover(!showPopover)}\n          className=\"flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <CogIcon className=\"w-3 h-3 mr-1\" />\n          {title}\n          <ChevronDownIcon className=\"w-3 h-3 ml-1\" />\n        </button>\n\n        {showPopover && (\n          <>\n            {/* Backdrop */}\n            <div className=\"fixed inset-0 z-10\" onClick={() => setShowPopover(false)} />\n\n            {/* Popover */}\n            <div className=\"absolute top-full left-0 mt-1 w-96 bg-white border border-gray-200 rounded-lg shadow-lg z-20 p-4 max-h-96 overflow-y-auto\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"text-sm font-medium text-gray-900\">{title}</h3>\n                <button\n                  onClick={() => setShowPopover(false)}\n                  className=\"p-1 text-gray-400 hover:text-gray-600\"\n                >\n                  <XMarkIcon className=\"w-4 h-4\" />\n                </button>\n              </div>\n              {renderControls()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  if (presentation === 'collapsible') {\n    return (\n      <div className={`border border-gray-200 rounded-lg ${className}`}>\n        <button\n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"w-full flex items-center justify-between px-4 py-2 text-sm font-medium text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-t-lg\"\n        >\n          <span className=\"flex items-center\">\n            <CogIcon className=\"w-4 h-4 mr-2\" />\n            {title}\n          </span>\n          {isExpanded ? <ChevronUpIcon className=\"w-4 h-4\" /> : <ChevronDownIcon className=\"w-4 h-4\" />}\n        </button>\n\n        {isExpanded && <div className=\"p-4 border-t border-gray-200\">{renderControls()}</div>}\n      </div>\n    );\n  }\n\n  if (presentation === 'popup') {\n    return (\n      <div className={`relative ${className}`}>\n        <button\n          onClick={() => setShowPopover(!showPopover)}\n          className=\"flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <CogIcon className=\"w-3 h-3 mr-1\" />\n          {title}\n          <ChevronDownIcon className=\"w-3 h-3 ml-1\" />\n        </button>\n\n        {showPopover && (\n          <>\n            {/* Backdrop */}\n            <div className=\"fixed inset-0 z-40\" onClick={() => setShowPopover(false)} />\n\n            {/* Modal Popup */}\n            <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n              <div className=\"bg-white border border-gray-200 rounded-lg shadow-xl max-w-2xl w-full max-h-[80vh] overflow-y-auto\">\n                <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n                  <button\n                    onClick={() => setShowPopover(false)}\n                    className=\"p-1 text-gray-400 hover:text-gray-600\"\n                  >\n                    <XMarkIcon className=\"w-5 h-5\" />\n                  </button>\n                </div>\n                <div className=\"p-4\">{renderControls()}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  // presentation === 'inline'\n  return (\n    <div className={`border border-gray-200 rounded-lg p-4 ${className}`}>\n      <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center\">\n        <CogIcon className=\"w-4 h-4 mr-2\" />\n        {title}\n      </h3>\n      {renderControls()}\n    </div>\n  );\n};\n\nexport default ResolutionContextOptionsControl;\n"]}