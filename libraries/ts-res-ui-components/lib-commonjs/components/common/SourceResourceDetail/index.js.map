{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/common/SourceResourceDetail/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ResourceDetailData } from '../../../types';\n\n/**\n * Props for the SourceResourceDetail component.\n *\n * @public\n */\nexport interface SourceResourceDetailProps {\n  /** The resource ID to display details for */\n  resourceId: string;\n  /** Processed resources containing the resource data */\n  processedResources: any;\n  /** Optional callback for handling component messages */\n  onMessage?: (type: 'info' | 'warning' | 'error' | 'success', message: string) => void;\n  /** Optional CSS classes to apply to the container */\n  className?: string;\n  /** Optional title for the detail panel */\n  title?: string;\n  // Dual-resource comparison mode props\n  /** Optional original resources for comparison mode */\n  originalProcessedResources?: any;\n  /** Optional filter context for comparison */\n  filterContext?: Record<string, string | undefined>;\n  /** Whether to show comparison view */\n  showComparison?: boolean;\n  // Configurable toggle labels\n  /** Label for primary resource view (default: 'Current') */\n  primaryLabel?: string;\n  /** Label for secondary resource view (default: 'Original') */\n  secondaryLabel?: string;\n}\n\n/**\n * A comprehensive component for displaying detailed information about a specific resource.\n *\n * SourceResourceDetail provides an in-depth view of a resource's properties, candidates,\n * conditions, and metadata. It supports both single resource display and comparison mode\n * for viewing differences between filtered and original resources. The component automatically\n * extracts and presents resource information in a structured, readable format.\n *\n * @example\n * ```tsx\n * import { SourceResourceDetail } from '@fgv/ts-res-ui-components';\n *\n * function ResourceInspector() {\n *   const [selectedResourceId, setSelectedResourceId] = useState<string>('user.welcome');\n *   const processedResources = useProcessedResources();\n *\n *   return (\n *     <SourceResourceDetail\n *       resourceId={selectedResourceId}\n *       processedResources={processedResources}\n *       title=\"Resource Inspector\"\n *       onMessage={(type, msg) => console.log(`${type}: ${msg}`)}\n *       className=\"border rounded-lg p-4\"\n *     />\n *   );\n * }\n * ```\n *\n * @example\n * ```tsx\n * // Using comparison mode to show filtered vs original resources\n * import { SourceResourceDetail, FilterTools } from '@fgv/ts-res-ui-components';\n *\n * function FilteredResourceComparison() {\n *   const { state: filterState } = FilterTools.useFilterState();\n *   const originalResources = useOriginalResources();\n *   const filteredResources = filterState.filteredResources;\n *   const [selectedId, setSelectedId] = useState<string | null>(null);\n *\n *   if (!selectedId) {\n *     return <div>Select a resource to compare</div>;\n *   }\n *\n *   return (\n *     <SourceResourceDetail\n *       resourceId={selectedId}\n *       processedResources={filteredResources}\n *       originalProcessedResources={originalResources}\n *       filterContext={filterState.appliedValues}\n *       showComparison={true}\n *       primaryLabel=\"Filtered\"\n *       secondaryLabel=\"Original\"\n *       title=\"Resource Comparison\"\n *       className=\"comparison-panel\"\n *     />\n *   );\n * }\n * ```\n *\n * @example\n * ```tsx\n * // Integration with orchestrator for comprehensive resource details\n * import { SourceResourceDetail, ResourceTools } from '@fgv/ts-res-ui-components';\n *\n * function OrchestratorResourceDetail() {\n *   const { state, actions } = ResourceTools.useResourceData();\n *\n *   if (!state.selectedResourceId || !state.resources) {\n *     return <div className=\"p-4 text-gray-500\">No resource selected</div>;\n *   }\n *\n *   return (\n *     <div className=\"resource-detail-container\">\n *       <div className=\"detail-header\">\n *         <h2>Resource: {state.selectedResourceId}</h2>\n *         <button onClick={() => actions.selectResource(null)}>Clear</button>\n *       </div>\n *       <SourceResourceDetail\n *         resourceId={state.selectedResourceId}\n *         processedResources={state.resources}\n *         originalProcessedResources={state.filterResult ? state.resources : undefined}\n *         filterContext={state.filterState.appliedValues}\n *         showComparison={!!state.filterResult}\n *         title=\"Resource Details\"\n *         onMessage={actions.addMessage}\n *         className=\"detail-content\"\n *       />\n *     </div>\n *   );\n * }\n * ```\n *\n * @public\n */\nexport const SourceResourceDetail: React.FC<SourceResourceDetailProps> = ({\n  resourceId,\n  processedResources,\n  onMessage,\n  className = '',\n  title = 'Resource Details',\n  originalProcessedResources,\n  filterContext,\n  showComparison = false,\n  primaryLabel = 'Current',\n  secondaryLabel = 'Original'\n}) => {\n  const [resourceDetail, setResourceDetail] = useState<ResourceDetailData | null>(null);\n  const [originalResourceDetail, setOriginalResourceDetail] = useState<ResourceDetailData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showFilteredView, setShowFilteredView] = useState(true);\n\n  useEffect(() => {\n    const loadResourceDetail = () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        // Helper function to extract resource detail from processed resources\n        const extractResourceDetail = (resources: any, isOriginal = false): ResourceDetailData | null => {\n          const resourceManager = resources.system.resourceManager;\n          const resourceResult = resourceManager.getBuiltResource(resourceId);\n\n          if (!resourceResult.isSuccess()) {\n            return null;\n          }\n\n          const resource = resourceResult.value;\n          let candidateDetails: any[] = [];\n\n          // Check if candidates have conditions property (ResourceManagerBuilder format)\n          if (resource.candidates.length > 0 && 'conditions' in resource.candidates[0]) {\n            // ResourceManagerBuilder format with full condition details\n            candidateDetails = resource.candidates.map((candidate: any) => ({\n              json: candidate.json,\n              conditions:\n                candidate.conditions?.conditions?.map((condition: any) => ({\n                  qualifier: condition.qualifier.name,\n                  operator: condition.operator,\n                  value: condition.value,\n                  priority: condition.priority,\n                  scoreAsDefault: condition.scoreAsDefault\n                })) || [],\n              isPartial: candidate.isPartial,\n              mergeMethod: candidate.mergeMethod\n            }));\n          } else {\n            // IResourceManager format - extract conditions from compiled collection\n            const compiledCollection = resources.compiledCollection;\n            const compiledResource = compiledCollection?.resources?.find((r: any) => r.id === resourceId);\n\n            candidateDetails = resource.candidates.map((candidate: any, index: number) => {\n              // Try to get conditions from the compiled collection\n              let conditions: any[] = [];\n\n              if (compiledResource && compiledCollection) {\n                const decision = compiledCollection.decisions?.[compiledResource.decision];\n                if (decision?.conditionSets && index < decision.conditionSets.length) {\n                  const conditionSetIndex = decision.conditionSets[index];\n                  const conditionSet = compiledCollection.conditionSets?.[conditionSetIndex];\n\n                  if (conditionSet?.conditions) {\n                    conditions = conditionSet.conditions\n                      .map((condIndex: number) => {\n                        const condition = compiledCollection.conditions?.[condIndex];\n                        const qualifier = compiledCollection.qualifiers?.[condition?.qualifierIndex];\n                        return condition && qualifier\n                          ? {\n                              qualifier: qualifier.name,\n                              operator: condition.operator || 'eq',\n                              value: condition.value,\n                              priority: condition.priority || qualifier.defaultPriority || 500,\n                              scoreAsDefault: condition.scoreAsDefault\n                            }\n                          : null;\n                      })\n                      .filter(Boolean);\n                  }\n                }\n              }\n\n              return {\n                json: candidate.json,\n                conditions: conditions,\n                isPartial: candidate.isPartial,\n                mergeMethod: candidate.mergeMethod\n              };\n            });\n          }\n\n          return {\n            id: resource.id,\n            resourceType: resource.resourceType.key || resource.resourceType.name || 'unknown',\n            candidateCount: resource.candidates.length,\n            candidates: candidateDetails\n          };\n        };\n\n        // Load current/filtered resource detail\n        const currentDetail = extractResourceDetail(processedResources, false);\n        if (currentDetail) {\n          setResourceDetail(currentDetail);\n        } else {\n          setError(`Failed to load resource details for: ${resourceId}`);\n          onMessage?.('error', `Failed to load resource details for: ${resourceId}`);\n          return;\n        }\n\n        // Load original resource detail if in comparison mode\n        if (showComparison && originalProcessedResources) {\n          const originalDetail = extractResourceDetail(originalProcessedResources, true);\n          if (originalDetail) {\n            setOriginalResourceDetail(originalDetail);\n          }\n        } else {\n          setOriginalResourceDetail(null);\n        }\n\n        onMessage?.('info', `Loaded details for resource: ${resourceId}`);\n      } catch (err) {\n        const errorMsg = `Error loading resource details: ${\n          err instanceof Error ? err.message : String(err)\n        }`;\n        setError(errorMsg);\n        onMessage?.('error', errorMsg);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadResourceDetail();\n  }, [resourceId, processedResources, originalProcessedResources, showComparison, onMessage]);\n\n  if (isLoading) {\n    return (\n      <div className={`flex flex-col h-full ${className}`}>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{title}</h3>\n        <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin h-8 w-8 border-4 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n            <p className=\"text-gray-500\">Loading resource details...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`flex flex-col h-full ${className}`}>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{title}</h3>\n        <div className=\"flex-1 border border-gray-200 rounded-lg p-4 bg-red-50\">\n          <div className=\"text-center\">\n            <p className=\"text-red-600 font-medium mb-2\">Error Loading Resource</p>\n            <p className=\"text-red-500 text-sm\">{error}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!resourceDetail) {\n    return (\n      <div className={`flex flex-col h-full ${className}`}>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{title}</h3>\n        <div className=\"flex-1 flex items-center justify-center border border-gray-200 rounded-lg bg-gray-50\">\n          <p className=\"text-gray-500\">No resource details available</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Determine which resource detail to show and comparison state\n  const currentDetail =\n    showComparison && !showFilteredView && originalResourceDetail ? originalResourceDetail : resourceDetail;\n  const isShowingPrimary = !showComparison || showFilteredView;\n\n  return (\n    <div className={`flex flex-col h-full ${className}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">{title}</h3>\n        {showComparison && originalResourceDetail && (\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-xs text-gray-500\">View:</span>\n            <button\n              onClick={() => setShowFilteredView(false)}\n              className={`px-2 py-1 text-xs rounded ${\n                !showFilteredView\n                  ? 'bg-blue-100 text-blue-800 font-medium'\n                  : 'text-gray-600 hover:bg-gray-100'\n              }`}\n            >\n              {secondaryLabel} ({originalResourceDetail.candidateCount})\n            </button>\n            <button\n              onClick={() => setShowFilteredView(true)}\n              className={`px-2 py-1 text-xs rounded ${\n                showFilteredView\n                  ? 'bg-purple-100 text-purple-800 font-medium'\n                  : 'text-gray-600 hover:bg-gray-100'\n              }`}\n            >\n              {primaryLabel} ({resourceDetail.candidateCount})\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex-1 overflow-y-auto border border-gray-200 rounded-lg p-4 bg-gray-50\">\n        <div className=\"space-y-6\">\n          {/* Resource Overview */}\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-3\">Resource Overview</h4>\n            <div className=\"bg-white p-4 rounded-lg border space-y-3\">\n              <div>\n                <span className=\"text-sm font-medium text-gray-600\">Fully Qualified ID:</span>\n                <code className=\"text-sm bg-gray-100 px-2 py-1 rounded ml-2 break-all\">\n                  {currentDetail.id}\n                </code>\n              </div>\n              <div>\n                <span className=\"text-sm font-medium text-gray-600\">Resource Type:</span>\n                <span className=\"ml-2 text-sm\">{currentDetail.resourceType}</span>\n              </div>\n              <div>\n                <span className=\"text-sm font-medium text-gray-600\">Candidate Count:</span>\n                <span\n                  className={`ml-2 text-sm font-medium ${\n                    showComparison && originalResourceDetail\n                      ? currentDetail.candidateCount === 0\n                        ? 'text-red-600'\n                        : currentDetail.candidateCount <\n                          (isShowingPrimary\n                            ? originalResourceDetail.candidateCount\n                            : resourceDetail.candidateCount)\n                        ? 'text-amber-600'\n                        : 'text-green-600'\n                      : 'text-blue-600'\n                  }`}\n                >\n                  {currentDetail.candidateCount}\n                  {showComparison &&\n                    originalResourceDetail &&\n                    currentDetail.candidateCount !==\n                      (isShowingPrimary\n                        ? originalResourceDetail.candidateCount\n                        : resourceDetail.candidateCount) && (\n                      <span className=\"text-gray-400 ml-1\">\n                        (was{' '}\n                        {isShowingPrimary\n                          ? originalResourceDetail.candidateCount\n                          : resourceDetail.candidateCount}\n                        )\n                      </span>\n                    )}\n                </span>\n              </div>\n              {showComparison && filterContext && (\n                <div>\n                  <span className=\"text-sm font-medium text-gray-600\">Filter Context:</span>\n                  <span className=\"ml-2 text-sm text-purple-700\">\n                    {Object.entries(filterContext)\n                      .filter(([, value]) => value !== undefined && value !== '')\n                      .map(([key, value]) => `${key}=${value}`)\n                      .join(', ') || 'No filters'}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Candidates */}\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-3\">\n              {showComparison && !isShowingPrimary\n                ? `${secondaryLabel} `\n                : showComparison && isShowingPrimary\n                ? `${primaryLabel} `\n                : ''}\n              Candidates ({currentDetail.candidates.length})\n            </h4>\n            {currentDetail.candidates.length > 0 ? (\n              <div className=\"space-y-4\">\n                {currentDetail.candidates.map((candidate, index) => (\n                  <div key={index} className=\"bg-white p-4 rounded-lg border\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <h5 className=\"font-medium text-gray-800\">Candidate {index + 1}</h5>\n                      <div className=\"flex items-center space-x-2 text-xs\">\n                        {candidate.isPartial && (\n                          <span className=\"bg-yellow-100 text-yellow-800 px-2 py-1 rounded\">Partial</span>\n                        )}\n                        <span className=\"bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                          {candidate.mergeMethod}\n                        </span>\n                      </div>\n                    </div>\n\n                    {/* Conditions */}\n                    {candidate.conditions.length > 0 && (\n                      <div className=\"mb-3\">\n                        <h6 className=\"text-sm font-medium text-gray-600 mb-2\">Conditions:</h6>\n                        <div className=\"space-y-1\">\n                          {candidate.conditions.map((condition, condIndex) => (\n                            <div\n                              key={condIndex}\n                              className=\"flex items-center text-xs bg-blue-50 px-2 py-1 rounded\"\n                            >\n                              <span className=\"font-medium text-blue-800\">{condition.qualifier}</span>\n                              <span className=\"mx-1 text-blue-600\">{condition.operator}</span>\n                              <span className=\"text-blue-700\">{condition.value}</span>\n                              <div className=\"ml-auto flex items-center space-x-2\">\n                                <span className=\"text-blue-500\">priority: {condition.priority}</span>\n                                {condition.scoreAsDefault !== undefined && (\n                                  <span className=\"text-amber-600 font-medium\">\n                                    default: {condition.scoreAsDefault}\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {candidate.conditions.length === 0 && (\n                      <div className=\"mb-3\">\n                        <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\n                          No conditions (default candidate)\n                        </span>\n                      </div>\n                    )}\n\n                    {/* JSON Content */}\n                    <div>\n                      <h6 className=\"text-sm font-medium text-gray-600 mb-2\">Content:</h6>\n                      <pre className=\"text-xs bg-gray-50 p-3 rounded border overflow-x-auto max-h-40\">\n                        {JSON.stringify(candidate.json, null, 2)}\n                      </pre>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"bg-red-50 border border-red-200 p-4 rounded-lg\">\n                <p className=\"text-sm text-red-700 font-medium\">No candidates available</p>\n                <p className=\"text-xs text-red-600 mt-1\">\n                  {showComparison\n                    ? 'This resource has been completely filtered out. Consider adjusting your filter criteria.'\n                    : 'This resource has no candidates defined.'}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SourceResourceDetail;\n"]}