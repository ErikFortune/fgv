{"version":3,"file":"ResourcePickerOptionsControl.js","sourceRoot":"","sources":["../../../src/components/common/ResourcePickerOptionsControl.tsx"],"names":[],"mappings":";;;;AAAA,uDAAqD;AACrD,yDAAiG;AAwBjG;;;;;;;;;;;;;;;;;GAiBG;AACI,MAAM,4BAA4B,GAAgD,CAAC,EACxF,OAAO,EACP,eAAe,EACf,YAAY,GAAG,QAAQ,EACvB,SAAS,GAAG,EAAE,EACd,gBAAgB,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,EACzD,YAAY,GAAG,IAAI,EACnB,KAAK,GAAG,gBAAgB,EACzB,EAAE,EAAE;IACH,uCAAuC;IACvC,IAAI,YAAY,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAC,YAAY,KAAK,QAAQ,CAAC,CAAC;IACxE,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAEtD,MAAM,kBAAkB,GAAG,IAAA,mBAAW,EACpC,CAAwC,GAAM,EAAE,KAA+B,EAAE,EAAE;QACjF,eAAe,CAAC;YACd,GAAG,OAAO;YACV,CAAC,GAAG,CAAC,EAAE,KAAK;SACb,CAAC,CAAC;IACL,CAAC,EACD,CAAC,OAAO,EAAE,eAAe,CAAC,CAC3B,CAAC;IAEF,MAAM,qBAAqB,GAAG,IAAA,mBAAW,EACvC,CAAC,IAAY,EAAE,EAAE;QACf,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC,EACD,CAAC,kBAAkB,CAAC,CACrB,CAAC;IAEF,MAAM,aAAa,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;QACrC,kBAAkB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC1C,kBAAkB,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAEzB,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,CAC3B,uCAAK,SAAS,EAAC,WAAW;QAExB,uCAAK,SAAS,EAAC,WAAW;YACxB,sCAAI,SAAS,EAAC,mCAAmC,oBAAmB;YAEpE,uCAAK,SAAS,EAAC,uCAAuC;gBACpD;oBACE,yCAAO,SAAS,EAAC,8CAA8C,mBAAqB;oBACpF,0CACE,KAAK,EAAE,OAAO,CAAC,WAAW,IAAI,MAAM,EACpC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC,MAAM,CAAC,KAAwB,CAAC,EACrF,SAAS,EAAC,6GAA6G;wBAEvH,0CAAQ,KAAK,EAAC,MAAM,WAAc;wBAClC,0CAAQ,KAAK,EAAC,MAAM,WAAc,CAC3B,CACL;gBAEN;oBACE,yCAAO,SAAS,EAAC,8CAA8C,mBAAqB;oBACpF,0CACE,KAAK,EAAE,OAAO,CAAC,WAAW,IAAI,KAAK,EACnC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC,MAAM,CAAC,KAAiC,CAAC,EAC9F,SAAS,EAAC,6GAA6G,EACvH,QAAQ,EAAE,CAAC,OAAO,CAAC,YAAY;wBAE/B,0CAAQ,KAAK,EAAC,KAAK,oBAAuB;wBAC1C,0CAAQ,KAAK,EAAC,gBAAgB,qBAAwB,CAC/C,CACL,CACF;YAEN,uCAAK,SAAS,EAAC,WAAW;gBACxB,yCAAO,SAAS,EAAC,2BAA2B;oBAC1C,yCACE,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,OAAO,CAAC,YAAY,IAAI,IAAI,EACrC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EACrE,SAAS,EAAC,cAAc,GACxB;oCAEI;gBACR,yCAAO,SAAS,EAAC,2BAA2B;oBAC1C,yCACE,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,OAAO,CAAC,cAAc,IAAI,IAAI,EACvC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EACvE,SAAS,EAAC,cAAc,GACxB;uCAEI,CACJ;YAEL,OAAO,CAAC,YAAY,IAAI,CACvB;gBACE,yCAAO,SAAS,EAAC,8CAA8C,yBAA2B;gBAC1F,yCACE,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,OAAO,CAAC,iBAAiB,IAAI,EAAE,EACtC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,SAAS,CAAC,EACrF,WAAW,EAAC,qBAAqB,EACjC,SAAS,EAAC,6GAA6G,GACvH,CACE,CACP,CACG;QAGL,YAAY,IAAI,CACf,uCAAK,SAAS,EAAC,yCAAyC;YACtD,sCAAI,SAAS,EAAC,mCAAmC,uBAAsB;YAEvE;gBACE,yCAAO,SAAS,EAAC,8CAA8C,gBAAkB;gBACjF,yCACE,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,OAAO,CAAC,QAAQ,IAAI,EAAE,EAC7B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,SAAS,CAAC,EAC5E,WAAW,EAAC,yBAAyB,EACrC,SAAS,EAAC,6GAA6G,GACvH;gBACF,qCAAG,SAAS,EAAC,4BAA4B,0CAAwC,CAC7E;YAEN;gBACE,yCAAO,SAAS,EAAC,2BAA2B;oBAC1C,yCACE,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,OAAO,CAAC,YAAY,IAAI,KAAK,EACtC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EACrE,SAAS,EAAC,cAAc,EACxB,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,GAC3B;qCAEI;gBACR,qCAAG,SAAS,EAAC,iCAAiC,2DAE1C,CACA;YAGN;gBACE,yCAAO,SAAS,EAAC,8CAA8C,kBAAoB;gBACnF,uCAAK,SAAS,EAAC,sBAAsB;oBAClC,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAC9B,0CACE,GAAG,EAAE,IAAI,EACT,OAAO,EAAE,GAAG,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAC1C,SAAS,EAAE,oCACT,OAAO,CAAC,QAAQ,KAAK,IAAI;4BACvB,CAAC,CAAC,2CAA2C;4BAC7C,CAAC,CAAC,4DACN,EAAE,IAED,IAAI,CACE,CACV,CAAC;oBACF,0CACE,OAAO,EAAE,aAAa,EACtB,SAAS,EAAE,oCACT,CAAC,OAAO,CAAC,QAAQ;4BACf,CAAC,CAAC,2CAA2C;4BAC7C,CAAC,CAAC,4DACN,EAAE,YAGK,CACL,CACF,CACF,CACP;QAGD,uCAAK,SAAS,EAAC,yCAAyC;YACtD,sCAAI,SAAS,EAAC,mCAAmC,cAAa;YAE9D;gBACE,yCAAO,SAAS,EAAC,8CAA8C,oBAAsB;gBACrF,yCACE,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,OAAO,CAAC,YAAY,IAAI,EAAE,EACjC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,SAAS,CAAC,EAChF,WAAW,EAAC,wBAAwB,EACpC,SAAS,EAAC,6GAA6G,GACvH,CACE;YAEN;gBACE,yCAAO,SAAS,EAAC,8CAA8C,aAAe;gBAC9E,yCACE,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,OAAO,CAAC,MAAM,IAAI,EAAE,EAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,SAAS,CAAC,EAC1E,WAAW,EAAC,OAAO,EACnB,SAAS,EAAC,6GAA6G,GACvH;gBACF,qCAAG,SAAS,EAAC,4BAA4B,0CAAwC,CAC7E,CACF,CACF,CACP,CAAC;IAEF,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;QAC/B,OAAO,CACL,uCAAK,SAAS,EAAE,YAAY,SAAS,EAAE;YACrC,0CACE,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,EAC3C,SAAS,EAAC,8KAA8K;gBAExL,8BAAC,iBAAO,IAAC,SAAS,EAAC,cAAc,GAAG;gBACnC,KAAK;gBACN,8BAAC,yBAAe,IAAC,SAAS,EAAC,cAAc,GAAG,CACrC;YAER,WAAW,IAAI,CACd;gBAEE,uCAAK,SAAS,EAAC,oBAAoB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,GAAI;gBAG5E,uCAAK,SAAS,EAAC,kGAAkG;oBAC/G,uCAAK,SAAS,EAAC,wCAAwC;wBACrD,sCAAI,SAAS,EAAC,mCAAmC,IAAE,KAAK,CAAM;wBAC9D,0CACE,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,EACpC,SAAS,EAAC,uCAAuC;4BAEjD,8BAAC,mBAAS,IAAC,SAAS,EAAC,SAAS,GAAG,CAC1B,CACL;oBACL,cAAc,EAAE,CACb,CACL,CACJ,CACG,CACP,CAAC;IACJ,CAAC;IAED,IAAI,YAAY,KAAK,aAAa,EAAE,CAAC;QACnC,OAAO,CACL,uCAAK,SAAS,EAAE,qCAAqC,SAAS,EAAE;YAC9D,0CACE,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,EACzC,SAAS,EAAC,oLAAoL;gBAE9L,wCAAM,SAAS,EAAC,mBAAmB;oBACjC,8BAAC,iBAAO,IAAC,SAAS,EAAC,cAAc,GAAG;oBACnC,KAAK,CACD;gBACN,UAAU,CAAC,CAAC,CAAC,8BAAC,uBAAa,IAAC,SAAS,EAAC,SAAS,GAAG,CAAC,CAAC,CAAC,8BAAC,yBAAe,IAAC,SAAS,EAAC,SAAS,GAAG,CACtF;YAER,UAAU,IAAI,uCAAK,SAAS,EAAC,8BAA8B,IAAE,cAAc,EAAE,CAAO,CACjF,CACP,CAAC;IACJ,CAAC;IAED,IAAI,YAAY,KAAK,OAAO,EAAE,CAAC;QAC7B,OAAO,CACL,uCAAK,SAAS,EAAE,YAAY,SAAS,EAAE;YACrC,0CACE,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,EAC3C,SAAS,EAAC,8KAA8K;gBAExL,8BAAC,iBAAO,IAAC,SAAS,EAAC,cAAc,GAAG;gBACnC,KAAK;gBACN,8BAAC,yBAAe,IAAC,SAAS,EAAC,cAAc,GAAG,CACrC;YAER,WAAW,IAAI,CACd;gBAEE,uCAAK,SAAS,EAAC,oBAAoB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,GAAI;gBAG5E,uCAAK,SAAS,EAAC,yDAAyD;oBACtE,uCAAK,SAAS,EAAC,+FAA+F;wBAC5G,uCAAK,SAAS,EAAC,gEAAgE;4BAC7E,sCAAI,SAAS,EAAC,mCAAmC,IAAE,KAAK,CAAM;4BAC9D,0CACE,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,EACpC,SAAS,EAAC,uCAAuC;gCAEjD,8BAAC,mBAAS,IAAC,SAAS,EAAC,SAAS,GAAG,CAC1B,CACL;wBACN,uCAAK,SAAS,EAAC,KAAK,IAAE,cAAc,EAAE,CAAO,CACzC,CACF,CACL,CACJ,CACG,CACP,CAAC;IACJ,CAAC;IAED,4BAA4B;IAC5B,OAAO,CACL,uCAAK,SAAS,EAAE,yCAAyC,SAAS,EAAE;QAClE,sCAAI,SAAS,EAAC,0DAA0D;YACtE,8BAAC,iBAAO,IAAC,SAAS,EAAC,cAAc,GAAG;YACnC,KAAK,CACH;QACJ,cAAc,EAAE,CACb,CACP,CAAC;AACJ,CAAC,CAAC;AAjTW,QAAA,4BAA4B,gCAiTvC;AAEF,kBAAe,oCAA4B,CAAC","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { CogIcon, ChevronDownIcon, ChevronUpIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { ResourcePickerOptions } from '../pickers/ResourcePicker/types';\n\n/**\n * Props for the ResourcePickerOptionsControl component.\n * @public\n */\nexport interface ResourcePickerOptionsControlProps {\n  /** Current picker options */\n  options: ResourcePickerOptions;\n  /** Callback when options change */\n  onOptionsChange: (options: ResourcePickerOptions) => void;\n  /** How to present the options control (default: 'hidden' for production use) */\n  presentation?: 'hidden' | 'inline' | 'collapsible' | 'popup' | 'popover';\n  /** Custom class name */\n  className?: string;\n  /** Available quick branch paths for selection */\n  quickBranchPaths?: string[];\n  /** Whether to show advanced options like branch isolation */\n  showAdvanced?: boolean;\n  /** Title for the control section */\n  title?: string;\n}\n\n/**\n * Reusable control for configuring ResourcePicker options.\n *\n * Provides a clean interface for adjusting picker behavior including:\n * - View mode selection (list/tree)\n * - Search and view toggle settings\n * - Branch isolation configuration\n * - Quick path selection buttons\n *\n * Can be rendered in multiple presentation modes:\n * - 'hidden': Not displayed (default for production)\n * - 'inline': Always expanded with full controls visible\n * - 'collapsible': Expandable/collapsible section\n * - 'popover': Small dropdown overlay\n * - 'popup': Full modal dialog\n *\n * @public\n */\nexport const ResourcePickerOptionsControl: React.FC<ResourcePickerOptionsControlProps> = ({\n  options,\n  onOptionsChange,\n  presentation = 'hidden',\n  className = '',\n  quickBranchPaths = ['strings', 'app', 'images', 'app.ui'],\n  showAdvanced = true,\n  title = 'Picker Options'\n}) => {\n  // Early return for hidden presentation\n  if (presentation === 'hidden') {\n    return null;\n  }\n\n  const [isExpanded, setIsExpanded] = useState(presentation === 'inline');\n  const [showPopover, setShowPopover] = useState(false);\n\n  const handleOptionChange = useCallback(\n    <K extends keyof ResourcePickerOptions>(key: K, value: ResourcePickerOptions[K]) => {\n      onOptionsChange({\n        ...options,\n        [key]: value\n      });\n    },\n    [options, onOptionsChange]\n  );\n\n  const handleQuickPathSelect = useCallback(\n    (path: string) => {\n      handleOptionChange('rootPath', path);\n    },\n    [handleOptionChange]\n  );\n\n  const clearRootPath = useCallback(() => {\n    handleOptionChange('rootPath', undefined);\n    handleOptionChange('hideRootNode', false);\n  }, [handleOptionChange]);\n\n  const renderControls = () => (\n    <div className=\"space-y-4\">\n      {/* Basic Settings */}\n      <div className=\"space-y-3\">\n        <h4 className=\"text-sm font-medium text-gray-700\">View Settings</h4>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n          <div>\n            <label className=\"block text-xs font-medium text-gray-600 mb-1\">Default View</label>\n            <select\n              value={options.defaultView || 'list'}\n              onChange={(e) => handleOptionChange('defaultView', e.target.value as 'list' | 'tree')}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n            >\n              <option value=\"list\">List</option>\n              <option value=\"tree\">Tree</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-xs font-medium text-gray-600 mb-1\">Search Scope</label>\n            <select\n              value={options.searchScope || 'all'}\n              onChange={(e) => handleOptionChange('searchScope', e.target.value as 'all' | 'current-branch')}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n              disabled={!options.enableSearch}\n            >\n              <option value=\"all\">All Resources</option>\n              <option value=\"current-branch\">Current Branch</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"flex items-center text-xs\">\n            <input\n              type=\"checkbox\"\n              checked={options.enableSearch ?? true}\n              onChange={(e) => handleOptionChange('enableSearch', e.target.checked)}\n              className=\"mr-2 rounded\"\n            />\n            Enable Search\n          </label>\n          <label className=\"flex items-center text-xs\">\n            <input\n              type=\"checkbox\"\n              checked={options.showViewToggle ?? true}\n              onChange={(e) => handleOptionChange('showViewToggle', e.target.checked)}\n              className=\"mr-2 rounded\"\n            />\n            Show View Toggle\n          </label>\n        </div>\n\n        {options.enableSearch && (\n          <div>\n            <label className=\"block text-xs font-medium text-gray-600 mb-1\">Search Placeholder</label>\n            <input\n              type=\"text\"\n              value={options.searchPlaceholder || ''}\n              onChange={(e) => handleOptionChange('searchPlaceholder', e.target.value || undefined)}\n              placeholder=\"Search resources...\"\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Branch Isolation */}\n      {showAdvanced && (\n        <div className=\"space-y-3 pt-3 border-t border-gray-200\">\n          <h4 className=\"text-sm font-medium text-gray-700\">Branch Isolation</h4>\n\n          <div>\n            <label className=\"block text-xs font-medium text-gray-600 mb-1\">Root Path</label>\n            <input\n              type=\"text\"\n              value={options.rootPath || ''}\n              onChange={(e) => handleOptionChange('rootPath', e.target.value || undefined)}\n              placeholder=\"e.g., strings or app.ui\"\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">Show only resources under this path</p>\n          </div>\n\n          <div>\n            <label className=\"flex items-center text-xs\">\n              <input\n                type=\"checkbox\"\n                checked={options.hideRootNode ?? false}\n                onChange={(e) => handleOptionChange('hideRootNode', e.target.checked)}\n                className=\"mr-2 rounded\"\n                disabled={!options.rootPath}\n              />\n              Hide Root Node\n            </label>\n            <p className=\"text-xs text-gray-500 mt-1 ml-5\">\n              Show only children of root path (requires Root Path)\n            </p>\n          </div>\n\n          {/* Quick Branch Selection */}\n          <div>\n            <label className=\"block text-xs font-medium text-gray-600 mb-2\">Quick Paths</label>\n            <div className=\"flex flex-wrap gap-1\">\n              {quickBranchPaths.map((path) => (\n                <button\n                  key={path}\n                  onClick={() => handleQuickPathSelect(path)}\n                  className={`px-2 py-1 text-xs rounded border ${\n                    options.rootPath === path\n                      ? 'bg-blue-100 border-blue-300 text-blue-700'\n                      : 'bg-gray-50 border-gray-300 text-gray-600 hover:bg-gray-100'\n                  }`}\n                >\n                  {path}\n                </button>\n              ))}\n              <button\n                onClick={clearRootPath}\n                className={`px-2 py-1 text-xs rounded border ${\n                  !options.rootPath\n                    ? 'bg-blue-100 border-blue-300 text-blue-700'\n                    : 'bg-gray-50 border-gray-300 text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                Clear\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Display Settings */}\n      <div className=\"space-y-3 pt-3 border-t border-gray-200\">\n        <h4 className=\"text-sm font-medium text-gray-700\">Display</h4>\n\n        <div>\n          <label className=\"block text-xs font-medium text-gray-600 mb-1\">Empty Message</label>\n          <input\n            type=\"text\"\n            value={options.emptyMessage || ''}\n            onChange={(e) => handleOptionChange('emptyMessage', e.target.value || undefined)}\n            placeholder=\"No resources available\"\n            className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-xs font-medium text-gray-600 mb-1\">Height</label>\n          <input\n            type=\"text\"\n            value={options.height || ''}\n            onChange={(e) => handleOptionChange('height', e.target.value || undefined)}\n            placeholder=\"600px\"\n            className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">CSS height value (px, rem, %, etc.)</p>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (presentation === 'popover') {\n    return (\n      <div className={`relative ${className}`}>\n        <button\n          onClick={() => setShowPopover(!showPopover)}\n          className=\"flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <CogIcon className=\"w-3 h-3 mr-1\" />\n          {title}\n          <ChevronDownIcon className=\"w-3 h-3 ml-1\" />\n        </button>\n\n        {showPopover && (\n          <>\n            {/* Backdrop */}\n            <div className=\"fixed inset-0 z-10\" onClick={() => setShowPopover(false)} />\n\n            {/* Popover */}\n            <div className=\"absolute top-full left-0 mt-1 w-80 bg-white border border-gray-200 rounded-lg shadow-lg z-20 p-4\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"text-sm font-medium text-gray-900\">{title}</h3>\n                <button\n                  onClick={() => setShowPopover(false)}\n                  className=\"p-1 text-gray-400 hover:text-gray-600\"\n                >\n                  <XMarkIcon className=\"w-4 h-4\" />\n                </button>\n              </div>\n              {renderControls()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  if (presentation === 'collapsible') {\n    return (\n      <div className={`border border-gray-200 rounded-lg ${className}`}>\n        <button\n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"w-full flex items-center justify-between px-4 py-2 text-sm font-medium text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-t-lg\"\n        >\n          <span className=\"flex items-center\">\n            <CogIcon className=\"w-4 h-4 mr-2\" />\n            {title}\n          </span>\n          {isExpanded ? <ChevronUpIcon className=\"w-4 h-4\" /> : <ChevronDownIcon className=\"w-4 h-4\" />}\n        </button>\n\n        {isExpanded && <div className=\"p-4 border-t border-gray-200\">{renderControls()}</div>}\n      </div>\n    );\n  }\n\n  if (presentation === 'popup') {\n    return (\n      <div className={`relative ${className}`}>\n        <button\n          onClick={() => setShowPopover(!showPopover)}\n          className=\"flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <CogIcon className=\"w-3 h-3 mr-1\" />\n          {title}\n          <ChevronDownIcon className=\"w-3 h-3 ml-1\" />\n        </button>\n\n        {showPopover && (\n          <>\n            {/* Backdrop */}\n            <div className=\"fixed inset-0 z-40\" onClick={() => setShowPopover(false)} />\n\n            {/* Modal Popup */}\n            <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n              <div className=\"bg-white border border-gray-200 rounded-lg shadow-xl max-w-md w-full max-h-96 overflow-y-auto\">\n                <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n                  <button\n                    onClick={() => setShowPopover(false)}\n                    className=\"p-1 text-gray-400 hover:text-gray-600\"\n                  >\n                    <XMarkIcon className=\"w-5 h-5\" />\n                  </button>\n                </div>\n                <div className=\"p-4\">{renderControls()}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  // presentation === 'inline'\n  return (\n    <div className={`border border-gray-200 rounded-lg p-4 ${className}`}>\n      <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center\">\n        <CogIcon className=\"w-4 h-4 mr-2\" />\n        {title}\n      </h3>\n      {renderControls()}\n    </div>\n  );\n};\n\nexport default ResourcePickerOptionsControl;\n"]}