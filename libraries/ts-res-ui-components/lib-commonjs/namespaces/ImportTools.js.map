{"version":3,"file":"ImportTools.js","sourceRoot":"","sources":["../../src/namespaces/ImportTools.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;;;AAEH,8DAA8D;AAC9D,6DAA4D;AAAnD,wGAAA,UAAU,OAAA;AAEnB,mCAAmC;AACnC,0DAKiC;AAJ/B,oHAAA,kBAAkB,OAAA;AAClB,kHAAA,gBAAgB,OAAA;AAChB,8GAAA,YAAY,OAAA;AACZ,0HAAA,wBAAwB,OAAA","sourcesContent":["/**\n * Tools and utilities for import operations and file processing.\n *\n * This namespace contains the ImportView component and functions for reading files\n * from inputs, processing directories, and exporting data in various formats including\n * JSON and ZIP. It provides a comprehensive toolkit for handling resource imports\n * and file operations.\n *\n * @example\n * ```tsx\n * import { ImportTools } from '@fgv/ts-res-ui-components';\n *\n * // Use the ImportView component for file/directory imports\n * <ImportTools.ImportView\n *   onImport={handleFileImport}\n *   onBundleImport={handleBundleImport}\n *   onZipImport={handleZipImport}\n *   onMessage={onMessage}\n * />\n *\n * // Or use utility functions for file processing\n * const files = await ImportTools.readFilesFromInput(fileInput);\n * const directory = ImportTools.filesToDirectory(files);\n * ImportTools.exportAsJson(data, 'my-resources.json');\n * ```\n *\n * @public\n */\n\n// Export the ImportView component (dual export with ZipTools)\nexport { ImportView } from '../components/views/ImportView';\n\n// Export file processing utilities\nexport {\n  readFilesFromInput,\n  filesToDirectory,\n  exportAsJson,\n  exportUsingFileSystemAPI\n} from '../utils/fileProcessing';\n\n// Export types related to file handling and processing\nexport type { ImportedFile, ImportedDirectory, ImportViewProps } from '../types';\n"]}