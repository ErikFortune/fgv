{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/namespaces/index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCG;;;;AAEH,qEAA6C;AAC7C,6EAAqD;AACrD,mFAA2D;AAC3D,yEAAiD;AACjD,qEAA6C;AAC7C,mEAA2C;AAC3C,2EAAmD;AACnD,+DAAuC;AACvC,qEAA6C;AAC7C,iEAAyC;AACzC,mFAA2D","sourcesContent":["/**\n * Organized tool namespaces for ts-res-ui-components.\n *\n * Tools include both view components and utility functions organized into logical\n * namespaces to improve discoverability and reduce the flat export list in the main API.\n *\n * @example\n * ```tsx\n * import {\n *   FilterTools,\n *   ResolutionTools,\n *   ResourceTools,\n *   ViewStateTools,\n *   ImportTools,\n *   ZipTools,\n *   PickerTools\n * } from '@fgv/ts-res-ui-components';\n *\n * // Use view components\n * <FilterTools.FilterView {...filterProps} />\n * <ResolutionTools.ResolutionView {...resolutionProps} />\n * <ViewStateTools.MessagesWindow {...messageProps} />\n * <ImportTools.ImportView {...importProps} />\n * <PickerTools.ResourcePicker {...pickerProps} />\n *\n * // Use hooks for state management\n * const { state, actions } = ResourceTools.useResourceData();\n * const { messages, addMessage } = ViewStateTools.useViewState();\n * const { state: filterState } = FilterTools.useFilterState();\n *\n * // Or use utility functions\n * const hasFilters = FilterTools.hasFilterValues(filterState.values);\n * const resolver = ResolutionTools.createResolverWithContext(resources, context);\n * const files = await ImportTools.readFilesFromInput(fileInput);\n * const zipLoader = ZipTools.createBrowserZipLoader();\n * ```\n *\n * @public\n */\n\nexport * as FilterTools from './FilterTools';\nexport * as ResolutionTools from './ResolutionTools';\nexport * as ConfigurationTools from './ConfigurationTools';\nexport * as ResourceTools from './ResourceTools';\nexport * as ImportTools from './ImportTools';\nexport * as TsResTools from './TsResTools';\nexport * as ViewStateTools from './ViewStateTools';\nexport * as ZipTools from './ZipTools';\nexport * as PickerTools from './PickerTools';\nexport * as GridTools from './GridTools';\nexport * as ObservabilityTools from './ObservabilityTools';\n"]}