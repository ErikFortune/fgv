{"version":3,"file":"FilterTools.js","sourceRoot":"","sources":["../../src/namespaces/FilterTools.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;;;AAEH,uCAAuC;AACvC,6DAA4D;AAAnD,wGAAA,UAAU,OAAA;AAEnB,8BAA8B;AAC9B,0DAAyD;AAAhD,gHAAA,cAAc,OAAA;AAEvB,2BAA2B;AAC3B,4DAMkC;AALhC,sIAAA,mCAAmC,OAAA;AACnC,2HAAA,wBAAwB,OAAA;AACxB,kHAAA,eAAe,OAAA;AACf,mHAAA,gBAAgB,OAAA","sourcesContent":["/**\n * Tools and components for resource filtering operations.\n *\n * This namespace contains the FilterView component, utility functions for creating\n * filtered resource managers, analyzing filter results, and managing filter state.\n *\n * @example\n * ```tsx\n * import { FilterTools } from '@fgv/ts-res-ui-components';\n *\n * // Use the FilterView component\n * <FilterTools.FilterView\n *   resources={processedResources}\n *   filterState={filterState}\n *   filterActions={filterActions}\n *   onMessage={onMessage}\n * />\n *\n * // Or use utility functions\n * if (FilterTools.hasFilterValues(filterState.values)) {\n *   const filtered = FilterTools.createFilteredResourceManagerSimple(\n *     resources,\n *     filterState.appliedValues\n *   );\n * }\n * ```\n *\n * @public\n */\n\n// Export the main FilterView component\nexport { FilterView } from '../components/views/FilterView';\n\n// Export domain-specific hook\nexport { useFilterState } from '../hooks/useFilterState';\n\n// Export utility functions\nexport {\n  createFilteredResourceManagerSimple,\n  analyzeFilteredResources,\n  hasFilterValues,\n  getFilterSummary,\n  type FilterOptions\n} from '../utils/filterResources';\n\n// Export types related to filtering\nexport type { FilterState, FilterActions, FilterViewProps, FilterResult, FilteredResource } from '../types';\n"]}