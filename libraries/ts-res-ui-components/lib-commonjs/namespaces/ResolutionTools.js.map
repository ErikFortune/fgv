{"version":3,"file":"ResolutionTools.js","sourceRoot":"","sources":["../../src/namespaces/ResolutionTools.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;;;AAEH,2CAA2C;AAC3C,qEAAoE;AAA3D,gHAAA,cAAc,OAAA;AAEvB,2CAA2C;AAC3C,wFAAuF;AAA9E,oHAAA,gBAAgB,OAAA;AACzB,kGAAiG;AAAxF,8HAAA,qBAAqB,OAAA;AAC9B,wFAAuF;AAA9E,kIAAA,uBAAuB,OAAA;AAChC,wGAAuG;AAA9F,kJAAA,+BAA+B,OAAA;AAExC,8BAA8B;AAC9B,kEAAiE;AAAxD,wHAAA,kBAAkB,OAAA;AAE3B,2BAA2B;AAC3B,4DAOkC;AANhC,4HAAA,yBAAyB,OAAA;AACzB,iIAAA,8BAA8B,OAAA;AAC9B,0HAAA,uBAAuB,OAAA;AACvB,yHAAA,sBAAsB,OAAA;AACtB,2HAAA,wBAAwB,OAAA;AAI1B,6EAA6E;AAC7E,gEAQoC;AAPlC,8HAAA,yBAAyB,OAAA;AACzB,sHAAA,iBAAiB,OAAA;AACjB,iHAAA,YAAY,OAAA;AACZ,iHAAA,YAAY,OAAA;AACZ,4HAAA,uBAAuB,OAAA;AACvB,4HAAA,uBAAuB,OAAA;AACvB,gIAAA,2BAA2B,OAAA","sourcesContent":["/**\n * Tools and components for resource resolution operations.\n *\n * This namespace contains the ResolutionView component and utility functions for\n * creating resolvers, evaluating conditions, and managing resolution context for\n * resource resolution testing and analysis.\n *\n * @example\n * ```tsx\n * import { ResolutionTools } from '@fgv/ts-res-ui-components';\n *\n * // Use the ResolutionView component\n * <ResolutionTools.ResolutionView\n *   resources={processedResources}\n *   resolutionState={resolutionState}\n *   resolutionActions={resolutionActions}\n *   editorFactory={customEditorFactory}\n *   onMessage={onMessage}\n * />\n *\n * // Or use utility functions\n * const resolver = ResolutionTools.createResolverWithContext(\n *   processedResources,\n *   { language: 'en-US', platform: 'web' }\n * );\n * ```\n *\n * @public\n */\n\n// Export the main ResolutionView component\nexport { ResolutionView } from '../components/views/ResolutionView';\n\n// Export resolution-related sub-components\nexport { EditableJsonView } from '../components/views/ResolutionView/EditableJsonView';\nexport { UnifiedChangeControls } from '../components/views/ResolutionView/UnifiedChangeControls';\nexport { QualifierContextControl } from '../components/common/QualifierContextControl';\nexport { ResolutionContextOptionsControl } from '../components/common/ResolutionContextOptionsControl';\n\n// Export domain-specific hook\nexport { useResolutionState } from '../hooks/useResolutionState';\n\n// Export utility functions\nexport {\n  createResolverWithContext,\n  evaluateConditionsForCandidate,\n  resolveResourceDetailed,\n  getAvailableQualifiers,\n  hasPendingContextChanges,\n  type ResolutionOptions\n} from '../utils/resolutionUtils';\n\n// Export resource selector utility functions for pending resource management\nexport {\n  getPendingAdditionsByType,\n  isPendingAddition,\n  deriveLeafId,\n  deriveFullId,\n  getPendingResourceTypes,\n  getPendingResourceStats,\n  validatePendingResourceKeys\n} from '../utils/resourceSelectors';\n\n// Export types related to resource resolution\nexport type {\n  ResolutionState,\n  ResolutionActions,\n  ResolutionViewProps,\n  ResolutionResult,\n  CandidateInfo,\n  ConditionEvaluationResult,\n  EditedResourceInfo,\n  ResolutionContextOptions,\n  QualifierControlOptions,\n  CreatePendingResourceParams\n} from '../types';\n\n// Export types for resolution components\nexport type { EditableJsonViewProps } from '../components/views/ResolutionView/EditableJsonView';\nexport type { ResolutionContextOptionsControlProps } from '../components/common/ResolutionContextOptionsControl';\n"]}